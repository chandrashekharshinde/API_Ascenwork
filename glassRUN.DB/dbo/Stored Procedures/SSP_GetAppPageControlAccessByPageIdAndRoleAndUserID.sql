CREATE PROCEDURE [dbo].[SSP_GetAppPageControlAccessByPageIdAndRoleAndUserID] --'<Json><ServicesAction>GetPageControlAccessByPageIdAndRoleAndUserID</ServicesAction><PageName>Approve Enquiries</PageName><RoleId>3</RoleId><UserId>8</UserId></Json>'@xmlDoc XMLAS BEGINDECLARE @intPointer INT;declare @roleId BIGINTDeclare @UserId bigintDeclare @UserName nvarchar(250)Declare @pageUrl nvarchar(250)=''Declare @PageId bigintDeclare @PageType bigintEXEC sp_xml_preparedocument @intpointer OUTPUT,@xmlDocSELECT @roleId = tmp.[RoleId],@UserId =tmp.[UserId],@UserName =tmp.[UserName],@PageType=tmp.[PageType],@pageUrl=tmp.[pageUrl]FROM OPENXML(@intpointer,'Json',2)			WITH			(				[PageType] bigint,							[RoleId] bigint,							 [UserId] bigint,							 [UserName] nvarchar(250),							 [pageUrl] nvarchar(250)			)tmp;select @roleId=RoleMasterId,@UserId=LoginId  From Login  where UserName=@UserNameif(exists(select *From  RoleWiseFieldAccess  where PageId=@PageId and LoginId=@UserId))begin set @roleId  = 0endelse beginset @UserId  = 0end;set @UserId  = 0;WITH XMLNAMESPACES('http://james.newtonking.com/projects/json' AS json)  SELECT CAST((SELECT 'true' AS [@json:Array], pc.ControlName ,  pc.ResourceKey, isnull(rwfa.AccessId,0 ) as AccessId ,ISNULL(pc.DataSource,'0') as DataSource,rwfa.RoleId,rwfa.LoginId,p.PageName,p.ControllerName as PageURL,ISNULL(pc.IsMandatory,0) as IsMandatory,ISNULL(pc.ValidationExpression,'-') As ValidationExpression,pc.ControlTypeFrom PageControl   pc  left join  RoleWiseFieldAccess  rwfa  on pc.PageId=rwfa.PageId and pc.PageControlId =rwfa.PageControlId  and rwfa.IsActive=1   left join Pages p on p.PageId=pc.PageId where pc.IsActive=1 and p.PageType=@PageType and(rwfa.RoleId=@RoleId  and rwfa.LoginId =@UserId)and (p.ControllerName=@pageUrl or @pageUrl='')				FOR XML path('PageControlList'),ELEMENTS,ROOT('Json')) AS XML)END
