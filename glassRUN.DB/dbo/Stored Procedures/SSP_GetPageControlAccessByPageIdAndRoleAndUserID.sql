CREATE PROCEDURE [dbo].[SSP_GetPageControlAccessByPageIdAndRoleAndUserID] --'<Json><ServicesAction>GetPageControlAccessByPageIdAndRoleAndUserID</ServicesAction><PageName>Approve Enquiries</PageName><RoleId>3</RoleId><UserId>8</UserId></Json>'@xmlDoc XMLAS BEGINDECLARE @intPointer INT;declare @roleId BIGINTDeclare @UserId bigintDeclare @PageName nvarchar(250)Declare @PageId bigintEXEC sp_xml_preparedocument @intpointer OUTPUT,@xmlDocSELECT @roleId = tmp.[RoleId],@UserId =tmp.[UserId],@PageName =tmp.[PageName]	FROM OPENXML(@intpointer,'Json',2)			WITH			(							[RoleId] bigint,							 [UserId] bigint,							 PageName nvarchar(250)			)tmp;			print  '@@roleId' + Convert(nvarchar(250),@roleId) 			print  '@@UserId' + Convert(nvarchar(250),@UserId) 			print  '@@PageName' + Convert(nvarchar(250),@PageName) 			set @PageId  =(select PageId  From Pages  where PageName=@PageName)			print  '@PageId' + Convert(nvarchar(250),@PageId) if(exists(select *From  RoleWiseFieldAccess  where PageId=@PageId and LoginId=@UserId))begin set @roleId  = 0 	endelse beginset @UserId  = 0end;WITH XMLNAMESPACES('http://james.newtonking.com/projects/json' AS json)  SELECT CAST((SELECT 'true' AS [@json:Array], pc.ControlName , isnull(rwfa.AccessId,0 ) as AccessId ,ISNULL(pc.DataSource,'0') as DataSource,rwfa.RoleId,rwfa.LoginId,p.PageName,ISNULL(pc.IsMandatory,0) as IsMandatory,ISNULL(pc.ValidationExpression,'') As ValidationExpression,pc.ControlTypeFrom PageControl   pc  left join  RoleWiseFieldAccess  rwfa  on pc.PageId=rwfa.PageId and pc.PageControlId =rwfa.PageControlId  and rwfa.IsActive=1   left join Pages p on p.PageId=pc.PageId where pc.IsActive=1--pc.PageId=@PageId  and rwfa.RoleId=@RoleId  and rwfa.LoginId =@UserId				FOR XML path('PageControlList'),ELEMENTS,ROOT('Json')) AS XML)END