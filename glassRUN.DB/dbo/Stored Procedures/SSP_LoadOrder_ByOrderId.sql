CREATE PROCEDURE [dbo].[SSP_LoadOrder_ByOrderId] --'<Json><ServicesAction>LoadOrderByOrderId</ServicesAction><OrderId>729</OrderId><RoleId>3</RoleId><CultureId>1101</CultureId></Json>'@xmlDoc XMLASBEGINDECLARE @intPointer INT;declare @orderId nvarchar(100)declare @roleId BIGINTdeclare @CultureId bigintEXEC sp_xml_preparedocument @intpointer OUTPUT,@xmlDocSELECT @orderId = tmp.[OrderId],       @roleId = tmp.[RoleId],       @CultureId = tmp.[CultureId] FROM OPENXML(@intpointer,'Json',2)   WITH   (    [OrderId] bigint,    [RoleId] bigint,    [CultureId] bigint   )tmp;WITH XMLNAMESPACES('http://james.newtonking.com/projects/json' AS json)   Select Cast((SELECT OrderId,OrderNumber, (case when  o.HoldStatus IS null or  o.HoldStatus ='' then '-' else o.HoldStatus end) as HoldStatus, EnquiryId,CONVERT(varchar(11),ExpectedTimeOfDelivery,103) as ExpectedTimeOfDelivery,o.SoldTo,o.ShipTo,   case    when exists (      select * from ReturnPakageMaterial rpm where rpm.EnquiryId = o.EnquiryId and IsActive = 1   )    then 'true'    else 'false'end AS IsRPMPresent,  o.NumberOfPalettes,   o.TruckWeight,   --(SELECT [dbo].[fn_LookupValueById] (o.CurrentState)) AS 'Status',         (SELECT [dbo].[fn_RoleWiseStatus] (@roleId,o.CurrentState,@CultureId)) AS 'Status',  (SELECT [dbo].[fn_RoleWiseClass] (@roleId,o.CurrentState)) AS 'Class', ModeOfDelivery,OrderType,PurchaseOrderNumber,SalesOrderNumber,PickNumber, o.Remarks,PreviousState,CurrentState,dl.LocationName, isnull(DiscountAmount,0) as DiscountAmount, o.CreatedDate, o.[TruckSizeId], ISNULL(o.GratisCode,0) as GratisCode, ISNULL(o.IsRecievingLocationCapacityExceed, 0) as IsRecievingLocationCapacityExceed, (SELECT [dbo].[fn_GetTotalRecivingCapacityPalettes] (o.ExpectedTimeOfDelivery,o.ShipTo,o.SoldTo,ISNULL(CONVERT(bigint,Capacity),0))) as ReceivedCapacityPalettes, ISNULL(CONVERT(bigint,Capacity),0) as TruckCapacity, case when ((SELECT [dbo].[fn_GetTotalRecivingCapacityPalettes] (ExpectedTimeOfDelivery,o.ShipTo,o.SoldTo,ISNULL(CONVERT(bigint,Capacity),0)))) < 0  then '0' else '1' end  as ReceivedCapacityPalettesCheck,  (select Top 1 LocationId from Location where LocationCode =  o.StockLocationId) as StockLocationId  ,(select top 1 Note from Notes where objectId = o.OrderId and ObjectType = 1221 and RoleId in (select RoleId from NotesRoleWiseConfiguration where ViewNotesByRoleId = @roleId and ObjectType = 1221)) as Note  ,(select Top 1 LocationName from Location where LocationCode =  o.StockLocationId) as BranchPlant ,(select top 1 ExpectedTimeOfAction from OrderMovement where OrderId = o.OrderId and LocationType = 1) As PickingDate ,(select top 1 TruckPlateNumber from OrderLogistics where OrderId = o.OrderId and OrderMovementId in (select top 1 OrderMovementId from OrderMovement where OrderId = o.OrderId and LocationType = 2)) As PlateNumber ,o.OrderDate   ,dl.CompanyID   ,(Select CompanyMnemonic from Company where companyid=dl.CompanyID) as CompanyMnemonic   ,dl.Capacity   ,ts.[TruckCapacityWeight],   ts.[TruckCapacityPalettes],      ts.[TruckSize],   o.IsActive,   'false' as IsTruckFull,   '' as BranchPlantCode         , (select cast ((SELECT  'true' AS [@json:Array]  ,  OrderProductId,   OrderId,   ProductCode,   op.ProductType,   ProductQuantity,   i.ItemName, --ISNULL(Convert(Decimal(18,0),(select top 1 ItemQuantity from ItemStock where  ItemCode = op.ProductCode)),0) as CurrentStockPosition, Case when (select SettingValue from SettingMaster where SettingParameter='StockAccordingToBranchPlant') = '1' then    Convert(Decimal(18,0),(SELECT ISNULL([dbo].[fn_AvailableProductQuantityFloat] (op.ProductCode,o.StockLocationId),0)))    else ISNULL(Convert(Decimal(18,0),(select top 1 ItemQuantity from ItemStock where  ItemCode = op.ProductCode)),0)  end as CurrentStockPosition,   i.ItemId,   i.ItemCode,        (SELECT [dbo].[fn_LookupValueById] (i.PrimaryUnitOfMeasure)) as PrimaryUnitOfMeasure,     (SELECT [dbo].[fn_LookupValueById] (i.PrimaryUnitOfMeasure)) as UOM,	  (SELECT [dbo].[fn_LookupValueById] (umo.[RelatedUOM])) as [RelatedUOM],   ShippableQuantity,BackOrderQuantity,CancelledQuantity,Remarks, op.CreatedDate,op.IsActive,  ISNULL(op.AssociatedOrder,0) as AssociatedOrder   ,(SELECT [dbo].[fn_GetWeightPerUnitOfItem] (i.ItemId)) as [WeightPerUnit]  ,(SELECT [dbo].[fn_GetPriceOfItem] (i.[ItemId],dl.CompanyID)) as Amount    ,umo.[ConversionFactor]   --,(SELECT [dbo].[fn_GetPriceOfItem] (i.[ItemId],dl.CompanyID)) as ItemPricesPerUnit   --,(SELECT [dbo].[fn_GetPriceOfItem] (i.[ItemId],dl.CompanyID) * op.ProductQuantity) as ItemPrices,    ,ISNULL((op.UnitPrice),0) as ItemPricesPerUnit   ,ISNULL((op.UnitPrice * op.ProductQuantity),0) as ItemPrices,   ISNULL(op.UnitPrice,0) as UnitPrice    ,isnull(op.DepositeAmount,0) as DepositeAmount     ,ISNULL(op.DepositeAmount,0) as DepositeAmountPerUnit,    ISNULL(op.AssociatedOrder,0) as GratisOrderId,     ISNULL((ISNULL(op.DepositeAmount,0) * op.ProductQuantity),0) as ItemTotalDepositeAmount,	 isnull((SELECT [dbo].[fn_GetCurrentDepositOfItem] (I.[ItemId],dl.CompanyID)),0)  as CurrentDeposit,     ISNULL(op.ItemType,0) as ItemType     ,  (SELECT ISNULL([dbo].[fn_UsedOrderQuantity] (op.ProductCode,o.StockLocationId,o.CreatedDate),0))  as UsedQuantityInOrder,	 --Convert(Decimal(18,0),(SELECT ISNULL([dbo].[fn_AvailableProductQuantityFloat] (op.ProductCode,o.StockLocationId),0))) as CurrentStockPosition,	 --Convert(Decimal(18,0),(select top 1 ItemQuantity from ItemStock where DeliveryLocationCode = o.StockLocationId and ItemCode = op.ProductCode)) as StockInQuantity,      0 as UsedQuantityInEnquiry	  ,ISNULL(op.IsPackingItem,'0') as IsPackingItem
,ISNULL(op.PackingItemCode,'0') as PackingItemCode  from OrderProduct op left join Item i on op.ProductCode = i.ItemCode left join UnitOfMeasure umo on I.ItemId=umo.ItemId   and i.PrimaryUnitOfMeasure=umo.UOM   and umo.RelatedUOM=16   WHERE op.IsActive = 1 AND op.OrderId = o.OrderId   FOR XML path('OrderProductsList'),ELEMENTS) AS xml)), (select cast ((SELECT  'true' AS [@json:Array]  ,[ReturnPakageMaterialId]      ,[EnquiryId]      ,[ProductCode]   ,(SELECT ItemId FROM dbo.Item WHERE ItemCode=[ProductCode]) AS ItemId   ,(SELECT ItemName FROM dbo.Item WHERE ItemCode=[ProductCode]) AS ItemName     ,(SELECT [dbo].[fn_LookupValueById] (i.PrimaryUnitOfMeasure)) AS PrimaryUnitOfMeasure      ,rpm.[ProductType]      ,rpm.[ProductQuantity]    ,i.StockInQuantity    ,i.ItemShortCode     ,rpm.ItemType  from [ReturnPakageMaterial] rpm left join Item i on rpm.ProductCode = i.ItemCode      WHERE rpm.IsActive = 1 AND rpm.EnquiryId = o.EnquiryId  FOR XML path('ReturnPakageMaterialList'),ELEMENTS) AS xml)), (select e1.PalletSpace from Enquiry e1 where e1.EnquiryId = o.EnquiryId) As PalettesCorrectWeight FROM [dbo].[Order] o left join TruckSize ts on o.TruckSizeId = ts.TruckSizeId left join Location dl on o.ShipTo = dl.LocationId    WHERE (OrderId = @orderId OR @orderId = '') AND o.IsActive=1 FOR XML path('OrderList'),ELEMENTS,ROOT('Json')) AS XML)   END