CREATE PROCEDURE [dbo].[SSP_PaymentRequestSlab]-- '<Json><ServicesAction>OrderPaymentSlabByTransporterId</ServicesAction><TransporterId>1397</TransporterId><OrderId>77670</OrderId><RoleId>3</RoleId><CultureId>1101</CultureId></Json>'(@xmlDoc XML)ASBEGINDECLARE @intPointer INT;declare @TransporterId bigint=0;declare @OrderId bigint=0; EXEC sp_xml_preparedocument @intpointer OUTPUT,@xmlDocSELECT @TransporterId = tmp.[TransporterId],	   @OrderId = tmp.[OrderId]	FROM OPENXML(@intpointer,'Json',2)			WITH			(			[TransporterId] bigint,			[OrderId] bigint			)tmp;			WITH XMLNAMESPACES('http://james.newtonking.com/projects/json' AS json) SELECT CAST((select * from (select  'true' AS [@json:Array], 0 as AdditionalPaymentRequestId, ISNUll(pr.PaymentRequestId,0) as PaymentRequestId ,ISNULL(SlabReason,'') as SlabReason, ps.SlabId,ps.SlabName,ps.EffectiveFrom,ps.EffectiveTo,ps.ApplicableAfter,ISNUll(Convert(decimal(18,2), pr.Amount), Convert(decimal(18,2), ps.Amount)) as Amount,Convert(decimal(18,2),pr.PaidAmount) as PaidAmount,ISNUll(pr.AmountUnit, ps.AmountUnit) as AmountUnit,(Select Name from LookUp where LookUpId in (ISNUll(pr.AmountUnit, ps.AmountUnit))) as AmountUnitName,ISNULL((Select Top 1 TripCost from OrderTripCost where OrderId = @OrderId),0) as TripCost,ISNULL(ReasonCodeId,0) as ReasonCodeId,(Select Name from LookUp where Lookupid in ((Select Top 1 ReasonCodeId from ReasonCodeObjectMapping where ObjectId = pr.PaymentRequestId and ObjectType = 'PaymentRequest' order by ReasonCodeObjectMapping desc))) as Reason,ISNULL(Remark,'') as Remark,ISNULL((Select Top 1 ReasonDescription from ReasonCodeObjectMapping where ObjectId = pr.PaymentRequestId and ObjectType = 'PaymentRequest'),'' ) as FinanceRemark,ISNULL(pr.Status,0) as Status,ISNULL((select top 1 [Name] from [lookup] where LookUpId=pr.[Status]),'-') as StatusNamefrom PaymentSlab ps left join PaymentRequest pr on ps.SlabId = pr.SlabId and pr.OrderId = @OrderId and pr.IsActive=1left join PaymentPlanTransporterMapping pptm on pptm.PaymentPlanId = ps.PaymentPlanId   where pptm.TransporterId = @TransporterId  and ps.IsActive = 1and   GETDATE()  between  ps.EffectiveFrom  and ps.EffectiveTo union all select  'true' AS [@json:Array], 0 as AdditionalPaymentRequestId, PaymentRequestId ,ISNULL(SlabReason,'') as SlabReason, ISNULL(pr.SlabId,0) as SlabId,pr.SlabName,'' as EffectiveFrom,'' as EffectiveTo,'' as ApplicableAfter,ISNUll(Convert(decimal(18,2), pr.Amount), 0) as Amount,Convert(decimal(18,2),pr.PaidAmount) as PaidAmount,ISNUll(pr.AmountUnit, 0) as AmountUnit,(Select Name from LookUp where LookUpId in (ISNUll(pr.AmountUnit, 0))) as AmountUnitName,ISNULL((Select Top 1 TripCost from OrderTripCost where OrderId = @OrderId),0) as TripCost,ISNULL(ReasonCodeId,0) as ReasonCodeId,(Select Name from LookUp where Lookupid in ((Select Top 1 ReasonCodeId from ReasonCodeObjectMapping where ObjectId = pr.PaymentRequestId and ObjectType = 'PaymentRequest' order by ReasonCodeObjectMapping desc))) as Reason,ISNULL(Remark,'') as Remark,ISNULL((Select Top 1 ReasonDescription from ReasonCodeObjectMapping where ObjectId = pr.PaymentRequestId and ObjectType = 'PaymentRequest'),'' ) as FinanceRemark,ISNULL(Status,0) as Status,ISNULL((select top 1 [Name] from [lookup] where LookUpId=pr.[Status]),'-') as StatusNamefrom  PaymentRequest pr where OrderId = @OrderId and (SlabId is null or SlabId = 0) and isactive = 1) as tmp	FOR XML Path('PaymentRequestSlabList'),ELEMENTS,ROOT('Json')) AS XML)END