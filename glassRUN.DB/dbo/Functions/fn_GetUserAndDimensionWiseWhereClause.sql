CREATE FUNCTION [dbo].[fn_GetUserAndDimensionWiseWhereClause](@UserId bigint,   @PageName nvarchar(250),   @PageControlName nvarchar(250))RETURNS nvarchar(max)beginDeclare @ReturnValue nvarchar(max)=''Declare @temTable table(Id INT IDENTITY(1,1) PRIMARY KEY,TextValue Nvarchar(500),PageNameValue nvarchar(500),PageControlId bigint,OperatorType nvarchar(10))declare @roleId bigintset @roleId = (select RoleMasterId  From Login  where LoginId=@UserId)declare @PageControlId bigintset @PageControlId = (select   top 1  PageControlId from PageControl  where ControlName=@PageControlName   and  PageId  in (select  PageId From Pages  where ControllerName=@pageName))---------------check userid  exist or notif(not exists(select distinct		 udm.DimensionName,	 udm.PageName,	  udm.ControlId,	  udm.OperatorTypeFROM UserDimensionMapping udm  where udm.IsActive=1 and udm.IsActive=1 and udm.PageName=@PageName and    udm.UserId= @UserId and udm.ControlId=@PageControlId))beginset @UserId=0end insert into @temTable	(				TextValue,		PageNameValue,		PageControlId,		OperatorType	)select distinct		 udm.DimensionName,	 udm.PageName,	  udm.ControlId,	  udm.OperatorTypeFROM UserDimensionMapping udm  where udm.IsActive=1 and udm.IsActive=1 and udm.PageName=@pageName and ((udm.UserId= 0  and  udm.rolemasterid=0) or (udm.UserId= @UserId  and  udm.rolemasterid=@roleId)   ) and udm.ControlId=@PageControlIdDECLARE @ID bigint=1WHILE @ID <= (SELECT Count(Id) FROM @temTable)begin ----insert   data for IN opertor Typedeclare @InCount bigintset   @InCount =(SELECT count(*) FROM UserDimensionMapping udm   join  @temTable  d on d.TextValue  =udm.DimensionName  and  d.Id = @IDwhere udm.DimensionName=TextValue  and udm.PageName = PageNameValue and  udm.IsActive=1 and    udm.OperatorType=d.OperatorType  and ((udm.UserId= 0  and  udm.rolemasterid=0) or (udm.UserId= @UserId  and  udm.rolemasterid=@roleId)   )  and udm.ControlId=PageControlId ) if(@InCount > 0)beginselect  @ReturnValue = @ReturnValue+ ' And '+TextValue+' '+OperatorType+' ('+ IsNull(	(selectSTUFF((SELECT ','''+udm.DimensionValue+''''FROM UserDimensionMapping udm where udm.DimensionName=TextValue  and udm.PageName = PageNameValue and  udm.IsActive=1 and    udm.OperatorType=OperatorType  and  ((udm.UserId= 0  and  udm.rolemasterid=0) or (udm.UserId= @UserId  and  udm.rolemasterid=@roleId)   ) and udm.ControlId=PageControlId FOR XML PATH(''), TYPE).value('.','nvarchar(max)'), 1, 1, ''))	,'')+')'	from @temTable where Id=@IDend------insert   data for NOT IN opertor Type--declare @NotInCount bigint--set   @NotInCount =(SELECT count(*) FROM UserDimensionMapping udm   join  @temTable d on d.TextValue  =udm.DimensionName  and  d.Id = @ID--where udm.DimensionName=TextValue  and udm.PageName = PageNameValue and  udm.IsActive=1 and    udm.OperatorType=0  and ((udm.UserId= 0  and  udm.rolemasterid=0) or (udm.UserId= @UserId  or  udm.rolemasterid=@roleId)   )   and udm.ControlId=PageControlId )  --if(@NotInCount > 0)--begin--select  @ReturnValue = @ReturnValue+ ' And '+TextValue+' not in ('+ IsNull(--	(select--STUFF((SELECT ','''+udm.DimensionValue+''''--FROM UserDimensionMapping udm --where udm.DimensionName=TextValue  and udm.PageName = PageNameValue and  udm.IsActive=1 and    udm.OperatorType=0  and  ((udm.UserId= 0  and  udm.rolemasterid=0) or (udm.UserId= @UserId  or  udm.rolemasterid=@roleId)   ) and udm.ControlId=PageControlId-- FOR XML PATH(''), TYPE).value('.','nvarchar(max)'), 1, 1, ''))--	,'')+')'--	from @temTable where Id=@ID--end		SET @ID = @ID + 1endreturn isnull(@ReturnValue,'')End