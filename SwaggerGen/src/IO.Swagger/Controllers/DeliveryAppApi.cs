/*
 * WebAPIBuild
 *
 * This is glassRUN web api library for 3rd party and internal reference
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DeliveryAppApiController : ControllerBase, IDeliveryAppApiController
    { 
        /// <summary>
        /// (Need developer help).
        /// </summary>
        /// <remarks>(Need developer help).</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/DeliveryApp/AllJsonFromDeliveryApp")]
        [ValidateModelState]
        [SwaggerOperation("AllJsonFromDeliveryApp")]
        public virtual IActionResult AllJsonFromDeliveryApp([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API used to get order document data from Delivery App as defined in glassRUN.
        /// </summary>
        /// <remarks>This API is used to order document data as per the activity on glassRUN Delivery App.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/DeliveryApp/GetDocumentData")]
        [ValidateModelState]
        [SwaggerOperation("GetDocumentData")]
        public virtual IActionResult GetDocumentData([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API used to update the last sync of records from Delivery App as defined in glassRUN.
        /// </summary>
        /// <remarks>This API is used to update when the records were last synced as per the activity on glassRUN Delivery App.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/DeliveryApp/LastSyncRecordFromDeliveryApp")]
        [ValidateModelState]
        [SwaggerOperation("LastSyncRecordFromDeliveryApp")]
        public virtual IActionResult LastSyncRecordFromDeliveryApp([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// (Need developer help).
        /// </summary>
        /// <remarks>(Need developer help).</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/DeliveryApp/OrderMovementFromDeliveryApp")]
        [ValidateModelState]
        [SwaggerOperation("OrderMovementFromDeliveryApp")]
        public virtual IActionResult OrderMovementFromDeliveryApp([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API used to update the order products from Delivery App as defined in glassRUN.
        /// </summary>
        /// <remarks>This API is used to update order product data as per the activity on glassRUN Delivery App.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/DeliveryApp/OrderProductFromDeliveryApp")]
        [ValidateModelState]
        [SwaggerOperation("OrderProductFromDeliveryApp")]
        public virtual IActionResult OrderProductFromDeliveryApp([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// (Need developer help).
        /// </summary>
        /// <remarks>(Need developer help).</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/DeliveryApp/OrderProductMovementFromDeliveryApp")]
        [ValidateModelState]
        [SwaggerOperation("OrderProductMovementFromDeliveryApp")]
        public virtual IActionResult OrderProductMovementFromDeliveryApp([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API used to update the order from Delivery App as defined in glassRUN.
        /// </summary>
        /// <remarks>This API is used to update order data as per the activity on glassRUN Delivery App.</remarks>
        /// <param name="body"></param>
        [HttpPost]
        [Route("/DeliveryApp/UpDateOrderFromDeliveryApp")]
        [ValidateModelState]
        [SwaggerOperation("UpDateOrderFromDeliveryApp")]
        public virtual IActionResult UpDateOrderFromDeliveryApp([FromBody] body)
        { 
            throw new NotImplementedException();
        }

        /// <summary>
        /// (Need developer help).
        /// </summary>
        /// <remarks>(Need developer help).</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/DeliveryApp/UpdateOrderDocumentFromDeliveryApp")]
        [ValidateModelState]
        [SwaggerOperation("UpdateOrderDocumentFromDeliveryApp")]
        public virtual IActionResult UpdateOrderDocumentFromDeliveryApp([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }
    }
}
