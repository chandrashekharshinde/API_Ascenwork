/*
 * WebAPIBuild
 *
 * This is glassRUN web api library for 3rd party and internal reference
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ProductApiController : ControllerBase, IProductApiController
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/CreateItemPrice")]
        [ValidateModelState]
        [SwaggerOperation("ProductCreateItemPricePost")]
        public virtual IActionResult ProductCreateItemPricePost([FromBody]GlassRUNServiceWebApiManageProductDTOItemBasePriceDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/DeactiveActiveItem")]
        [ValidateModelState]
        [SwaggerOperation("ProductDeactiveActiveItemPost")]
        public virtual IActionResult ProductDeactiveActiveItemPost([FromBody]GlassRUNServiceWebApiManageProductDTOProductDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/DeactiveActiveItemPriceVariation")]
        [ValidateModelState]
        [SwaggerOperation("ProductDeactiveActiveItemPriceVariationPost")]
        public virtual IActionResult ProductDeactiveActiveItemPriceVariationPost([FromBody]GlassRUNServiceWebApiManageProductDTOCustomerGroupForPricingDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/EditCustomerGroup")]
        [ValidateModelState]
        [SwaggerOperation("ProductEditCustomerGroupPost")]
        public virtual IActionResult ProductEditCustomerGroupPost([FromBody]GlassRUNServiceWebApiManageProductDTOCustomerGroupForPricingDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/GetAllActivePromotionItemListForCustomer")]
        [ValidateModelState]
        [SwaggerOperation("ProductGetAllActivePromotionItemListForCustomerPost")]
        public virtual IActionResult ProductGetAllActivePromotionItemListForCustomerPost([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/GetCustomerGroupList")]
        [ValidateModelState]
        [SwaggerOperation("ProductGetCustomerGroupListPost")]
        public virtual IActionResult ProductGetCustomerGroupListPost([FromBody]GlassRUNServiceWebApiManageProductDTOCustomerGroupForPricingDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/GetFavouriteItemsForB2B")]
        [ValidateModelState]
        [SwaggerOperation("ProductGetFavouriteItemsForB2BPost")]
        public virtual IActionResult ProductGetFavouriteItemsForB2BPost([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/GetItemPriceVariationsListByItem")]
        [ValidateModelState]
        [SwaggerOperation("ProductGetItemPriceVariationsListByItemPost")]
        public virtual IActionResult ProductGetItemPriceVariationsListByItemPost([FromBody]GlassRUNServiceWebApiManageProductDTOItemBasePriceDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/GetItemPriceVariationsList")]
        [ValidateModelState]
        [SwaggerOperation("ProductGetItemPriceVariationsListPost")]
        public virtual IActionResult ProductGetItemPriceVariationsListPost([FromBody]GlassRUNServiceWebApiManageProductDTOItemBasePriceDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/GetItemPromotionAllocation")]
        [ValidateModelState]
        [SwaggerOperation("ProductGetItemPromotionAllocationPost")]
        public virtual IActionResult ProductGetItemPromotionAllocationPost([FromBody]GlassRUNServiceWebApiManageProductDTOItemPromotionCustomerMappingDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/GetItemsForB2B")]
        [ValidateModelState]
        [SwaggerOperation("ProductGetItemsForB2BPost")]
        public virtual IActionResult ProductGetItemsForB2BPost([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/GetOwnCatalogItemsForB2B")]
        [ValidateModelState]
        [SwaggerOperation("ProductGetOwnCatalogItemsForB2BPost")]
        public virtual IActionResult ProductGetOwnCatalogItemsForB2BPost([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/GetProductCatalogue")]
        [ValidateModelState]
        [SwaggerOperation("ProductGetProductCataloguePost")]
        public virtual IActionResult ProductGetProductCataloguePost([FromBody]GlassRUNServiceWebApiManageProductDTOProductDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/GetSellerProductCatalog")]
        [ValidateModelState]
        [SwaggerOperation("ProductGetSellerProductCatalogPost")]
        public virtual IActionResult ProductGetSellerProductCatalogPost([FromBody]GlassRUNServiceWebApiManageProductDTOProductDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/ManagePricingForCustomerGroup")]
        [ValidateModelState]
        [SwaggerOperation("ProductManagePricingForCustomerGroupPost")]
        public virtual IActionResult ProductManagePricingForCustomerGroupPost([FromBody]GlassRUNServiceWebApiManageProductDTOCustomerGroupForPricingDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/ManagePricingForCustomers")]
        [ValidateModelState]
        [SwaggerOperation("ProductManagePricingForCustomersPost")]
        public virtual IActionResult ProductManagePricingForCustomersPost([FromBody]GlassRUNServiceWebApiManageProductDTOCustomerMasterForPricingDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/SaveFavouriteItemForB2BApp")]
        [ValidateModelState]
        [SwaggerOperation("ProductSaveFavouriteItemForB2BAppPost")]
        public virtual IActionResult ProductSaveFavouriteItemForB2BAppPost([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/SaveProduct")]
        [ValidateModelState]
        [SwaggerOperation("ProductSaveProductPost")]
        public virtual IActionResult ProductSaveProductPost([FromBody]GlassRUNServiceWebApiManageProductDTOProductDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Product/UpdateItemPrice")]
        [ValidateModelState]
        [SwaggerOperation("ProductUpdateItemPricePost")]
        public virtual IActionResult ProductUpdateItemPricePost([FromBody]GlassRUNServiceWebApiManageProductDTOItemBasePriceDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }
    }
}
