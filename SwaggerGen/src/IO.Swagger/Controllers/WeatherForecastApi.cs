/*
 * WebAPIBuild
 *
 * This is glassRUN web api library for 3rd party and internal reference
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class WeatherForecastApiController : ControllerBase, IWeatherForecastApiController
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/WeatherForecast")]
        [ValidateModelState]
        [SwaggerOperation("WeatherForecastGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(Collection<GlassRUNServiceWebApiControlTowerWeatherForecast>), description: "Success")]
        public virtual IActionResult WeatherForecastGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Collection<GlassRUNServiceWebApiControlTowerWeatherForecast>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"summary\" : \"summary\",\n  \"temperatureC\" : 0,\n  \"temperatureF\" : 6\n}, {\n  \"date\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"summary\" : \"summary\",\n  \"temperatureC\" : 0,\n  \"temperatureF\" : 6\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Collection<GlassRUNServiceWebApiControlTowerWeatherForecast>>(exampleJson)
                        : default(Collection<GlassRUNServiceWebApiControlTowerWeatherForecast>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
