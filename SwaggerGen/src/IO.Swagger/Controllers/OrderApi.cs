/*
 * WebAPIBuild
 *
 * This is glassRUN web api library for 3rd party and internal reference
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class OrderApiController : ControllerBase, IOrderApiController
    { 
        /// <summary>
        /// API to cancel Multiple Sales Orders.
        /// </summary>
        /// <remarks>This API is used by gRUN to cancel Multiple Sales Orders.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/CancelMultipleOrder")]
        [ValidateModelState]
        [SwaggerOperation("CancelMultipleOrder")]
        public virtual IActionResult CancelMultipleOrder([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to Cancel single Sales Order.
        /// </summary>
        /// <remarks>This API is used by gRUN to cancel single Sales Order.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/CancelOrder")]
        [ValidateModelState]
        [SwaggerOperation("CancelOrder")]
        public virtual IActionResult CancelOrder([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to check order received.
        /// </summary>
        /// <remarks>This API is used by gRUN to check order received. (Developer to reconfirm).</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/CheckOrderReceived")]
        [ValidateModelState]
        [SwaggerOperation("CheckOrderReceived")]
        public virtual IActionResult CheckOrderReceived([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to Create B2B Sales Order.
        /// </summary>
        /// <remarks>This API is used by gRUN to create B2B sales orders.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/CreateB2BSalesOrder")]
        [ValidateModelState]
        [SwaggerOperation("CreateB2BSalesOrder")]
        public virtual IActionResult CreateB2BSalesOrder([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to create order.
        /// </summary>
        /// <remarks>This API is used by gRUN to create Order. API to create Sales Order can be directly within gRUN or thru third party interface.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/Create")]
        [ValidateModelState]
        [SwaggerOperation("CreateOrder")]
        public virtual IActionResult CreateOrder([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to Export Orders detail list (Item Level) in Excel.
        /// </summary>
        /// <remarks>This API is used by gRUN to export order details as shown on the UI to excel. This is for Order Header &amp; Detail (Item) level.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/ExportToExcelForOrderListDetails")]
        [ValidateModelState]
        [SwaggerOperation("ExportToExcelOrderDetailList")]
        [SwaggerResponse(statusCode: 200, type: typeof(byte[]), description: "Success")]
        public virtual IActionResult ExportToExcelOrderDetailList([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(byte[]));
            string exampleJson = null;
            exampleJson = "\"\"";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<byte[]>(exampleJson)
                        : default(byte[]);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// API to Export Orders details in Excel.
        /// </summary>
        /// <remarks>This API is used by gRUN to export order details as shown on the UI to excel. This is for Order Header.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/ExportToExcelForOrderList")]
        [ValidateModelState]
        [SwaggerOperation("ExportToExcelOrderList")]
        [SwaggerResponse(statusCode: 200, type: typeof(byte[]), description: "Success")]
        public virtual IActionResult ExportToExcelOrderList([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(byte[]));
            string exampleJson = null;
            exampleJson = "\"\"";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<byte[]>(exampleJson)
                        : default(byte[]);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// API to Export RPM Orders detail list (Item Level) in Excel.
        /// </summary>
        /// <remarks>This API is used by gRUN to export RPM order details as shown on the UI to excel. This is for Order Header &amp; Detail (Item) level.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/ExportToExcelForRPMOrderListDetails")]
        [ValidateModelState]
        [SwaggerOperation("ExportToExcelRPMOrderDetailList")]
        [SwaggerResponse(statusCode: 200, type: typeof(byte[]), description: "Success")]
        public virtual IActionResult ExportToExcelRPMOrderDetailList([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(byte[]));
            string exampleJson = null;
            exampleJson = "\"\"";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<byte[]>(exampleJson)
                        : default(byte[]);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// API to get Brand level total volume and value.
        /// </summary>
        /// <remarks>This API is used by gRUN to get brand level total volume and value.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/GetBrandTotalVolumeAndValue")]
        [ValidateModelState]
        [SwaggerOperation("GetBrandLevelTotalVolumeAndValue")]
        public virtual IActionResult GetBrandLevelTotalVolumeAndValue([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to GetFilterDataForGrid.
        /// </summary>
        /// <remarks>This API is used by gRUN to filter data for Grid display. party interface.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/GetFilterDataForGrid")]
        [ValidateModelState]
        [SwaggerOperation("GetFilterDataForGrid")]
        public virtual IActionResult GetFilterDataForGrid([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to get Order suggestions.
        /// </summary>
        /// <remarks>This API is used by gRUN to get Order suggestions. (Developer to reconfirm).</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/GetOrderSuggestions")]
        [ValidateModelState]
        [SwaggerOperation("GetOrderSuggestions")]
        public virtual IActionResult GetOrderSuggestions([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSuggestionDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to get Order total value.
        /// </summary>
        /// <remarks>This API is used by gRUN to get Sales Order total value.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/GetOrderTotalValue")]
        [ValidateModelState]
        [SwaggerOperation("GetOrderTotalValue")]
        public virtual IActionResult GetOrderTotalValue([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to get Order total volume.
        /// </summary>
        /// <remarks>This API is used by gRUN to get Sales Order total volume.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/GetOrderTotalVolume")]
        [ValidateModelState]
        [SwaggerOperation("GetOrderTotalVolume")]
        public virtual IActionResult GetOrderTotalVolume([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to get SKU (Item) level total volume and value.
        /// </summary>
        /// <remarks>This API is used by gRUN to get SKU (Item) level total volume and value.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/GetSkuTotalVolumeAndValue")]
        [ValidateModelState]
        [SwaggerOperation("GetSKUItemLevelTotalVolumeAndValue")]
        public virtual IActionResult GetSKUItemLevelTotalVolumeAndValue([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to Integrate Sales Order with External ssytem.
        /// </summary>
        /// <remarks>This API is used by gRUN to integrate Sales Order with external system. (Developer to confirm)</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/IntegrateWithExternalSystem")]
        [ValidateModelState]
        [SwaggerOperation("IntegratedWithExternalSystem")]
        public virtual IActionResult IntegratedWithExternalSystem([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to get Order detail by Order number.
        /// </summary>
        /// <remarks>This API is used by gRUN to get orders details by Order number.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/OrderDetailByOrderNumber")]
        [ValidateModelState]
        [SwaggerOperation("OrderDetailByOrderNumber")]
        public virtual IActionResult OrderDetailByOrderNumber([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API for Order document.
        /// </summary>
        /// <remarks>This API is used by gRUN to create Order Document (eDOC).</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/OrderDocument")]
        [ValidateModelState]
        [SwaggerOperation("OrderDocument")]
        public virtual IActionResult OrderDocument([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDocumentDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API for Order feedback during receiving.
        /// </summary>
        /// <remarks>This API is used by gRUN to receive Order feedback qty from Customer app. This is done at the time of Order receiving.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/OrderFeedback")]
        [ValidateModelState]
        [SwaggerOperation("OrderFeedback")]
        public virtual IActionResult OrderFeedback([FromBody]GlassRUNServiceWebApiManageOrderDTOSurveyFormDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to List order.
        /// </summary>
        /// <remarks>This API is used by gRUN to list orders.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/OrderList")]
        [ValidateModelState]
        [SwaggerOperation("OrderList")]
        public virtual IActionResult OrderList([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to List order by Order number.
        /// </summary>
        /// <remarks>This API is used by gRUN to list orders by order number.</remarks>
        /// <param name="orderNumber"></param>
        /// <param name="roleId"></param>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/Order/OrderListByOrderNumber")]
        [ValidateModelState]
        [SwaggerOperation("OrderListByOrderNumber")]
        public virtual IActionResult OrderListByOrderNumber([FromQuery]string orderNumber, [FromQuery]int? roleId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API for Order Notes.
        /// </summary>
        /// <remarks>This API is used by gRUN for Order Notes.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/DeliveryNote")]
        [ValidateModelState]
        [SwaggerOperation("OrderNote")]
        public virtual IActionResult OrderNote([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to receive Order.
        /// </summary>
        /// <remarks>This API is used by gRUN to receive Order from Customer App.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/ReceiveOrder")]
        [ValidateModelState]
        [SwaggerOperation("ReceiveOrder")]
        public virtual IActionResult ReceiveOrder([FromBody]GlassRUNServiceWebApiManageOrderDTOReceiveOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to receive Order V2.
        /// </summary>
        /// <remarks>This API is used by gRUN to receive order V2. (Developer to reconfirm).</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/ReceiveOrderV2")]
        [ValidateModelState]
        [SwaggerOperation("ReceiveOrderV2")]
        public virtual IActionResult ReceiveOrderV2([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to receive RPM Order.
        /// </summary>
        /// <remarks>This API is used by gRUN to receive RPM Order.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/ReceiveRPMOrder")]
        [ValidateModelState]
        [SwaggerOperation("ReceiveRPMOrder")]
        public virtual IActionResult ReceiveRPMOrder([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to reject Multiple Sales Orders.
        /// </summary>
        /// <remarks>This API is used by gRUN to reject Multiple Sales Orders.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/RejectMultipleOrder")]
        [ValidateModelState]
        [SwaggerOperation("RejectMultipleOrder")]
        public virtual IActionResult RejectMultipleOrder([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to Reject single Sales Order.
        /// </summary>
        /// <remarks>This API is used by gRUN to Reject single Sales Order.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/RejectOrder")]
        [ValidateModelState]
        [SwaggerOperation("RejectOrder")]
        public virtual IActionResult RejectOrder([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to reset RPM Order.
        /// </summary>
        /// <remarks>This API is used by gRUN to reset RPM Order.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/ResetRPMOrder")]
        [ValidateModelState]
        [SwaggerOperation("ResetRPMOrder")]
        public virtual IActionResult ResetRPMOrder([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to Save Document.
        /// </summary>
        /// <remarks>This API is used by gRUN to save Order documents.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/SaveDocument")]
        [ValidateModelState]
        [SwaggerOperation("SaveDocument")]
        public virtual IActionResult SaveDocument([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDocumentDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to Save notes.
        /// </summary>
        /// <remarks>This API is used by gRUN to save notes for each Order.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/SaveNotes")]
        [ValidateModelState]
        [SwaggerOperation("SaveNotes")]
        public virtual IActionResult SaveNotes([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to save Truck Audit qty.
        /// </summary>
        /// <remarks>This API is used by gRUN to save Truck Audit qty. (Developer to reconfirm).</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/SaveTruckAuditQty")]
        [ValidateModelState]
        [SwaggerOperation("SaveTruckAuditQty")]
        public virtual IActionResult SaveTruckAuditQty([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API for Search Order List.
        /// </summary>
        /// <remarks>This API is used by gRUN for search Order list.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/SearchOrderList")]
        [ValidateModelState]
        [SwaggerOperation("SearchOrderList")]
        public virtual IActionResult SearchOrderList([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API for Palettes list search.
        /// </summary>
        /// <remarks>This API is used by gRUN Palettes list search.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/SearchPalettesList")]
        [ValidateModelState]
        [SwaggerOperation("SearchPalettesList")]
        public virtual IActionResult SearchPalettesList([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to update order data.
        /// </summary>
        /// <remarks>This is an api used by glassRUN portal, mobile app of the driver or the customer to change the details of order products and quanitty or status.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/Update")]
        [ValidateModelState]
        [SwaggerOperation("Update")]
        public virtual IActionResult Update([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to update Branch Plant for RPM.
        /// </summary>
        /// <remarks>This API is used by update Branch Plant for RPM.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/UpdateBranchPlantForRPM")]
        [ValidateModelState]
        [SwaggerOperation("UpdateBranchPlantForRPM")]
        public virtual IActionResult UpdateBranchPlantForRPM([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to Update current status for Order.
        /// </summary>
        /// <remarks>This API is used by gRUN to Update current status for Order.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/UpdateOrderCurrentStatus")]
        [ValidateModelState]
        [SwaggerOperation("UpdateCurrentStatusForOrder")]
        public virtual IActionResult UpdateCurrentStatusForOrder([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to Update Order Receive.
        /// </summary>
        /// <remarks>This API is used by gRUN to update Order receiving from Customer App. (Developer to reconfirm)</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/UpdateOrderReceive")]
        [ValidateModelState]
        [SwaggerOperation("UpdateOrderReceive")]
        public virtual IActionResult UpdateOrderReceive([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to update Order receive status V2.
        /// </summary>
        /// <remarks>This API is used by gRUN to update Order receive status V2. (Developer to reconfirm).</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/UpdateOrderReceiveStatusV2")]
        [ValidateModelState]
        [SwaggerOperation("UpdateOrderReceiveStatusV2")]
        public virtual IActionResult UpdateOrderReceiveStatusV2([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to update Order status.
        /// </summary>
        /// <remarks>This API is used by gRUN to update Order status for single Order number.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/UpdateOrderStatus")]
        [ValidateModelState]
        [SwaggerOperation("UpdateOrderStatus")]
        public virtual IActionResult UpdateOrderStatus([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to Update Order status for Multiple Orders.
        /// </summary>
        /// <remarks>This API is used by gRUN to Update Order status for Multiple Orders.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/UpdateMultipleOrderStatus")]
        [ValidateModelState]
        [SwaggerOperation("UpdateOrderStatusForMultipleOrders")]
        public virtual IActionResult UpdateOrderStatusForMultipleOrders([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API to Update Order status with Work flow.
        /// </summary>
        /// <remarks>This API is used by gRUN to Update Order status using Work flow.</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("/Order/UpdateOrderStatusWithWorkFlow")]
        [ValidateModelState]
        [SwaggerOperation("UpdateOrderStatusWithWorkFlow")]
        public virtual IActionResult UpdateOrderStatusWithWorkFlow([FromBody]GlassRUNServiceWebApiManageOrderDTOOrderDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }
    }
}
