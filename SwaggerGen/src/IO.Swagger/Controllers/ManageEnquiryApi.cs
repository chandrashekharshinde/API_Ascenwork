/*
 * WebAPIBuild
 *
 * This is glassRUN web api library for 3rd party and internal reference
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ManageEnquiryApiController : ControllerBase, IManageEnquiryApiController
    { 
        /// <summary>
        /// API used to approve Sales Enquiry.
        /// </summary>
        /// <remarks>To approve a Sales Enquiry by the Order Manager</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/ApproveEnquiry")]
        [ValidateModelState]
        [SwaggerOperation("ApproveEnquiry")]
        public virtual IActionResult ApproveEnquiry([FromBody]GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API used to check if any RPM Mapped to the Sales Enquiry.
        /// </summary>
        /// <remarks>To check if there is any Returnable Packaging Material enquiry mapped with Sales Enquiry</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/CheckRPMMapped")]
        [ValidateModelState]
        [SwaggerOperation("CheckRPMMapped")]
        public virtual IActionResult CheckRPMMapped([FromBody]GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API used to create a Sales Enquiry.
        /// </summary>
        /// <remarks>To create a Sales Enquiry</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/Create")]
        [ValidateModelState]
        [SwaggerOperation("Create")]
        public virtual IActionResult Create([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API used to create Sales Enquiry with Workflow.
        /// </summary>
        /// <remarks>To create a Sales Enquiry using the defined workflow instance</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/CreateEnquiryWithWorkFlow")]
        [ValidateModelState]
        [SwaggerOperation("CreateEnquiryWithWorkflow")]
        public virtual IActionResult CreateEnquiryWithWorkflow([FromBody]GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API used to create a Sales Enquiry List.
        /// </summary>
        /// <remarks>To create the list of current Sales Enquiries</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/EnquiryList")]
        [ValidateModelState]
        [SwaggerOperation("EnquiryList")]
        public virtual IActionResult EnquiryList([FromBody]GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API used to get Sales Enquiry List by Enquiry Number.
        /// </summary>
        /// <remarks>To search the Sales Enquiry List by Enquiry Number</remarks>
        /// <param name="enquiryNumber"></param>
        /// <param name="roleId"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpGet]
        [Route("/ManageEnquiry/EnquiryListById")]
        [ValidateModelState]
        [SwaggerOperation("EnquiryListById")]
        public virtual IActionResult EnquiryListById([FromQuery]string enquiryNumber, [FromQuery]int? roleId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/GetConsolidatedProducts")]
        [ValidateModelState]
        [SwaggerOperation("GetConsolidatedProducts")]
        public virtual IActionResult GetConsolidatedProducts([FromBody]GlassRUNServiceWebAPIManageEnquiryDTOConsolidatedProductsSearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/AppRejCustEnquiry")]
        [ValidateModelState]
        [SwaggerOperation("ManageEnquiryAppRejCustEnquiryPost")]
        public virtual IActionResult ManageEnquiryAppRejCustEnquiryPost([FromBody]GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/CancelInquiry")]
        [ValidateModelState]
        [SwaggerOperation("ManageEnquiryCancelInquiryPost")]
        public virtual IActionResult ManageEnquiryCancelInquiryPost([FromBody]GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/EditEnquiryWithWorkFlow")]
        [ValidateModelState]
        [SwaggerOperation("ManageEnquiryEditEnquiryWithWorkFlowPost")]
        public virtual IActionResult ManageEnquiryEditEnquiryWithWorkFlowPost([FromBody]GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/Edit")]
        [ValidateModelState]
        [SwaggerOperation("ManageEnquiryEditPost")]
        public virtual IActionResult ManageEnquiryEditPost([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/EnquiryApproval")]
        [ValidateModelState]
        [SwaggerOperation("ManageEnquiryEnquiryApprovalPost")]
        public virtual IActionResult ManageEnquiryEnquiryApprovalPost([FromBody] body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/ExportToExcelForEnquiryListDetails")]
        [ValidateModelState]
        [SwaggerOperation("ManageEnquiryExportToExcelForEnquiryListDetailsPost")]
        [SwaggerResponse(statusCode: 0, type: typeof(byte[]), description: "successful operation")]
        public virtual IActionResult ManageEnquiryExportToExcelForEnquiryListDetailsPost([FromBody]GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(byte[]));

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/ExportToExcelForEnquiryList")]
        [ValidateModelState]
        [SwaggerOperation("ManageEnquiryExportToExcelForEnquiryListPost")]
        [SwaggerResponse(statusCode: 0, type: typeof(byte[]), description: "successful operation")]
        public virtual IActionResult ManageEnquiryExportToExcelForEnquiryListPost([FromBody]GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(byte[]));

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/RPMDraftEnquiryList")]
        [ValidateModelState]
        [SwaggerOperation("ManageEnquiryRPMDraftEnquiryListPost")]
        public virtual IActionResult ManageEnquiryRPMDraftEnquiryListPost([FromBody]GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/SearchEnquiryList")]
        [ValidateModelState]
        [SwaggerOperation("ManageEnquirySearchEnquiryListPost")]
        public virtual IActionResult ManageEnquirySearchEnquiryListPost([FromBody]GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }

        /// <summary>
        /// API used to reject a Sales Enquiry.
        /// </summary>
        /// <remarks>To reject a Sales Enquiry by the Order Manager</remarks>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        /// <response code="0">successful operation</response>
        [HttpPost]
        [Route("/ManageEnquiry/RejectEnquiry")]
        [ValidateModelState]
        [SwaggerOperation("RejectEnquiry")]
        public virtual IActionResult RejectEnquiry([FromBody]GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);

            throw new NotImplementedException();
        }
    }
}
