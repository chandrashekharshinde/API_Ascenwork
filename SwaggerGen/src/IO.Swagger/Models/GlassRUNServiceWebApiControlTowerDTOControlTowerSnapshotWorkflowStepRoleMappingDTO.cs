/*
 * WebAPIBuild
 *
 * This is glassRUN web api library for 3rd party and internal reference
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class GlassRUNServiceWebApiControlTowerDTOControlTowerSnapshotWorkflowStepRoleMappingDTO : IEquatable<GlassRUNServiceWebApiControlTowerDTOControlTowerSnapshotWorkflowStepRoleMappingDTO>
    { 
        /// <summary>
        /// Gets or Sets ControlTowerSnapshotWorkflowStepRoleMappingId
        /// </summary>
        [DataMember(Name="controlTowerSnapshotWorkflowStepRoleMappingId")]
        public long? ControlTowerSnapshotWorkflowStepRoleMappingId { get; set; }

        /// <summary>
        /// Gets or Sets WorkFlowId
        /// </summary>
        [DataMember(Name="workFlowId")]
        public long? WorkFlowId { get; set; }

        /// <summary>
        /// Gets or Sets SequenceNo
        /// </summary>
        [DataMember(Name="sequenceNo")]
        public long? SequenceNo { get; set; }

        /// <summary>
        /// Gets or Sets RoleId
        /// </summary>
        [DataMember(Name="roleId")]
        public long? RoleId { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name="userId")]
        public long? UserId { get; set; }

        /// <summary>
        /// Gets or Sets CultureId
        /// </summary>
        [DataMember(Name="cultureId")]
        public long? CultureId { get; set; }

        /// <summary>
        /// Gets or Sets WorkFlowCode
        /// </summary>
        [DataMember(Name="workFlowCode")]
        public string WorkFlowCode { get; set; }

        /// <summary>
        /// Gets or Sets StatusCode
        /// </summary>
        [DataMember(Name="statusCode")]
        public string StatusCode { get; set; }

        /// <summary>
        /// Gets or Sets IsShowGlobalCount
        /// </summary>
        [DataMember(Name="isShowGlobalCount")]
        public bool? IsShowGlobalCount { get; set; }

        /// <summary>
        /// Gets or Sets DisplayNameResourceKey
        /// </summary>
        [DataMember(Name="displayNameResourceKey")]
        public string DisplayNameResourceKey { get; set; }

        /// <summary>
        /// Gets or Sets StatusDisplayName
        /// </summary>
        [DataMember(Name="statusDisplayName")]
        public string StatusDisplayName { get; set; }

        /// <summary>
        /// Gets or Sets ControlTowerSnapshotWorkflowStepRoleMappingList
        /// </summary>
        [DataMember(Name="controlTowerSnapshotWorkflowStepRoleMappingList")]
        public Collection<GlassRUNServiceWebApiControlTowerDTOControlTowerSnapshotWorkflowStepRoleMappingDTO> ControlTowerSnapshotWorkflowStepRoleMappingList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GlassRUNServiceWebApiControlTowerDTOControlTowerSnapshotWorkflowStepRoleMappingDTO {\n");
            sb.Append("  ControlTowerSnapshotWorkflowStepRoleMappingId: ").Append(ControlTowerSnapshotWorkflowStepRoleMappingId).Append("\n");
            sb.Append("  WorkFlowId: ").Append(WorkFlowId).Append("\n");
            sb.Append("  SequenceNo: ").Append(SequenceNo).Append("\n");
            sb.Append("  RoleId: ").Append(RoleId).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  CultureId: ").Append(CultureId).Append("\n");
            sb.Append("  WorkFlowCode: ").Append(WorkFlowCode).Append("\n");
            sb.Append("  StatusCode: ").Append(StatusCode).Append("\n");
            sb.Append("  IsShowGlobalCount: ").Append(IsShowGlobalCount).Append("\n");
            sb.Append("  DisplayNameResourceKey: ").Append(DisplayNameResourceKey).Append("\n");
            sb.Append("  StatusDisplayName: ").Append(StatusDisplayName).Append("\n");
            sb.Append("  ControlTowerSnapshotWorkflowStepRoleMappingList: ").Append(ControlTowerSnapshotWorkflowStepRoleMappingList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GlassRUNServiceWebApiControlTowerDTOControlTowerSnapshotWorkflowStepRoleMappingDTO)obj);
        }

        /// <summary>
        /// Returns true if GlassRUNServiceWebApiControlTowerDTOControlTowerSnapshotWorkflowStepRoleMappingDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of GlassRUNServiceWebApiControlTowerDTOControlTowerSnapshotWorkflowStepRoleMappingDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GlassRUNServiceWebApiControlTowerDTOControlTowerSnapshotWorkflowStepRoleMappingDTO other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    ControlTowerSnapshotWorkflowStepRoleMappingId == other.ControlTowerSnapshotWorkflowStepRoleMappingId ||
                    ControlTowerSnapshotWorkflowStepRoleMappingId != null &&
                    ControlTowerSnapshotWorkflowStepRoleMappingId.Equals(other.ControlTowerSnapshotWorkflowStepRoleMappingId)
                ) && 
                (
                    WorkFlowId == other.WorkFlowId ||
                    WorkFlowId != null &&
                    WorkFlowId.Equals(other.WorkFlowId)
                ) && 
                (
                    SequenceNo == other.SequenceNo ||
                    SequenceNo != null &&
                    SequenceNo.Equals(other.SequenceNo)
                ) && 
                (
                    RoleId == other.RoleId ||
                    RoleId != null &&
                    RoleId.Equals(other.RoleId)
                ) && 
                (
                    UserId == other.UserId ||
                    UserId != null &&
                    UserId.Equals(other.UserId)
                ) && 
                (
                    CultureId == other.CultureId ||
                    CultureId != null &&
                    CultureId.Equals(other.CultureId)
                ) && 
                (
                    WorkFlowCode == other.WorkFlowCode ||
                    WorkFlowCode != null &&
                    WorkFlowCode.Equals(other.WorkFlowCode)
                ) && 
                (
                    StatusCode == other.StatusCode ||
                    StatusCode != null &&
                    StatusCode.Equals(other.StatusCode)
                ) && 
                (
                    IsShowGlobalCount == other.IsShowGlobalCount ||
                    IsShowGlobalCount != null &&
                    IsShowGlobalCount.Equals(other.IsShowGlobalCount)
                ) && 
                (
                    DisplayNameResourceKey == other.DisplayNameResourceKey ||
                    DisplayNameResourceKey != null &&
                    DisplayNameResourceKey.Equals(other.DisplayNameResourceKey)
                ) && 
                (
                    StatusDisplayName == other.StatusDisplayName ||
                    StatusDisplayName != null &&
                    StatusDisplayName.Equals(other.StatusDisplayName)
                ) && 
                (
                    ControlTowerSnapshotWorkflowStepRoleMappingList == other.ControlTowerSnapshotWorkflowStepRoleMappingList ||
                    ControlTowerSnapshotWorkflowStepRoleMappingList != null &&
                    ControlTowerSnapshotWorkflowStepRoleMappingList.SequenceEqual(other.ControlTowerSnapshotWorkflowStepRoleMappingList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (ControlTowerSnapshotWorkflowStepRoleMappingId != null)
                    hashCode = hashCode * 59 + ControlTowerSnapshotWorkflowStepRoleMappingId.GetHashCode();
                    if (WorkFlowId != null)
                    hashCode = hashCode * 59 + WorkFlowId.GetHashCode();
                    if (SequenceNo != null)
                    hashCode = hashCode * 59 + SequenceNo.GetHashCode();
                    if (RoleId != null)
                    hashCode = hashCode * 59 + RoleId.GetHashCode();
                    if (UserId != null)
                    hashCode = hashCode * 59 + UserId.GetHashCode();
                    if (CultureId != null)
                    hashCode = hashCode * 59 + CultureId.GetHashCode();
                    if (WorkFlowCode != null)
                    hashCode = hashCode * 59 + WorkFlowCode.GetHashCode();
                    if (StatusCode != null)
                    hashCode = hashCode * 59 + StatusCode.GetHashCode();
                    if (IsShowGlobalCount != null)
                    hashCode = hashCode * 59 + IsShowGlobalCount.GetHashCode();
                    if (DisplayNameResourceKey != null)
                    hashCode = hashCode * 59 + DisplayNameResourceKey.GetHashCode();
                    if (StatusDisplayName != null)
                    hashCode = hashCode * 59 + StatusDisplayName.GetHashCode();
                    if (ControlTowerSnapshotWorkflowStepRoleMappingList != null)
                    hashCode = hashCode * 59 + ControlTowerSnapshotWorkflowStepRoleMappingList.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GlassRUNServiceWebApiControlTowerDTOControlTowerSnapshotWorkflowStepRoleMappingDTO left, GlassRUNServiceWebApiControlTowerDTOControlTowerSnapshotWorkflowStepRoleMappingDTO right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GlassRUNServiceWebApiControlTowerDTOControlTowerSnapshotWorkflowStepRoleMappingDTO left, GlassRUNServiceWebApiControlTowerDTOControlTowerSnapshotWorkflowStepRoleMappingDTO right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
