/*
 * WebAPIBuild
 *
 * This is glassRUN web api library for 3rd party and internal reference
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO : IEquatable<GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO>
    { 
        /// <summary>
        /// Gets or Sets CopyEnquiryGuid
        /// </summary>
        [DataMember(Name="copyEnquiryGuid")]
        public string CopyEnquiryGuid { get; set; }

        /// <summary>
        /// Gets or Sets ReferenceGUIDRPM
        /// </summary>
        [DataMember(Name="referenceGUIDRPM")]
        public string ReferenceGUIDRPM { get; set; }

        /// <summary>
        /// Gets or Sets WorkFlowCode
        /// </summary>
        [DataMember(Name="workFlowCode")]
        public string WorkFlowCode { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryGuid
        /// </summary>
        [DataMember(Name="enquiryGuid")]
        public string EnquiryGuid { get; set; }

        /// <summary>
        /// Gets or Sets InquiryDescription
        /// </summary>
        [DataMember(Name="inquiryDescription")]
        public string InquiryDescription { get; set; }

        /// <summary>
        /// Gets or Sets IsOrderSelfCollect
        /// </summary>
        [DataMember(Name="isOrderSelfCollect")]
        public string IsOrderSelfCollect { get; set; }

        /// <summary>
        /// Gets or Sets ActivityStartTime
        /// </summary>
        [DataMember(Name="activityStartTime")]
        public string ActivityStartTime { get; set; }

        /// <summary>
        /// Gets or Sets PriorityRating
        /// </summary>
        [DataMember(Name="priorityRating")]
        public long? PriorityRating { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryList
        /// </summary>
        [DataMember(Name="enquiryList")]
        public Collection<GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO> EnquiryList { get; set; }

        /// <summary>
        /// Gets or Sets ProductList
        /// </summary>
        [DataMember(Name="productList")]
        public Collection<GlassRUNServiceWebAPIManageEnquiryDTOEnquiryProductDTO> ProductList { get; set; }

        /// <summary>
        /// Gets or Sets NoteList
        /// </summary>
        [DataMember(Name="noteList")]
        public Collection<GlassRUNServiceWebAPIManageEnquiryDTONoteDTO> NoteList { get; set; }

        /// <summary>
        /// Gets or Sets ReturnPakageMaterialList
        /// </summary>
        [DataMember(Name="returnPakageMaterialList")]
        public Collection<GlassRUNServiceWebAPIManageEnquiryDTOReturnPakageMaterialDTO> ReturnPakageMaterialList { get; set; }

        /// <summary>
        /// Gets or Sets IsCancelEnquiry
        /// </summary>
        [DataMember(Name="isCancelEnquiry")]
        public bool? IsCancelEnquiry { get; set; }

        /// <summary>
        /// Gets or Sets IsRejectEnquiry
        /// </summary>
        [DataMember(Name="isRejectEnquiry")]
        public bool? IsRejectEnquiry { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryId
        /// </summary>
        [DataMember(Name="enquiryId")]
        public long? EnquiryId { get; set; }

        /// <summary>
        /// Gets or Sets ObjectId
        /// </summary>
        [DataMember(Name="objectId")]
        public long? ObjectId { get; set; }

        /// <summary>
        /// Gets or Sets ObjectNumber
        /// </summary>
        [DataMember(Name="objectNumber")]
        public string ObjectNumber { get; set; }

        /// <summary>
        /// Gets or Sets OrderNumber
        /// </summary>
        [DataMember(Name="orderNumber")]
        public string OrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets CompanyId
        /// </summary>
        [DataMember(Name="companyId")]
        public long? CompanyId { get; set; }

        /// <summary>
        /// Gets or Sets RelatedEnquiryId
        /// </summary>
        [DataMember(Name="relatedEnquiryId")]
        public long? RelatedEnquiryId { get; set; }

        /// <summary>
        /// Gets or Sets FileAttached
        /// </summary>
        [DataMember(Name="fileAttached")]
        public bool? FileAttached { get; set; }

        /// <summary>
        /// Gets or Sets FileAttachedDownload
        /// </summary>
        [DataMember(Name="fileAttachedDownload")]
        public bool? FileAttachedDownload { get; set; }

        /// <summary>
        /// Gets or Sets CompanyCode
        /// </summary>
        [DataMember(Name="companyCode")]
        public string CompanyCode { get; set; }

        /// <summary>
        /// Gets or Sets IsDifferentSKU
        /// </summary>
        [DataMember(Name="isDifferentSKU")]
        public string IsDifferentSKU { get; set; }

        /// <summary>
        /// Gets or Sets TypeOfWay
        /// </summary>
        [DataMember(Name="typeOfWay")]
        public string TypeOfWay { get; set; }

        /// <summary>
        /// Gets or Sets DocumentName
        /// </summary>
        [DataMember(Name="documentName")]
        public string DocumentName { get; set; }

        /// <summary>
        /// Gets or Sets DocumentFormat
        /// </summary>
        [DataMember(Name="documentFormat")]
        public string DocumentFormat { get; set; }

        /// <summary>
        /// Gets or Sets SkuPhoto
        /// </summary>
        [DataMember(Name="skuPhoto")]
        public string SkuPhoto { get; set; }

        /// <summary>
        /// Gets or Sets File
        /// </summary>
        [DataMember(Name="file")]
        public string File { get; set; }

        /// <summary>
        /// Gets or Sets FileFormat
        /// </summary>
        [DataMember(Name="fileFormat")]
        public string FileFormat { get; set; }

        /// <summary>
        /// Gets or Sets DocumentExtension
        /// </summary>
        [DataMember(Name="documentExtension")]
        public string DocumentExtension { get; set; }

        /// <summary>
        /// Gets or Sets EditCompanyCode
        /// </summary>
        [DataMember(Name="editCompanyCode")]
        public string EditCompanyCode { get; set; }

        /// <summary>
        /// Gets or Sets IsExportToExcel
        /// </summary>
        [DataMember(Name="isExportToExcel")]
        public bool? IsExportToExcel { get; set; }

        /// <summary>
        /// Gets or Sets EditRoleId
        /// </summary>
        [DataMember(Name="editRoleId")]
        public long? EditRoleId { get; set; }

        /// <summary>
        /// Gets or Sets Priority
        /// </summary>
        [DataMember(Name="priority")]
        public long? Priority { get; set; }

        /// <summary>
        /// Gets or Sets PriorityValue
        /// </summary>
        [DataMember(Name="priorityValue")]
        public string PriorityValue { get; set; }

        /// <summary>
        /// Gets or Sets CompanyName
        /// </summary>
        [DataMember(Name="companyName")]
        public string CompanyName { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryGroupNumber
        /// </summary>
        [DataMember(Name="enquiryGroupNumber")]
        public string EnquiryGroupNumber { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryAutoNumber
        /// </summary>
        [DataMember(Name="enquiryAutoNumber")]
        public string EnquiryAutoNumber { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryType
        /// </summary>
        [DataMember(Name="enquiryType")]
        public string EnquiryType { get; set; }

        /// <summary>
        /// Gets or Sets SoldTo
        /// </summary>
        [DataMember(Name="soldTo")]
        public long? SoldTo { get; set; }

        /// <summary>
        /// Gets or Sets SoldToCode
        /// </summary>
        [DataMember(Name="soldToCode")]
        public string SoldToCode { get; set; }

        /// <summary>
        /// Gets or Sets SoldToName
        /// </summary>
        [DataMember(Name="soldToName")]
        public string SoldToName { get; set; }

        /// <summary>
        /// Gets or Sets ShipTo
        /// </summary>
        [DataMember(Name="shipTo")]
        public long? ShipTo { get; set; }

        /// <summary>
        /// Gets or Sets ShipToCode
        /// </summary>
        [DataMember(Name="shipToCode")]
        public string ShipToCode { get; set; }

        /// <summary>
        /// Gets or Sets ShipToName
        /// </summary>
        [DataMember(Name="shipToName")]
        public string ShipToName { get; set; }

        /// <summary>
        /// Gets or Sets ShipToLocationAddress
        /// </summary>
        [DataMember(Name="shipToLocationAddress")]
        public string ShipToLocationAddress { get; set; }

        /// <summary>
        /// Gets or Sets BillTo
        /// </summary>
        [DataMember(Name="billTo")]
        public long? BillTo { get; set; }

        /// <summary>
        /// Gets or Sets BillToCode
        /// </summary>
        [DataMember(Name="billToCode")]
        public string BillToCode { get; set; }

        /// <summary>
        /// Gets or Sets BillToName
        /// </summary>
        [DataMember(Name="billToName")]
        public string BillToName { get; set; }

        /// <summary>
        /// Gets or Sets PickDateTime
        /// </summary>
        [DataMember(Name="pickDateTime")]
        public DateTime? PickDateTime { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryDate
        /// </summary>
        [DataMember(Name="enquiryDate")]
        public DateTime? EnquiryDate { get; set; }

        /// <summary>
        /// Gets or Sets RequestDate
        /// </summary>
        [DataMember(Name="requestDate")]
        public DateTime? RequestDate { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryAddressId
        /// </summary>
        [DataMember(Name="primaryAddressId")]
        public long? PrimaryAddressId { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryAddressId
        /// </summary>
        [DataMember(Name="secondaryAddressId")]
        public long? SecondaryAddressId { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryAddress
        /// </summary>
        [DataMember(Name="primaryAddress")]
        public string PrimaryAddress { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryAddress
        /// </summary>
        [DataMember(Name="secondaryAddress")]
        public string SecondaryAddress { get; set; }

        /// <summary>
        /// Gets or Sets OrderProposedETD
        /// </summary>
        [DataMember(Name="orderProposedETD")]
        public string OrderProposedETD { get; set; }

        /// <summary>
        /// Gets or Sets Remarks
        /// </summary>
        [DataMember(Name="remarks")]
        public string Remarks { get; set; }

        /// <summary>
        /// Gets or Sets PreviousState
        /// </summary>
        [DataMember(Name="previousState")]
        public long? PreviousState { get; set; }

        /// <summary>
        /// Gets or Sets CurrentState
        /// </summary>
        [DataMember(Name="currentState")]
        public long? CurrentState { get; set; }

        /// <summary>
        /// Gets or Sets PreviousProcess
        /// </summary>
        [DataMember(Name="previousProcess")]
        public long? PreviousProcess { get; set; }

        /// <summary>
        /// Gets or Sets CurrentProcess
        /// </summary>
        [DataMember(Name="currentProcess")]
        public long? CurrentProcess { get; set; }

        /// <summary>
        /// Gets or Sets TruckSizeId
        /// </summary>
        [DataMember(Name="truckSizeId")]
        public long? TruckSizeId { get; set; }

        /// <summary>
        /// Gets or Sets TruckSize
        /// </summary>
        [DataMember(Name="truckSize")]
        public string TruckSize { get; set; }

        /// <summary>
        /// Gets or Sets CollectionDateFromSettingValue
        /// </summary>
        [DataMember(Name="collectionDateFromSettingValue")]
        public long? CollectionDateFromSettingValue { get; set; }

        /// <summary>
        /// Gets or Sets PalletSpace
        /// </summary>
        [DataMember(Name="palletSpace")]
        public double? PalletSpace { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfPalettes
        /// </summary>
        [DataMember(Name="numberOfPalettes")]
        public double? NumberOfPalettes { get; set; }

        /// <summary>
        /// Gets or Sets TruckWeight
        /// </summary>
        [DataMember(Name="truckWeight")]
        public double? TruckWeight { get; set; }

        /// <summary>
        /// Gets or Sets OrderedBy
        /// </summary>
        [DataMember(Name="orderedBy")]
        public long? OrderedBy { get; set; }

        /// <summary>
        /// Gets or Sets GratisCode
        /// </summary>
        [DataMember(Name="gratisCode")]
        public string GratisCode { get; set; }

        /// <summary>
        /// Gets or Sets Province
        /// </summary>
        [DataMember(Name="province")]
        public string Province { get; set; }

        /// <summary>
        /// Gets or Sets Description1
        /// </summary>
        [DataMember(Name="description1")]
        public string Description1 { get; set; }

        /// <summary>
        /// Gets or Sets Description2
        /// </summary>
        [DataMember(Name="description2")]
        public string Description2 { get; set; }

        /// <summary>
        /// Gets or Sets IsRecievingLocationCapacityExceed
        /// </summary>
        [DataMember(Name="isRecievingLocationCapacityExceed")]
        public string IsRecievingLocationCapacityExceed { get; set; }

        /// <summary>
        /// Gets or Sets StockLocationId
        /// </summary>
        [DataMember(Name="stockLocationId")]
        public long? StockLocationId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedDate
        /// </summary>
        [DataMember(Name="createdDate")]
        public DateTime? CreatedDate { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedDate
        /// </summary>
        [DataMember(Name="modifiedDate")]
        public DateTime? ModifiedDate { get; set; }

        /// <summary>
        /// Gets or Sets IsActive
        /// </summary>
        [DataMember(Name="isActive")]
        public string IsActive { get; set; }

        /// <summary>
        /// Gets or Sets IsAdhoc
        /// </summary>
        [DataMember(Name="isAdhoc")]
        public bool? IsAdhoc { get; set; }

        /// <summary>
        /// Gets or Sets SequenceNo
        /// </summary>
        [DataMember(Name="sequenceNo")]
        public long? SequenceNo { get; set; }

        /// <summary>
        /// Gets or Sets Field1
        /// </summary>
        [DataMember(Name="field1")]
        public string Field1 { get; set; }

        /// <summary>
        /// Gets or Sets Field2
        /// </summary>
        [DataMember(Name="field2")]
        public string Field2 { get; set; }

        /// <summary>
        /// Gets or Sets Field3
        /// </summary>
        [DataMember(Name="field3")]
        public string Field3 { get; set; }

        /// <summary>
        /// Gets or Sets Field4
        /// </summary>
        [DataMember(Name="field4")]
        public string Field4 { get; set; }

        /// <summary>
        /// Gets or Sets Field5
        /// </summary>
        [DataMember(Name="field5")]
        public string Field5 { get; set; }

        /// <summary>
        /// Gets or Sets Field6
        /// </summary>
        [DataMember(Name="field6")]
        public string Field6 { get; set; }

        /// <summary>
        /// Gets or Sets Field7
        /// </summary>
        [DataMember(Name="field7")]
        public string Field7 { get; set; }

        /// <summary>
        /// Gets or Sets Field8
        /// </summary>
        [DataMember(Name="field8")]
        public string Field8 { get; set; }

        /// <summary>
        /// Gets or Sets Field9
        /// </summary>
        [DataMember(Name="field9")]
        public string Field9 { get; set; }

        /// <summary>
        /// Gets or Sets Field10
        /// </summary>
        [DataMember(Name="field10")]
        public string Field10 { get; set; }

        /// <summary>
        /// Gets or Sets RelatedEnquiryNumber
        /// </summary>
        [DataMember(Name="relatedEnquiryNumber")]
        public string RelatedEnquiryNumber { get; set; }

        /// <summary>
        /// Gets or Sets ReturnableItemCheck
        /// </summary>
        [DataMember(Name="returnableItemCheck")]
        public int? ReturnableItemCheck { get; set; }

        /// <summary>
        /// Gets or Sets ReceivingLocationCapacityCheck
        /// </summary>
        [DataMember(Name="receivingLocationCapacityCheck")]
        public int? ReceivingLocationCapacityCheck { get; set; }

        /// <summary>
        /// Gets or Sets StockCheck
        /// </summary>
        [DataMember(Name="stockCheck")]
        public int? StockCheck { get; set; }

        /// <summary>
        /// Gets or Sets PromisedDate
        /// </summary>
        [DataMember(Name="promisedDate")]
        public DateTime? PromisedDate { get; set; }

        /// <summary>
        /// Gets or Sets PoNumber
        /// </summary>
        [DataMember(Name="poNumber")]
        public string PoNumber { get; set; }

        /// <summary>
        /// Gets or Sets PaymentType
        /// </summary>
        [DataMember(Name="paymentType")]
        public long? PaymentType { get; set; }

        /// <summary>
        /// Gets or Sets DiscountPercent
        /// </summary>
        [DataMember(Name="discountPercent")]
        public double? DiscountPercent { get; set; }

        /// <summary>
        /// Gets or Sets DiscountAmount
        /// </summary>
        [DataMember(Name="discountAmount")]
        public double? DiscountAmount { get; set; }

        /// <summary>
        /// Gets or Sets PaymentDiscountPercent
        /// </summary>
        [DataMember(Name="paymentDiscountPercent")]
        public double? PaymentDiscountPercent { get; set; }

        /// <summary>
        /// Gets or Sets TotalDepositeAmount
        /// </summary>
        [DataMember(Name="totalDepositeAmount")]
        public double? TotalDepositeAmount { get; set; }

        /// <summary>
        /// Gets or Sets TotalDiscountAmount
        /// </summary>
        [DataMember(Name="totalDiscountAmount")]
        public double? TotalDiscountAmount { get; set; }

        /// <summary>
        /// Gets or Sets TotalOrderAmount
        /// </summary>
        [DataMember(Name="totalOrderAmount")]
        public double? TotalOrderAmount { get; set; }

        /// <summary>
        /// Gets or Sets TotalAmount
        /// </summary>
        [DataMember(Name="totalAmount")]
        public double? TotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets IsSynced
        /// </summary>
        [DataMember(Name="isSynced")]
        public string IsSynced { get; set; }

        /// <summary>
        /// Gets or Sets PresellerCode
        /// </summary>
        [DataMember(Name="presellerCode")]
        public string PresellerCode { get; set; }

        /// <summary>
        /// Gets or Sets PresellerName
        /// </summary>
        [DataMember(Name="presellerName")]
        public string PresellerName { get; set; }

        /// <summary>
        /// Gets or Sets TotalTaxAmount
        /// </summary>
        [DataMember(Name="totalTaxAmount")]
        public double? TotalTaxAmount { get; set; }

        /// <summary>
        /// Gets or Sets TotalQuantity
        /// </summary>
        [DataMember(Name="totalQuantity")]
        public double? TotalQuantity { get; set; }

        /// <summary>
        /// Gets or Sets TotalPrice
        /// </summary>
        [DataMember(Name="totalPrice")]
        public double? TotalPrice { get; set; }

        /// <summary>
        /// Gets or Sets TotalVolume
        /// </summary>
        [DataMember(Name="totalVolume")]
        public double? TotalVolume { get; set; }

        /// <summary>
        /// Gets or Sets TotalWeight
        /// </summary>
        [DataMember(Name="totalWeight")]
        public double? TotalWeight { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfCrate
        /// </summary>
        [DataMember(Name="numberOfCrate")]
        public long? NumberOfCrate { get; set; }

        /// <summary>
        /// Gets or Sets NoOfDays
        /// </summary>
        [DataMember(Name="noOfDays")]
        public long? NoOfDays { get; set; }

        /// <summary>
        /// Gets or Sets SoNumber
        /// </summary>
        [DataMember(Name="soNumber")]
        public string SoNumber { get; set; }

        /// <summary>
        /// Gets or Sets IsSelfCollect
        /// </summary>
        [DataMember(Name="isSelfCollect")]
        public bool? IsSelfCollect { get; set; }

        /// <summary>
        /// Gets or Sets CarrierId
        /// </summary>
        [DataMember(Name="carrierId")]
        public long? CarrierId { get; set; }

        /// <summary>
        /// Gets or Sets CarrierCode
        /// </summary>
        [DataMember(Name="carrierCode")]
        public string CarrierCode { get; set; }

        /// <summary>
        /// Gets or Sets CarrierName
        /// </summary>
        [DataMember(Name="carrierName")]
        public string CarrierName { get; set; }

        /// <summary>
        /// Gets or Sets CollectionLocationId
        /// </summary>
        [DataMember(Name="collectionLocationId")]
        public long? CollectionLocationId { get; set; }

        /// <summary>
        /// Gets or Sets CollectionLocationCode
        /// </summary>
        [DataMember(Name="collectionLocationCode")]
        public string CollectionLocationCode { get; set; }

        /// <summary>
        /// Gets or Sets CollectionLocationName
        /// </summary>
        [DataMember(Name="collectionLocationName")]
        public string CollectionLocationName { get; set; }

        /// <summary>
        /// Gets or Sets OriginalCollectionDate
        /// </summary>
        [DataMember(Name="originalCollectionDate")]
        public DateTime? OriginalCollectionDate { get; set; }

        /// <summary>
        /// Gets or Sets BillToId
        /// </summary>
        [DataMember(Name="billToId")]
        public long? BillToId { get; set; }

        /// <summary>
        /// Gets or Sets LoginId
        /// </summary>
        [DataMember(Name="loginId")]
        public long? LoginId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name="createdBy")]
        public long? CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedBy
        /// </summary>
        [DataMember(Name="modifiedBy")]
        public long? ModifiedBy { get; set; }

        /// <summary>
        /// Gets or Sets StatusResourceKey
        /// </summary>
        [DataMember(Name="statusResourceKey")]
        public string StatusResourceKey { get; set; }

        /// <summary>
        /// Gets or Sets StatusClass
        /// </summary>
        [DataMember(Name="statusClass")]
        public string StatusClass { get; set; }

        /// <summary>
        /// Gets or Sets ExternalSystemStatus
        /// </summary>
        [DataMember(Name="externalSystemStatus")]
        public long? ExternalSystemStatus { get; set; }

        /// <summary>
        /// Gets or Sets ExternalSystemStatusText
        /// </summary>
        [DataMember(Name="externalSystemStatusText")]
        public string ExternalSystemStatusText { get; set; }

        /// <summary>
        /// Gets or Sets Region
        /// </summary>
        [DataMember(Name="region")]
        public string Region { get; set; }

        /// <summary>
        /// Gets or Sets ProvinceDesc
        /// </summary>
        [DataMember(Name="provinceDesc")]
        public string ProvinceDesc { get; set; }

        /// <summary>
        /// Gets or Sets ExternalSystemStatusSyncTime
        /// </summary>
        [DataMember(Name="externalSystemStatusSyncTime")]
        public DateTime? ExternalSystemStatusSyncTime { get; set; }

        /// <summary>
        /// Gets or Sets TotalCount
        /// </summary>
        [DataMember(Name="totalCount")]
        public long? TotalCount { get; set; }

        /// <summary>
        /// Gets or Sets IsSOAttached
        /// </summary>
        [DataMember(Name="isSOAttached")]
        public bool? IsSOAttached { get; set; }

        /// <summary>
        /// Gets or Sets PickDateTimeFrom
        /// </summary>
        [DataMember(Name="pickDateTimeFrom")]
        public DateTime? PickDateTimeFrom { get; set; }

        /// <summary>
        /// Gets or Sets PickDateTimeTo
        /// </summary>
        [DataMember(Name="pickDateTimeTo")]
        public DateTime? PickDateTimeTo { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryDateFrom
        /// </summary>
        [DataMember(Name="enquiryDateFrom")]
        public DateTime? EnquiryDateFrom { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryDateTo
        /// </summary>
        [DataMember(Name="enquiryDateTo")]
        public DateTime? EnquiryDateTo { get; set; }

        /// <summary>
        /// Gets or Sets RequestDateFrom
        /// </summary>
        [DataMember(Name="requestDateFrom")]
        public DateTime? RequestDateFrom { get; set; }

        /// <summary>
        /// Gets or Sets RequestDateTo
        /// </summary>
        [DataMember(Name="requestDateTo")]
        public DateTime? RequestDateTo { get; set; }

        /// <summary>
        /// Gets or Sets LastSyncDate
        /// </summary>
        [DataMember(Name="lastSyncDate")]
        public DateTime? LastSyncDate { get; set; }

        /// <summary>
        /// Gets or Sets RpmValue
        /// </summary>
        [DataMember(Name="rpmValue")]
        public string RpmValue { get; set; }

        /// <summary>
        /// Gets or Sets EmptiesLimit
        /// </summary>
        [DataMember(Name="emptiesLimit")]
        public long? EmptiesLimit { get; set; }

        /// <summary>
        /// Gets or Sets ActualEmpties
        /// </summary>
        [DataMember(Name="actualEmpties")]
        public long? ActualEmpties { get; set; }

        /// <summary>
        /// Gets or Sets Empties
        /// </summary>
        [DataMember(Name="empties")]
        public string Empties { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedCapacityPalettes
        /// </summary>
        [DataMember(Name="receivedCapacityPalettes")]
        public long? ReceivedCapacityPalettes { get; set; }

        /// <summary>
        /// Gets or Sets Area
        /// </summary>
        [DataMember(Name="area")]
        public string Area { get; set; }

        /// <summary>
        /// Gets or Sets ZoneName
        /// </summary>
        [DataMember(Name="zoneName")]
        public string ZoneName { get; set; }

        /// <summary>
        /// Gets or Sets AssociatedOrder
        /// </summary>
        [DataMember(Name="associatedOrder")]
        public string AssociatedOrder { get; set; }

        /// <summary>
        /// Gets or Sets TotalPriceWithCurreny
        /// </summary>
        [DataMember(Name="totalPriceWithCurreny")]
        public string TotalPriceWithCurreny { get; set; }

        /// <summary>
        /// Gets or Sets IsAvailableStock
        /// </summary>
        [DataMember(Name="isAvailableStock")]
        public string IsAvailableStock { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedCapacityPalettesCheck
        /// </summary>
        [DataMember(Name="receivedCapacityPalettesCheck")]
        public string ReceivedCapacityPalettesCheck { get; set; }

        /// <summary>
        /// Gets or Sets CheckedEnquiry
        /// </summary>
        [DataMember(Name="checkedEnquiry")]
        public bool? CheckedEnquiry { get; set; }

        /// <summary>
        /// Gets or Sets Capacity
        /// </summary>
        [DataMember(Name="capacity")]
        public long? Capacity { get; set; }

        /// <summary>
        /// Gets or Sets RoleId
        /// </summary>
        [DataMember(Name="roleId")]
        public long? RoleId { get; set; }

        /// <summary>
        /// Gets or Sets CultureId
        /// </summary>
        [DataMember(Name="cultureId")]
        public long? CultureId { get; set; }

        /// <summary>
        /// Gets or Sets IsAnyItemPriceZero
        /// </summary>
        [DataMember(Name="isAnyItemPriceZero")]
        public long? IsAnyItemPriceZero { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets Class
        /// </summary>
        [DataMember(Name="class")]
        public string Class { get; set; }

        /// <summary>
        /// Gets or Sets ShortName
        /// </summary>
        [DataMember(Name="shortName")]
        public string ShortName { get; set; }

        /// <summary>
        /// Gets or Sets ExternalSystemRefID
        /// </summary>
        [DataMember(Name="externalSystemRefID")]
        public string ExternalSystemRefID { get; set; }

        /// <summary>
        /// Gets or Sets ErrorMessage
        /// </summary>
        [DataMember(Name="errorMessage")]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// Gets or Sets SubChannel
        /// </summary>
        [DataMember(Name="subChannel")]
        public string SubChannel { get; set; }

        /// <summary>
        /// Gets or Sets ReasonCodeList
        /// </summary>
        [DataMember(Name="reasonCodeList")]
        public Collection<GlassRUNServiceWebAPIManageEnquiryDTOReasonCodeDTO> ReasonCodeList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO {\n");
            sb.Append("  CopyEnquiryGuid: ").Append(CopyEnquiryGuid).Append("\n");
            sb.Append("  ReferenceGUIDRPM: ").Append(ReferenceGUIDRPM).Append("\n");
            sb.Append("  WorkFlowCode: ").Append(WorkFlowCode).Append("\n");
            sb.Append("  EnquiryGuid: ").Append(EnquiryGuid).Append("\n");
            sb.Append("  InquiryDescription: ").Append(InquiryDescription).Append("\n");
            sb.Append("  IsOrderSelfCollect: ").Append(IsOrderSelfCollect).Append("\n");
            sb.Append("  ActivityStartTime: ").Append(ActivityStartTime).Append("\n");
            sb.Append("  PriorityRating: ").Append(PriorityRating).Append("\n");
            sb.Append("  EnquiryList: ").Append(EnquiryList).Append("\n");
            sb.Append("  ProductList: ").Append(ProductList).Append("\n");
            sb.Append("  NoteList: ").Append(NoteList).Append("\n");
            sb.Append("  ReturnPakageMaterialList: ").Append(ReturnPakageMaterialList).Append("\n");
            sb.Append("  IsCancelEnquiry: ").Append(IsCancelEnquiry).Append("\n");
            sb.Append("  IsRejectEnquiry: ").Append(IsRejectEnquiry).Append("\n");
            sb.Append("  EnquiryId: ").Append(EnquiryId).Append("\n");
            sb.Append("  ObjectId: ").Append(ObjectId).Append("\n");
            sb.Append("  ObjectNumber: ").Append(ObjectNumber).Append("\n");
            sb.Append("  OrderNumber: ").Append(OrderNumber).Append("\n");
            sb.Append("  CompanyId: ").Append(CompanyId).Append("\n");
            sb.Append("  RelatedEnquiryId: ").Append(RelatedEnquiryId).Append("\n");
            sb.Append("  FileAttached: ").Append(FileAttached).Append("\n");
            sb.Append("  FileAttachedDownload: ").Append(FileAttachedDownload).Append("\n");
            sb.Append("  CompanyCode: ").Append(CompanyCode).Append("\n");
            sb.Append("  IsDifferentSKU: ").Append(IsDifferentSKU).Append("\n");
            sb.Append("  TypeOfWay: ").Append(TypeOfWay).Append("\n");
            sb.Append("  DocumentName: ").Append(DocumentName).Append("\n");
            sb.Append("  DocumentFormat: ").Append(DocumentFormat).Append("\n");
            sb.Append("  SkuPhoto: ").Append(SkuPhoto).Append("\n");
            sb.Append("  File: ").Append(File).Append("\n");
            sb.Append("  FileFormat: ").Append(FileFormat).Append("\n");
            sb.Append("  DocumentExtension: ").Append(DocumentExtension).Append("\n");
            sb.Append("  EditCompanyCode: ").Append(EditCompanyCode).Append("\n");
            sb.Append("  IsExportToExcel: ").Append(IsExportToExcel).Append("\n");
            sb.Append("  EditRoleId: ").Append(EditRoleId).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  PriorityValue: ").Append(PriorityValue).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  EnquiryGroupNumber: ").Append(EnquiryGroupNumber).Append("\n");
            sb.Append("  EnquiryAutoNumber: ").Append(EnquiryAutoNumber).Append("\n");
            sb.Append("  EnquiryType: ").Append(EnquiryType).Append("\n");
            sb.Append("  SoldTo: ").Append(SoldTo).Append("\n");
            sb.Append("  SoldToCode: ").Append(SoldToCode).Append("\n");
            sb.Append("  SoldToName: ").Append(SoldToName).Append("\n");
            sb.Append("  ShipTo: ").Append(ShipTo).Append("\n");
            sb.Append("  ShipToCode: ").Append(ShipToCode).Append("\n");
            sb.Append("  ShipToName: ").Append(ShipToName).Append("\n");
            sb.Append("  ShipToLocationAddress: ").Append(ShipToLocationAddress).Append("\n");
            sb.Append("  BillTo: ").Append(BillTo).Append("\n");
            sb.Append("  BillToCode: ").Append(BillToCode).Append("\n");
            sb.Append("  BillToName: ").Append(BillToName).Append("\n");
            sb.Append("  PickDateTime: ").Append(PickDateTime).Append("\n");
            sb.Append("  EnquiryDate: ").Append(EnquiryDate).Append("\n");
            sb.Append("  RequestDate: ").Append(RequestDate).Append("\n");
            sb.Append("  PrimaryAddressId: ").Append(PrimaryAddressId).Append("\n");
            sb.Append("  SecondaryAddressId: ").Append(SecondaryAddressId).Append("\n");
            sb.Append("  PrimaryAddress: ").Append(PrimaryAddress).Append("\n");
            sb.Append("  SecondaryAddress: ").Append(SecondaryAddress).Append("\n");
            sb.Append("  OrderProposedETD: ").Append(OrderProposedETD).Append("\n");
            sb.Append("  Remarks: ").Append(Remarks).Append("\n");
            sb.Append("  PreviousState: ").Append(PreviousState).Append("\n");
            sb.Append("  CurrentState: ").Append(CurrentState).Append("\n");
            sb.Append("  PreviousProcess: ").Append(PreviousProcess).Append("\n");
            sb.Append("  CurrentProcess: ").Append(CurrentProcess).Append("\n");
            sb.Append("  TruckSizeId: ").Append(TruckSizeId).Append("\n");
            sb.Append("  TruckSize: ").Append(TruckSize).Append("\n");
            sb.Append("  CollectionDateFromSettingValue: ").Append(CollectionDateFromSettingValue).Append("\n");
            sb.Append("  PalletSpace: ").Append(PalletSpace).Append("\n");
            sb.Append("  NumberOfPalettes: ").Append(NumberOfPalettes).Append("\n");
            sb.Append("  TruckWeight: ").Append(TruckWeight).Append("\n");
            sb.Append("  OrderedBy: ").Append(OrderedBy).Append("\n");
            sb.Append("  GratisCode: ").Append(GratisCode).Append("\n");
            sb.Append("  Province: ").Append(Province).Append("\n");
            sb.Append("  Description1: ").Append(Description1).Append("\n");
            sb.Append("  Description2: ").Append(Description2).Append("\n");
            sb.Append("  IsRecievingLocationCapacityExceed: ").Append(IsRecievingLocationCapacityExceed).Append("\n");
            sb.Append("  StockLocationId: ").Append(StockLocationId).Append("\n");
            sb.Append("  CreatedDate: ").Append(CreatedDate).Append("\n");
            sb.Append("  ModifiedDate: ").Append(ModifiedDate).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  IsAdhoc: ").Append(IsAdhoc).Append("\n");
            sb.Append("  SequenceNo: ").Append(SequenceNo).Append("\n");
            sb.Append("  Field1: ").Append(Field1).Append("\n");
            sb.Append("  Field2: ").Append(Field2).Append("\n");
            sb.Append("  Field3: ").Append(Field3).Append("\n");
            sb.Append("  Field4: ").Append(Field4).Append("\n");
            sb.Append("  Field5: ").Append(Field5).Append("\n");
            sb.Append("  Field6: ").Append(Field6).Append("\n");
            sb.Append("  Field7: ").Append(Field7).Append("\n");
            sb.Append("  Field8: ").Append(Field8).Append("\n");
            sb.Append("  Field9: ").Append(Field9).Append("\n");
            sb.Append("  Field10: ").Append(Field10).Append("\n");
            sb.Append("  RelatedEnquiryNumber: ").Append(RelatedEnquiryNumber).Append("\n");
            sb.Append("  ReturnableItemCheck: ").Append(ReturnableItemCheck).Append("\n");
            sb.Append("  ReceivingLocationCapacityCheck: ").Append(ReceivingLocationCapacityCheck).Append("\n");
            sb.Append("  StockCheck: ").Append(StockCheck).Append("\n");
            sb.Append("  PromisedDate: ").Append(PromisedDate).Append("\n");
            sb.Append("  PoNumber: ").Append(PoNumber).Append("\n");
            sb.Append("  PaymentType: ").Append(PaymentType).Append("\n");
            sb.Append("  DiscountPercent: ").Append(DiscountPercent).Append("\n");
            sb.Append("  DiscountAmount: ").Append(DiscountAmount).Append("\n");
            sb.Append("  PaymentDiscountPercent: ").Append(PaymentDiscountPercent).Append("\n");
            sb.Append("  TotalDepositeAmount: ").Append(TotalDepositeAmount).Append("\n");
            sb.Append("  TotalDiscountAmount: ").Append(TotalDiscountAmount).Append("\n");
            sb.Append("  TotalOrderAmount: ").Append(TotalOrderAmount).Append("\n");
            sb.Append("  TotalAmount: ").Append(TotalAmount).Append("\n");
            sb.Append("  IsSynced: ").Append(IsSynced).Append("\n");
            sb.Append("  PresellerCode: ").Append(PresellerCode).Append("\n");
            sb.Append("  PresellerName: ").Append(PresellerName).Append("\n");
            sb.Append("  TotalTaxAmount: ").Append(TotalTaxAmount).Append("\n");
            sb.Append("  TotalQuantity: ").Append(TotalQuantity).Append("\n");
            sb.Append("  TotalPrice: ").Append(TotalPrice).Append("\n");
            sb.Append("  TotalVolume: ").Append(TotalVolume).Append("\n");
            sb.Append("  TotalWeight: ").Append(TotalWeight).Append("\n");
            sb.Append("  NumberOfCrate: ").Append(NumberOfCrate).Append("\n");
            sb.Append("  NoOfDays: ").Append(NoOfDays).Append("\n");
            sb.Append("  SoNumber: ").Append(SoNumber).Append("\n");
            sb.Append("  IsSelfCollect: ").Append(IsSelfCollect).Append("\n");
            sb.Append("  CarrierId: ").Append(CarrierId).Append("\n");
            sb.Append("  CarrierCode: ").Append(CarrierCode).Append("\n");
            sb.Append("  CarrierName: ").Append(CarrierName).Append("\n");
            sb.Append("  CollectionLocationId: ").Append(CollectionLocationId).Append("\n");
            sb.Append("  CollectionLocationCode: ").Append(CollectionLocationCode).Append("\n");
            sb.Append("  CollectionLocationName: ").Append(CollectionLocationName).Append("\n");
            sb.Append("  OriginalCollectionDate: ").Append(OriginalCollectionDate).Append("\n");
            sb.Append("  BillToId: ").Append(BillToId).Append("\n");
            sb.Append("  LoginId: ").Append(LoginId).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  ModifiedBy: ").Append(ModifiedBy).Append("\n");
            sb.Append("  StatusResourceKey: ").Append(StatusResourceKey).Append("\n");
            sb.Append("  StatusClass: ").Append(StatusClass).Append("\n");
            sb.Append("  ExternalSystemStatus: ").Append(ExternalSystemStatus).Append("\n");
            sb.Append("  ExternalSystemStatusText: ").Append(ExternalSystemStatusText).Append("\n");
            sb.Append("  Region: ").Append(Region).Append("\n");
            sb.Append("  ProvinceDesc: ").Append(ProvinceDesc).Append("\n");
            sb.Append("  ExternalSystemStatusSyncTime: ").Append(ExternalSystemStatusSyncTime).Append("\n");
            sb.Append("  TotalCount: ").Append(TotalCount).Append("\n");
            sb.Append("  IsSOAttached: ").Append(IsSOAttached).Append("\n");
            sb.Append("  PickDateTimeFrom: ").Append(PickDateTimeFrom).Append("\n");
            sb.Append("  PickDateTimeTo: ").Append(PickDateTimeTo).Append("\n");
            sb.Append("  EnquiryDateFrom: ").Append(EnquiryDateFrom).Append("\n");
            sb.Append("  EnquiryDateTo: ").Append(EnquiryDateTo).Append("\n");
            sb.Append("  RequestDateFrom: ").Append(RequestDateFrom).Append("\n");
            sb.Append("  RequestDateTo: ").Append(RequestDateTo).Append("\n");
            sb.Append("  LastSyncDate: ").Append(LastSyncDate).Append("\n");
            sb.Append("  RpmValue: ").Append(RpmValue).Append("\n");
            sb.Append("  EmptiesLimit: ").Append(EmptiesLimit).Append("\n");
            sb.Append("  ActualEmpties: ").Append(ActualEmpties).Append("\n");
            sb.Append("  Empties: ").Append(Empties).Append("\n");
            sb.Append("  ReceivedCapacityPalettes: ").Append(ReceivedCapacityPalettes).Append("\n");
            sb.Append("  Area: ").Append(Area).Append("\n");
            sb.Append("  ZoneName: ").Append(ZoneName).Append("\n");
            sb.Append("  AssociatedOrder: ").Append(AssociatedOrder).Append("\n");
            sb.Append("  TotalPriceWithCurreny: ").Append(TotalPriceWithCurreny).Append("\n");
            sb.Append("  IsAvailableStock: ").Append(IsAvailableStock).Append("\n");
            sb.Append("  ReceivedCapacityPalettesCheck: ").Append(ReceivedCapacityPalettesCheck).Append("\n");
            sb.Append("  CheckedEnquiry: ").Append(CheckedEnquiry).Append("\n");
            sb.Append("  Capacity: ").Append(Capacity).Append("\n");
            sb.Append("  RoleId: ").Append(RoleId).Append("\n");
            sb.Append("  CultureId: ").Append(CultureId).Append("\n");
            sb.Append("  IsAnyItemPriceZero: ").Append(IsAnyItemPriceZero).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Class: ").Append(Class).Append("\n");
            sb.Append("  ShortName: ").Append(ShortName).Append("\n");
            sb.Append("  ExternalSystemRefID: ").Append(ExternalSystemRefID).Append("\n");
            sb.Append("  ErrorMessage: ").Append(ErrorMessage).Append("\n");
            sb.Append("  SubChannel: ").Append(SubChannel).Append("\n");
            sb.Append("  ReasonCodeList: ").Append(ReasonCodeList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO)obj);
        }

        /// <summary>
        /// Returns true if GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    CopyEnquiryGuid == other.CopyEnquiryGuid ||
                    CopyEnquiryGuid != null &&
                    CopyEnquiryGuid.Equals(other.CopyEnquiryGuid)
                ) && 
                (
                    ReferenceGUIDRPM == other.ReferenceGUIDRPM ||
                    ReferenceGUIDRPM != null &&
                    ReferenceGUIDRPM.Equals(other.ReferenceGUIDRPM)
                ) && 
                (
                    WorkFlowCode == other.WorkFlowCode ||
                    WorkFlowCode != null &&
                    WorkFlowCode.Equals(other.WorkFlowCode)
                ) && 
                (
                    EnquiryGuid == other.EnquiryGuid ||
                    EnquiryGuid != null &&
                    EnquiryGuid.Equals(other.EnquiryGuid)
                ) && 
                (
                    InquiryDescription == other.InquiryDescription ||
                    InquiryDescription != null &&
                    InquiryDescription.Equals(other.InquiryDescription)
                ) && 
                (
                    IsOrderSelfCollect == other.IsOrderSelfCollect ||
                    IsOrderSelfCollect != null &&
                    IsOrderSelfCollect.Equals(other.IsOrderSelfCollect)
                ) && 
                (
                    ActivityStartTime == other.ActivityStartTime ||
                    ActivityStartTime != null &&
                    ActivityStartTime.Equals(other.ActivityStartTime)
                ) && 
                (
                    PriorityRating == other.PriorityRating ||
                    PriorityRating != null &&
                    PriorityRating.Equals(other.PriorityRating)
                ) && 
                (
                    EnquiryList == other.EnquiryList ||
                    EnquiryList != null &&
                    EnquiryList.SequenceEqual(other.EnquiryList)
                ) && 
                (
                    ProductList == other.ProductList ||
                    ProductList != null &&
                    ProductList.SequenceEqual(other.ProductList)
                ) && 
                (
                    NoteList == other.NoteList ||
                    NoteList != null &&
                    NoteList.SequenceEqual(other.NoteList)
                ) && 
                (
                    ReturnPakageMaterialList == other.ReturnPakageMaterialList ||
                    ReturnPakageMaterialList != null &&
                    ReturnPakageMaterialList.SequenceEqual(other.ReturnPakageMaterialList)
                ) && 
                (
                    IsCancelEnquiry == other.IsCancelEnquiry ||
                    IsCancelEnquiry != null &&
                    IsCancelEnquiry.Equals(other.IsCancelEnquiry)
                ) && 
                (
                    IsRejectEnquiry == other.IsRejectEnquiry ||
                    IsRejectEnquiry != null &&
                    IsRejectEnquiry.Equals(other.IsRejectEnquiry)
                ) && 
                (
                    EnquiryId == other.EnquiryId ||
                    EnquiryId != null &&
                    EnquiryId.Equals(other.EnquiryId)
                ) && 
                (
                    ObjectId == other.ObjectId ||
                    ObjectId != null &&
                    ObjectId.Equals(other.ObjectId)
                ) && 
                (
                    ObjectNumber == other.ObjectNumber ||
                    ObjectNumber != null &&
                    ObjectNumber.Equals(other.ObjectNumber)
                ) && 
                (
                    OrderNumber == other.OrderNumber ||
                    OrderNumber != null &&
                    OrderNumber.Equals(other.OrderNumber)
                ) && 
                (
                    CompanyId == other.CompanyId ||
                    CompanyId != null &&
                    CompanyId.Equals(other.CompanyId)
                ) && 
                (
                    RelatedEnquiryId == other.RelatedEnquiryId ||
                    RelatedEnquiryId != null &&
                    RelatedEnquiryId.Equals(other.RelatedEnquiryId)
                ) && 
                (
                    FileAttached == other.FileAttached ||
                    FileAttached != null &&
                    FileAttached.Equals(other.FileAttached)
                ) && 
                (
                    FileAttachedDownload == other.FileAttachedDownload ||
                    FileAttachedDownload != null &&
                    FileAttachedDownload.Equals(other.FileAttachedDownload)
                ) && 
                (
                    CompanyCode == other.CompanyCode ||
                    CompanyCode != null &&
                    CompanyCode.Equals(other.CompanyCode)
                ) && 
                (
                    IsDifferentSKU == other.IsDifferentSKU ||
                    IsDifferentSKU != null &&
                    IsDifferentSKU.Equals(other.IsDifferentSKU)
                ) && 
                (
                    TypeOfWay == other.TypeOfWay ||
                    TypeOfWay != null &&
                    TypeOfWay.Equals(other.TypeOfWay)
                ) && 
                (
                    DocumentName == other.DocumentName ||
                    DocumentName != null &&
                    DocumentName.Equals(other.DocumentName)
                ) && 
                (
                    DocumentFormat == other.DocumentFormat ||
                    DocumentFormat != null &&
                    DocumentFormat.Equals(other.DocumentFormat)
                ) && 
                (
                    SkuPhoto == other.SkuPhoto ||
                    SkuPhoto != null &&
                    SkuPhoto.Equals(other.SkuPhoto)
                ) && 
                (
                    File == other.File ||
                    File != null &&
                    File.Equals(other.File)
                ) && 
                (
                    FileFormat == other.FileFormat ||
                    FileFormat != null &&
                    FileFormat.Equals(other.FileFormat)
                ) && 
                (
                    DocumentExtension == other.DocumentExtension ||
                    DocumentExtension != null &&
                    DocumentExtension.Equals(other.DocumentExtension)
                ) && 
                (
                    EditCompanyCode == other.EditCompanyCode ||
                    EditCompanyCode != null &&
                    EditCompanyCode.Equals(other.EditCompanyCode)
                ) && 
                (
                    IsExportToExcel == other.IsExportToExcel ||
                    IsExportToExcel != null &&
                    IsExportToExcel.Equals(other.IsExportToExcel)
                ) && 
                (
                    EditRoleId == other.EditRoleId ||
                    EditRoleId != null &&
                    EditRoleId.Equals(other.EditRoleId)
                ) && 
                (
                    Priority == other.Priority ||
                    Priority != null &&
                    Priority.Equals(other.Priority)
                ) && 
                (
                    PriorityValue == other.PriorityValue ||
                    PriorityValue != null &&
                    PriorityValue.Equals(other.PriorityValue)
                ) && 
                (
                    CompanyName == other.CompanyName ||
                    CompanyName != null &&
                    CompanyName.Equals(other.CompanyName)
                ) && 
                (
                    EnquiryGroupNumber == other.EnquiryGroupNumber ||
                    EnquiryGroupNumber != null &&
                    EnquiryGroupNumber.Equals(other.EnquiryGroupNumber)
                ) && 
                (
                    EnquiryAutoNumber == other.EnquiryAutoNumber ||
                    EnquiryAutoNumber != null &&
                    EnquiryAutoNumber.Equals(other.EnquiryAutoNumber)
                ) && 
                (
                    EnquiryType == other.EnquiryType ||
                    EnquiryType != null &&
                    EnquiryType.Equals(other.EnquiryType)
                ) && 
                (
                    SoldTo == other.SoldTo ||
                    SoldTo != null &&
                    SoldTo.Equals(other.SoldTo)
                ) && 
                (
                    SoldToCode == other.SoldToCode ||
                    SoldToCode != null &&
                    SoldToCode.Equals(other.SoldToCode)
                ) && 
                (
                    SoldToName == other.SoldToName ||
                    SoldToName != null &&
                    SoldToName.Equals(other.SoldToName)
                ) && 
                (
                    ShipTo == other.ShipTo ||
                    ShipTo != null &&
                    ShipTo.Equals(other.ShipTo)
                ) && 
                (
                    ShipToCode == other.ShipToCode ||
                    ShipToCode != null &&
                    ShipToCode.Equals(other.ShipToCode)
                ) && 
                (
                    ShipToName == other.ShipToName ||
                    ShipToName != null &&
                    ShipToName.Equals(other.ShipToName)
                ) && 
                (
                    ShipToLocationAddress == other.ShipToLocationAddress ||
                    ShipToLocationAddress != null &&
                    ShipToLocationAddress.Equals(other.ShipToLocationAddress)
                ) && 
                (
                    BillTo == other.BillTo ||
                    BillTo != null &&
                    BillTo.Equals(other.BillTo)
                ) && 
                (
                    BillToCode == other.BillToCode ||
                    BillToCode != null &&
                    BillToCode.Equals(other.BillToCode)
                ) && 
                (
                    BillToName == other.BillToName ||
                    BillToName != null &&
                    BillToName.Equals(other.BillToName)
                ) && 
                (
                    PickDateTime == other.PickDateTime ||
                    PickDateTime != null &&
                    PickDateTime.Equals(other.PickDateTime)
                ) && 
                (
                    EnquiryDate == other.EnquiryDate ||
                    EnquiryDate != null &&
                    EnquiryDate.Equals(other.EnquiryDate)
                ) && 
                (
                    RequestDate == other.RequestDate ||
                    RequestDate != null &&
                    RequestDate.Equals(other.RequestDate)
                ) && 
                (
                    PrimaryAddressId == other.PrimaryAddressId ||
                    PrimaryAddressId != null &&
                    PrimaryAddressId.Equals(other.PrimaryAddressId)
                ) && 
                (
                    SecondaryAddressId == other.SecondaryAddressId ||
                    SecondaryAddressId != null &&
                    SecondaryAddressId.Equals(other.SecondaryAddressId)
                ) && 
                (
                    PrimaryAddress == other.PrimaryAddress ||
                    PrimaryAddress != null &&
                    PrimaryAddress.Equals(other.PrimaryAddress)
                ) && 
                (
                    SecondaryAddress == other.SecondaryAddress ||
                    SecondaryAddress != null &&
                    SecondaryAddress.Equals(other.SecondaryAddress)
                ) && 
                (
                    OrderProposedETD == other.OrderProposedETD ||
                    OrderProposedETD != null &&
                    OrderProposedETD.Equals(other.OrderProposedETD)
                ) && 
                (
                    Remarks == other.Remarks ||
                    Remarks != null &&
                    Remarks.Equals(other.Remarks)
                ) && 
                (
                    PreviousState == other.PreviousState ||
                    PreviousState != null &&
                    PreviousState.Equals(other.PreviousState)
                ) && 
                (
                    CurrentState == other.CurrentState ||
                    CurrentState != null &&
                    CurrentState.Equals(other.CurrentState)
                ) && 
                (
                    PreviousProcess == other.PreviousProcess ||
                    PreviousProcess != null &&
                    PreviousProcess.Equals(other.PreviousProcess)
                ) && 
                (
                    CurrentProcess == other.CurrentProcess ||
                    CurrentProcess != null &&
                    CurrentProcess.Equals(other.CurrentProcess)
                ) && 
                (
                    TruckSizeId == other.TruckSizeId ||
                    TruckSizeId != null &&
                    TruckSizeId.Equals(other.TruckSizeId)
                ) && 
                (
                    TruckSize == other.TruckSize ||
                    TruckSize != null &&
                    TruckSize.Equals(other.TruckSize)
                ) && 
                (
                    CollectionDateFromSettingValue == other.CollectionDateFromSettingValue ||
                    CollectionDateFromSettingValue != null &&
                    CollectionDateFromSettingValue.Equals(other.CollectionDateFromSettingValue)
                ) && 
                (
                    PalletSpace == other.PalletSpace ||
                    PalletSpace != null &&
                    PalletSpace.Equals(other.PalletSpace)
                ) && 
                (
                    NumberOfPalettes == other.NumberOfPalettes ||
                    NumberOfPalettes != null &&
                    NumberOfPalettes.Equals(other.NumberOfPalettes)
                ) && 
                (
                    TruckWeight == other.TruckWeight ||
                    TruckWeight != null &&
                    TruckWeight.Equals(other.TruckWeight)
                ) && 
                (
                    OrderedBy == other.OrderedBy ||
                    OrderedBy != null &&
                    OrderedBy.Equals(other.OrderedBy)
                ) && 
                (
                    GratisCode == other.GratisCode ||
                    GratisCode != null &&
                    GratisCode.Equals(other.GratisCode)
                ) && 
                (
                    Province == other.Province ||
                    Province != null &&
                    Province.Equals(other.Province)
                ) && 
                (
                    Description1 == other.Description1 ||
                    Description1 != null &&
                    Description1.Equals(other.Description1)
                ) && 
                (
                    Description2 == other.Description2 ||
                    Description2 != null &&
                    Description2.Equals(other.Description2)
                ) && 
                (
                    IsRecievingLocationCapacityExceed == other.IsRecievingLocationCapacityExceed ||
                    IsRecievingLocationCapacityExceed != null &&
                    IsRecievingLocationCapacityExceed.Equals(other.IsRecievingLocationCapacityExceed)
                ) && 
                (
                    StockLocationId == other.StockLocationId ||
                    StockLocationId != null &&
                    StockLocationId.Equals(other.StockLocationId)
                ) && 
                (
                    CreatedDate == other.CreatedDate ||
                    CreatedDate != null &&
                    CreatedDate.Equals(other.CreatedDate)
                ) && 
                (
                    ModifiedDate == other.ModifiedDate ||
                    ModifiedDate != null &&
                    ModifiedDate.Equals(other.ModifiedDate)
                ) && 
                (
                    IsActive == other.IsActive ||
                    IsActive != null &&
                    IsActive.Equals(other.IsActive)
                ) && 
                (
                    IsAdhoc == other.IsAdhoc ||
                    IsAdhoc != null &&
                    IsAdhoc.Equals(other.IsAdhoc)
                ) && 
                (
                    SequenceNo == other.SequenceNo ||
                    SequenceNo != null &&
                    SequenceNo.Equals(other.SequenceNo)
                ) && 
                (
                    Field1 == other.Field1 ||
                    Field1 != null &&
                    Field1.Equals(other.Field1)
                ) && 
                (
                    Field2 == other.Field2 ||
                    Field2 != null &&
                    Field2.Equals(other.Field2)
                ) && 
                (
                    Field3 == other.Field3 ||
                    Field3 != null &&
                    Field3.Equals(other.Field3)
                ) && 
                (
                    Field4 == other.Field4 ||
                    Field4 != null &&
                    Field4.Equals(other.Field4)
                ) && 
                (
                    Field5 == other.Field5 ||
                    Field5 != null &&
                    Field5.Equals(other.Field5)
                ) && 
                (
                    Field6 == other.Field6 ||
                    Field6 != null &&
                    Field6.Equals(other.Field6)
                ) && 
                (
                    Field7 == other.Field7 ||
                    Field7 != null &&
                    Field7.Equals(other.Field7)
                ) && 
                (
                    Field8 == other.Field8 ||
                    Field8 != null &&
                    Field8.Equals(other.Field8)
                ) && 
                (
                    Field9 == other.Field9 ||
                    Field9 != null &&
                    Field9.Equals(other.Field9)
                ) && 
                (
                    Field10 == other.Field10 ||
                    Field10 != null &&
                    Field10.Equals(other.Field10)
                ) && 
                (
                    RelatedEnquiryNumber == other.RelatedEnquiryNumber ||
                    RelatedEnquiryNumber != null &&
                    RelatedEnquiryNumber.Equals(other.RelatedEnquiryNumber)
                ) && 
                (
                    ReturnableItemCheck == other.ReturnableItemCheck ||
                    ReturnableItemCheck != null &&
                    ReturnableItemCheck.Equals(other.ReturnableItemCheck)
                ) && 
                (
                    ReceivingLocationCapacityCheck == other.ReceivingLocationCapacityCheck ||
                    ReceivingLocationCapacityCheck != null &&
                    ReceivingLocationCapacityCheck.Equals(other.ReceivingLocationCapacityCheck)
                ) && 
                (
                    StockCheck == other.StockCheck ||
                    StockCheck != null &&
                    StockCheck.Equals(other.StockCheck)
                ) && 
                (
                    PromisedDate == other.PromisedDate ||
                    PromisedDate != null &&
                    PromisedDate.Equals(other.PromisedDate)
                ) && 
                (
                    PoNumber == other.PoNumber ||
                    PoNumber != null &&
                    PoNumber.Equals(other.PoNumber)
                ) && 
                (
                    PaymentType == other.PaymentType ||
                    PaymentType != null &&
                    PaymentType.Equals(other.PaymentType)
                ) && 
                (
                    DiscountPercent == other.DiscountPercent ||
                    DiscountPercent != null &&
                    DiscountPercent.Equals(other.DiscountPercent)
                ) && 
                (
                    DiscountAmount == other.DiscountAmount ||
                    DiscountAmount != null &&
                    DiscountAmount.Equals(other.DiscountAmount)
                ) && 
                (
                    PaymentDiscountPercent == other.PaymentDiscountPercent ||
                    PaymentDiscountPercent != null &&
                    PaymentDiscountPercent.Equals(other.PaymentDiscountPercent)
                ) && 
                (
                    TotalDepositeAmount == other.TotalDepositeAmount ||
                    TotalDepositeAmount != null &&
                    TotalDepositeAmount.Equals(other.TotalDepositeAmount)
                ) && 
                (
                    TotalDiscountAmount == other.TotalDiscountAmount ||
                    TotalDiscountAmount != null &&
                    TotalDiscountAmount.Equals(other.TotalDiscountAmount)
                ) && 
                (
                    TotalOrderAmount == other.TotalOrderAmount ||
                    TotalOrderAmount != null &&
                    TotalOrderAmount.Equals(other.TotalOrderAmount)
                ) && 
                (
                    TotalAmount == other.TotalAmount ||
                    TotalAmount != null &&
                    TotalAmount.Equals(other.TotalAmount)
                ) && 
                (
                    IsSynced == other.IsSynced ||
                    IsSynced != null &&
                    IsSynced.Equals(other.IsSynced)
                ) && 
                (
                    PresellerCode == other.PresellerCode ||
                    PresellerCode != null &&
                    PresellerCode.Equals(other.PresellerCode)
                ) && 
                (
                    PresellerName == other.PresellerName ||
                    PresellerName != null &&
                    PresellerName.Equals(other.PresellerName)
                ) && 
                (
                    TotalTaxAmount == other.TotalTaxAmount ||
                    TotalTaxAmount != null &&
                    TotalTaxAmount.Equals(other.TotalTaxAmount)
                ) && 
                (
                    TotalQuantity == other.TotalQuantity ||
                    TotalQuantity != null &&
                    TotalQuantity.Equals(other.TotalQuantity)
                ) && 
                (
                    TotalPrice == other.TotalPrice ||
                    TotalPrice != null &&
                    TotalPrice.Equals(other.TotalPrice)
                ) && 
                (
                    TotalVolume == other.TotalVolume ||
                    TotalVolume != null &&
                    TotalVolume.Equals(other.TotalVolume)
                ) && 
                (
                    TotalWeight == other.TotalWeight ||
                    TotalWeight != null &&
                    TotalWeight.Equals(other.TotalWeight)
                ) && 
                (
                    NumberOfCrate == other.NumberOfCrate ||
                    NumberOfCrate != null &&
                    NumberOfCrate.Equals(other.NumberOfCrate)
                ) && 
                (
                    NoOfDays == other.NoOfDays ||
                    NoOfDays != null &&
                    NoOfDays.Equals(other.NoOfDays)
                ) && 
                (
                    SoNumber == other.SoNumber ||
                    SoNumber != null &&
                    SoNumber.Equals(other.SoNumber)
                ) && 
                (
                    IsSelfCollect == other.IsSelfCollect ||
                    IsSelfCollect != null &&
                    IsSelfCollect.Equals(other.IsSelfCollect)
                ) && 
                (
                    CarrierId == other.CarrierId ||
                    CarrierId != null &&
                    CarrierId.Equals(other.CarrierId)
                ) && 
                (
                    CarrierCode == other.CarrierCode ||
                    CarrierCode != null &&
                    CarrierCode.Equals(other.CarrierCode)
                ) && 
                (
                    CarrierName == other.CarrierName ||
                    CarrierName != null &&
                    CarrierName.Equals(other.CarrierName)
                ) && 
                (
                    CollectionLocationId == other.CollectionLocationId ||
                    CollectionLocationId != null &&
                    CollectionLocationId.Equals(other.CollectionLocationId)
                ) && 
                (
                    CollectionLocationCode == other.CollectionLocationCode ||
                    CollectionLocationCode != null &&
                    CollectionLocationCode.Equals(other.CollectionLocationCode)
                ) && 
                (
                    CollectionLocationName == other.CollectionLocationName ||
                    CollectionLocationName != null &&
                    CollectionLocationName.Equals(other.CollectionLocationName)
                ) && 
                (
                    OriginalCollectionDate == other.OriginalCollectionDate ||
                    OriginalCollectionDate != null &&
                    OriginalCollectionDate.Equals(other.OriginalCollectionDate)
                ) && 
                (
                    BillToId == other.BillToId ||
                    BillToId != null &&
                    BillToId.Equals(other.BillToId)
                ) && 
                (
                    LoginId == other.LoginId ||
                    LoginId != null &&
                    LoginId.Equals(other.LoginId)
                ) && 
                (
                    CreatedBy == other.CreatedBy ||
                    CreatedBy != null &&
                    CreatedBy.Equals(other.CreatedBy)
                ) && 
                (
                    ModifiedBy == other.ModifiedBy ||
                    ModifiedBy != null &&
                    ModifiedBy.Equals(other.ModifiedBy)
                ) && 
                (
                    StatusResourceKey == other.StatusResourceKey ||
                    StatusResourceKey != null &&
                    StatusResourceKey.Equals(other.StatusResourceKey)
                ) && 
                (
                    StatusClass == other.StatusClass ||
                    StatusClass != null &&
                    StatusClass.Equals(other.StatusClass)
                ) && 
                (
                    ExternalSystemStatus == other.ExternalSystemStatus ||
                    ExternalSystemStatus != null &&
                    ExternalSystemStatus.Equals(other.ExternalSystemStatus)
                ) && 
                (
                    ExternalSystemStatusText == other.ExternalSystemStatusText ||
                    ExternalSystemStatusText != null &&
                    ExternalSystemStatusText.Equals(other.ExternalSystemStatusText)
                ) && 
                (
                    Region == other.Region ||
                    Region != null &&
                    Region.Equals(other.Region)
                ) && 
                (
                    ProvinceDesc == other.ProvinceDesc ||
                    ProvinceDesc != null &&
                    ProvinceDesc.Equals(other.ProvinceDesc)
                ) && 
                (
                    ExternalSystemStatusSyncTime == other.ExternalSystemStatusSyncTime ||
                    ExternalSystemStatusSyncTime != null &&
                    ExternalSystemStatusSyncTime.Equals(other.ExternalSystemStatusSyncTime)
                ) && 
                (
                    TotalCount == other.TotalCount ||
                    TotalCount != null &&
                    TotalCount.Equals(other.TotalCount)
                ) && 
                (
                    IsSOAttached == other.IsSOAttached ||
                    IsSOAttached != null &&
                    IsSOAttached.Equals(other.IsSOAttached)
                ) && 
                (
                    PickDateTimeFrom == other.PickDateTimeFrom ||
                    PickDateTimeFrom != null &&
                    PickDateTimeFrom.Equals(other.PickDateTimeFrom)
                ) && 
                (
                    PickDateTimeTo == other.PickDateTimeTo ||
                    PickDateTimeTo != null &&
                    PickDateTimeTo.Equals(other.PickDateTimeTo)
                ) && 
                (
                    EnquiryDateFrom == other.EnquiryDateFrom ||
                    EnquiryDateFrom != null &&
                    EnquiryDateFrom.Equals(other.EnquiryDateFrom)
                ) && 
                (
                    EnquiryDateTo == other.EnquiryDateTo ||
                    EnquiryDateTo != null &&
                    EnquiryDateTo.Equals(other.EnquiryDateTo)
                ) && 
                (
                    RequestDateFrom == other.RequestDateFrom ||
                    RequestDateFrom != null &&
                    RequestDateFrom.Equals(other.RequestDateFrom)
                ) && 
                (
                    RequestDateTo == other.RequestDateTo ||
                    RequestDateTo != null &&
                    RequestDateTo.Equals(other.RequestDateTo)
                ) && 
                (
                    LastSyncDate == other.LastSyncDate ||
                    LastSyncDate != null &&
                    LastSyncDate.Equals(other.LastSyncDate)
                ) && 
                (
                    RpmValue == other.RpmValue ||
                    RpmValue != null &&
                    RpmValue.Equals(other.RpmValue)
                ) && 
                (
                    EmptiesLimit == other.EmptiesLimit ||
                    EmptiesLimit != null &&
                    EmptiesLimit.Equals(other.EmptiesLimit)
                ) && 
                (
                    ActualEmpties == other.ActualEmpties ||
                    ActualEmpties != null &&
                    ActualEmpties.Equals(other.ActualEmpties)
                ) && 
                (
                    Empties == other.Empties ||
                    Empties != null &&
                    Empties.Equals(other.Empties)
                ) && 
                (
                    ReceivedCapacityPalettes == other.ReceivedCapacityPalettes ||
                    ReceivedCapacityPalettes != null &&
                    ReceivedCapacityPalettes.Equals(other.ReceivedCapacityPalettes)
                ) && 
                (
                    Area == other.Area ||
                    Area != null &&
                    Area.Equals(other.Area)
                ) && 
                (
                    ZoneName == other.ZoneName ||
                    ZoneName != null &&
                    ZoneName.Equals(other.ZoneName)
                ) && 
                (
                    AssociatedOrder == other.AssociatedOrder ||
                    AssociatedOrder != null &&
                    AssociatedOrder.Equals(other.AssociatedOrder)
                ) && 
                (
                    TotalPriceWithCurreny == other.TotalPriceWithCurreny ||
                    TotalPriceWithCurreny != null &&
                    TotalPriceWithCurreny.Equals(other.TotalPriceWithCurreny)
                ) && 
                (
                    IsAvailableStock == other.IsAvailableStock ||
                    IsAvailableStock != null &&
                    IsAvailableStock.Equals(other.IsAvailableStock)
                ) && 
                (
                    ReceivedCapacityPalettesCheck == other.ReceivedCapacityPalettesCheck ||
                    ReceivedCapacityPalettesCheck != null &&
                    ReceivedCapacityPalettesCheck.Equals(other.ReceivedCapacityPalettesCheck)
                ) && 
                (
                    CheckedEnquiry == other.CheckedEnquiry ||
                    CheckedEnquiry != null &&
                    CheckedEnquiry.Equals(other.CheckedEnquiry)
                ) && 
                (
                    Capacity == other.Capacity ||
                    Capacity != null &&
                    Capacity.Equals(other.Capacity)
                ) && 
                (
                    RoleId == other.RoleId ||
                    RoleId != null &&
                    RoleId.Equals(other.RoleId)
                ) && 
                (
                    CultureId == other.CultureId ||
                    CultureId != null &&
                    CultureId.Equals(other.CultureId)
                ) && 
                (
                    IsAnyItemPriceZero == other.IsAnyItemPriceZero ||
                    IsAnyItemPriceZero != null &&
                    IsAnyItemPriceZero.Equals(other.IsAnyItemPriceZero)
                ) && 
                (
                    Status == other.Status ||
                    Status != null &&
                    Status.Equals(other.Status)
                ) && 
                (
                    Class == other.Class ||
                    Class != null &&
                    Class.Equals(other.Class)
                ) && 
                (
                    ShortName == other.ShortName ||
                    ShortName != null &&
                    ShortName.Equals(other.ShortName)
                ) && 
                (
                    ExternalSystemRefID == other.ExternalSystemRefID ||
                    ExternalSystemRefID != null &&
                    ExternalSystemRefID.Equals(other.ExternalSystemRefID)
                ) && 
                (
                    ErrorMessage == other.ErrorMessage ||
                    ErrorMessage != null &&
                    ErrorMessage.Equals(other.ErrorMessage)
                ) && 
                (
                    SubChannel == other.SubChannel ||
                    SubChannel != null &&
                    SubChannel.Equals(other.SubChannel)
                ) && 
                (
                    ReasonCodeList == other.ReasonCodeList ||
                    ReasonCodeList != null &&
                    ReasonCodeList.SequenceEqual(other.ReasonCodeList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (CopyEnquiryGuid != null)
                    hashCode = hashCode * 59 + CopyEnquiryGuid.GetHashCode();
                    if (ReferenceGUIDRPM != null)
                    hashCode = hashCode * 59 + ReferenceGUIDRPM.GetHashCode();
                    if (WorkFlowCode != null)
                    hashCode = hashCode * 59 + WorkFlowCode.GetHashCode();
                    if (EnquiryGuid != null)
                    hashCode = hashCode * 59 + EnquiryGuid.GetHashCode();
                    if (InquiryDescription != null)
                    hashCode = hashCode * 59 + InquiryDescription.GetHashCode();
                    if (IsOrderSelfCollect != null)
                    hashCode = hashCode * 59 + IsOrderSelfCollect.GetHashCode();
                    if (ActivityStartTime != null)
                    hashCode = hashCode * 59 + ActivityStartTime.GetHashCode();
                    if (PriorityRating != null)
                    hashCode = hashCode * 59 + PriorityRating.GetHashCode();
                    if (EnquiryList != null)
                    hashCode = hashCode * 59 + EnquiryList.GetHashCode();
                    if (ProductList != null)
                    hashCode = hashCode * 59 + ProductList.GetHashCode();
                    if (NoteList != null)
                    hashCode = hashCode * 59 + NoteList.GetHashCode();
                    if (ReturnPakageMaterialList != null)
                    hashCode = hashCode * 59 + ReturnPakageMaterialList.GetHashCode();
                    if (IsCancelEnquiry != null)
                    hashCode = hashCode * 59 + IsCancelEnquiry.GetHashCode();
                    if (IsRejectEnquiry != null)
                    hashCode = hashCode * 59 + IsRejectEnquiry.GetHashCode();
                    if (EnquiryId != null)
                    hashCode = hashCode * 59 + EnquiryId.GetHashCode();
                    if (ObjectId != null)
                    hashCode = hashCode * 59 + ObjectId.GetHashCode();
                    if (ObjectNumber != null)
                    hashCode = hashCode * 59 + ObjectNumber.GetHashCode();
                    if (OrderNumber != null)
                    hashCode = hashCode * 59 + OrderNumber.GetHashCode();
                    if (CompanyId != null)
                    hashCode = hashCode * 59 + CompanyId.GetHashCode();
                    if (RelatedEnquiryId != null)
                    hashCode = hashCode * 59 + RelatedEnquiryId.GetHashCode();
                    if (FileAttached != null)
                    hashCode = hashCode * 59 + FileAttached.GetHashCode();
                    if (FileAttachedDownload != null)
                    hashCode = hashCode * 59 + FileAttachedDownload.GetHashCode();
                    if (CompanyCode != null)
                    hashCode = hashCode * 59 + CompanyCode.GetHashCode();
                    if (IsDifferentSKU != null)
                    hashCode = hashCode * 59 + IsDifferentSKU.GetHashCode();
                    if (TypeOfWay != null)
                    hashCode = hashCode * 59 + TypeOfWay.GetHashCode();
                    if (DocumentName != null)
                    hashCode = hashCode * 59 + DocumentName.GetHashCode();
                    if (DocumentFormat != null)
                    hashCode = hashCode * 59 + DocumentFormat.GetHashCode();
                    if (SkuPhoto != null)
                    hashCode = hashCode * 59 + SkuPhoto.GetHashCode();
                    if (File != null)
                    hashCode = hashCode * 59 + File.GetHashCode();
                    if (FileFormat != null)
                    hashCode = hashCode * 59 + FileFormat.GetHashCode();
                    if (DocumentExtension != null)
                    hashCode = hashCode * 59 + DocumentExtension.GetHashCode();
                    if (EditCompanyCode != null)
                    hashCode = hashCode * 59 + EditCompanyCode.GetHashCode();
                    if (IsExportToExcel != null)
                    hashCode = hashCode * 59 + IsExportToExcel.GetHashCode();
                    if (EditRoleId != null)
                    hashCode = hashCode * 59 + EditRoleId.GetHashCode();
                    if (Priority != null)
                    hashCode = hashCode * 59 + Priority.GetHashCode();
                    if (PriorityValue != null)
                    hashCode = hashCode * 59 + PriorityValue.GetHashCode();
                    if (CompanyName != null)
                    hashCode = hashCode * 59 + CompanyName.GetHashCode();
                    if (EnquiryGroupNumber != null)
                    hashCode = hashCode * 59 + EnquiryGroupNumber.GetHashCode();
                    if (EnquiryAutoNumber != null)
                    hashCode = hashCode * 59 + EnquiryAutoNumber.GetHashCode();
                    if (EnquiryType != null)
                    hashCode = hashCode * 59 + EnquiryType.GetHashCode();
                    if (SoldTo != null)
                    hashCode = hashCode * 59 + SoldTo.GetHashCode();
                    if (SoldToCode != null)
                    hashCode = hashCode * 59 + SoldToCode.GetHashCode();
                    if (SoldToName != null)
                    hashCode = hashCode * 59 + SoldToName.GetHashCode();
                    if (ShipTo != null)
                    hashCode = hashCode * 59 + ShipTo.GetHashCode();
                    if (ShipToCode != null)
                    hashCode = hashCode * 59 + ShipToCode.GetHashCode();
                    if (ShipToName != null)
                    hashCode = hashCode * 59 + ShipToName.GetHashCode();
                    if (ShipToLocationAddress != null)
                    hashCode = hashCode * 59 + ShipToLocationAddress.GetHashCode();
                    if (BillTo != null)
                    hashCode = hashCode * 59 + BillTo.GetHashCode();
                    if (BillToCode != null)
                    hashCode = hashCode * 59 + BillToCode.GetHashCode();
                    if (BillToName != null)
                    hashCode = hashCode * 59 + BillToName.GetHashCode();
                    if (PickDateTime != null)
                    hashCode = hashCode * 59 + PickDateTime.GetHashCode();
                    if (EnquiryDate != null)
                    hashCode = hashCode * 59 + EnquiryDate.GetHashCode();
                    if (RequestDate != null)
                    hashCode = hashCode * 59 + RequestDate.GetHashCode();
                    if (PrimaryAddressId != null)
                    hashCode = hashCode * 59 + PrimaryAddressId.GetHashCode();
                    if (SecondaryAddressId != null)
                    hashCode = hashCode * 59 + SecondaryAddressId.GetHashCode();
                    if (PrimaryAddress != null)
                    hashCode = hashCode * 59 + PrimaryAddress.GetHashCode();
                    if (SecondaryAddress != null)
                    hashCode = hashCode * 59 + SecondaryAddress.GetHashCode();
                    if (OrderProposedETD != null)
                    hashCode = hashCode * 59 + OrderProposedETD.GetHashCode();
                    if (Remarks != null)
                    hashCode = hashCode * 59 + Remarks.GetHashCode();
                    if (PreviousState != null)
                    hashCode = hashCode * 59 + PreviousState.GetHashCode();
                    if (CurrentState != null)
                    hashCode = hashCode * 59 + CurrentState.GetHashCode();
                    if (PreviousProcess != null)
                    hashCode = hashCode * 59 + PreviousProcess.GetHashCode();
                    if (CurrentProcess != null)
                    hashCode = hashCode * 59 + CurrentProcess.GetHashCode();
                    if (TruckSizeId != null)
                    hashCode = hashCode * 59 + TruckSizeId.GetHashCode();
                    if (TruckSize != null)
                    hashCode = hashCode * 59 + TruckSize.GetHashCode();
                    if (CollectionDateFromSettingValue != null)
                    hashCode = hashCode * 59 + CollectionDateFromSettingValue.GetHashCode();
                    if (PalletSpace != null)
                    hashCode = hashCode * 59 + PalletSpace.GetHashCode();
                    if (NumberOfPalettes != null)
                    hashCode = hashCode * 59 + NumberOfPalettes.GetHashCode();
                    if (TruckWeight != null)
                    hashCode = hashCode * 59 + TruckWeight.GetHashCode();
                    if (OrderedBy != null)
                    hashCode = hashCode * 59 + OrderedBy.GetHashCode();
                    if (GratisCode != null)
                    hashCode = hashCode * 59 + GratisCode.GetHashCode();
                    if (Province != null)
                    hashCode = hashCode * 59 + Province.GetHashCode();
                    if (Description1 != null)
                    hashCode = hashCode * 59 + Description1.GetHashCode();
                    if (Description2 != null)
                    hashCode = hashCode * 59 + Description2.GetHashCode();
                    if (IsRecievingLocationCapacityExceed != null)
                    hashCode = hashCode * 59 + IsRecievingLocationCapacityExceed.GetHashCode();
                    if (StockLocationId != null)
                    hashCode = hashCode * 59 + StockLocationId.GetHashCode();
                    if (CreatedDate != null)
                    hashCode = hashCode * 59 + CreatedDate.GetHashCode();
                    if (ModifiedDate != null)
                    hashCode = hashCode * 59 + ModifiedDate.GetHashCode();
                    if (IsActive != null)
                    hashCode = hashCode * 59 + IsActive.GetHashCode();
                    if (IsAdhoc != null)
                    hashCode = hashCode * 59 + IsAdhoc.GetHashCode();
                    if (SequenceNo != null)
                    hashCode = hashCode * 59 + SequenceNo.GetHashCode();
                    if (Field1 != null)
                    hashCode = hashCode * 59 + Field1.GetHashCode();
                    if (Field2 != null)
                    hashCode = hashCode * 59 + Field2.GetHashCode();
                    if (Field3 != null)
                    hashCode = hashCode * 59 + Field3.GetHashCode();
                    if (Field4 != null)
                    hashCode = hashCode * 59 + Field4.GetHashCode();
                    if (Field5 != null)
                    hashCode = hashCode * 59 + Field5.GetHashCode();
                    if (Field6 != null)
                    hashCode = hashCode * 59 + Field6.GetHashCode();
                    if (Field7 != null)
                    hashCode = hashCode * 59 + Field7.GetHashCode();
                    if (Field8 != null)
                    hashCode = hashCode * 59 + Field8.GetHashCode();
                    if (Field9 != null)
                    hashCode = hashCode * 59 + Field9.GetHashCode();
                    if (Field10 != null)
                    hashCode = hashCode * 59 + Field10.GetHashCode();
                    if (RelatedEnquiryNumber != null)
                    hashCode = hashCode * 59 + RelatedEnquiryNumber.GetHashCode();
                    if (ReturnableItemCheck != null)
                    hashCode = hashCode * 59 + ReturnableItemCheck.GetHashCode();
                    if (ReceivingLocationCapacityCheck != null)
                    hashCode = hashCode * 59 + ReceivingLocationCapacityCheck.GetHashCode();
                    if (StockCheck != null)
                    hashCode = hashCode * 59 + StockCheck.GetHashCode();
                    if (PromisedDate != null)
                    hashCode = hashCode * 59 + PromisedDate.GetHashCode();
                    if (PoNumber != null)
                    hashCode = hashCode * 59 + PoNumber.GetHashCode();
                    if (PaymentType != null)
                    hashCode = hashCode * 59 + PaymentType.GetHashCode();
                    if (DiscountPercent != null)
                    hashCode = hashCode * 59 + DiscountPercent.GetHashCode();
                    if (DiscountAmount != null)
                    hashCode = hashCode * 59 + DiscountAmount.GetHashCode();
                    if (PaymentDiscountPercent != null)
                    hashCode = hashCode * 59 + PaymentDiscountPercent.GetHashCode();
                    if (TotalDepositeAmount != null)
                    hashCode = hashCode * 59 + TotalDepositeAmount.GetHashCode();
                    if (TotalDiscountAmount != null)
                    hashCode = hashCode * 59 + TotalDiscountAmount.GetHashCode();
                    if (TotalOrderAmount != null)
                    hashCode = hashCode * 59 + TotalOrderAmount.GetHashCode();
                    if (TotalAmount != null)
                    hashCode = hashCode * 59 + TotalAmount.GetHashCode();
                    if (IsSynced != null)
                    hashCode = hashCode * 59 + IsSynced.GetHashCode();
                    if (PresellerCode != null)
                    hashCode = hashCode * 59 + PresellerCode.GetHashCode();
                    if (PresellerName != null)
                    hashCode = hashCode * 59 + PresellerName.GetHashCode();
                    if (TotalTaxAmount != null)
                    hashCode = hashCode * 59 + TotalTaxAmount.GetHashCode();
                    if (TotalQuantity != null)
                    hashCode = hashCode * 59 + TotalQuantity.GetHashCode();
                    if (TotalPrice != null)
                    hashCode = hashCode * 59 + TotalPrice.GetHashCode();
                    if (TotalVolume != null)
                    hashCode = hashCode * 59 + TotalVolume.GetHashCode();
                    if (TotalWeight != null)
                    hashCode = hashCode * 59 + TotalWeight.GetHashCode();
                    if (NumberOfCrate != null)
                    hashCode = hashCode * 59 + NumberOfCrate.GetHashCode();
                    if (NoOfDays != null)
                    hashCode = hashCode * 59 + NoOfDays.GetHashCode();
                    if (SoNumber != null)
                    hashCode = hashCode * 59 + SoNumber.GetHashCode();
                    if (IsSelfCollect != null)
                    hashCode = hashCode * 59 + IsSelfCollect.GetHashCode();
                    if (CarrierId != null)
                    hashCode = hashCode * 59 + CarrierId.GetHashCode();
                    if (CarrierCode != null)
                    hashCode = hashCode * 59 + CarrierCode.GetHashCode();
                    if (CarrierName != null)
                    hashCode = hashCode * 59 + CarrierName.GetHashCode();
                    if (CollectionLocationId != null)
                    hashCode = hashCode * 59 + CollectionLocationId.GetHashCode();
                    if (CollectionLocationCode != null)
                    hashCode = hashCode * 59 + CollectionLocationCode.GetHashCode();
                    if (CollectionLocationName != null)
                    hashCode = hashCode * 59 + CollectionLocationName.GetHashCode();
                    if (OriginalCollectionDate != null)
                    hashCode = hashCode * 59 + OriginalCollectionDate.GetHashCode();
                    if (BillToId != null)
                    hashCode = hashCode * 59 + BillToId.GetHashCode();
                    if (LoginId != null)
                    hashCode = hashCode * 59 + LoginId.GetHashCode();
                    if (CreatedBy != null)
                    hashCode = hashCode * 59 + CreatedBy.GetHashCode();
                    if (ModifiedBy != null)
                    hashCode = hashCode * 59 + ModifiedBy.GetHashCode();
                    if (StatusResourceKey != null)
                    hashCode = hashCode * 59 + StatusResourceKey.GetHashCode();
                    if (StatusClass != null)
                    hashCode = hashCode * 59 + StatusClass.GetHashCode();
                    if (ExternalSystemStatus != null)
                    hashCode = hashCode * 59 + ExternalSystemStatus.GetHashCode();
                    if (ExternalSystemStatusText != null)
                    hashCode = hashCode * 59 + ExternalSystemStatusText.GetHashCode();
                    if (Region != null)
                    hashCode = hashCode * 59 + Region.GetHashCode();
                    if (ProvinceDesc != null)
                    hashCode = hashCode * 59 + ProvinceDesc.GetHashCode();
                    if (ExternalSystemStatusSyncTime != null)
                    hashCode = hashCode * 59 + ExternalSystemStatusSyncTime.GetHashCode();
                    if (TotalCount != null)
                    hashCode = hashCode * 59 + TotalCount.GetHashCode();
                    if (IsSOAttached != null)
                    hashCode = hashCode * 59 + IsSOAttached.GetHashCode();
                    if (PickDateTimeFrom != null)
                    hashCode = hashCode * 59 + PickDateTimeFrom.GetHashCode();
                    if (PickDateTimeTo != null)
                    hashCode = hashCode * 59 + PickDateTimeTo.GetHashCode();
                    if (EnquiryDateFrom != null)
                    hashCode = hashCode * 59 + EnquiryDateFrom.GetHashCode();
                    if (EnquiryDateTo != null)
                    hashCode = hashCode * 59 + EnquiryDateTo.GetHashCode();
                    if (RequestDateFrom != null)
                    hashCode = hashCode * 59 + RequestDateFrom.GetHashCode();
                    if (RequestDateTo != null)
                    hashCode = hashCode * 59 + RequestDateTo.GetHashCode();
                    if (LastSyncDate != null)
                    hashCode = hashCode * 59 + LastSyncDate.GetHashCode();
                    if (RpmValue != null)
                    hashCode = hashCode * 59 + RpmValue.GetHashCode();
                    if (EmptiesLimit != null)
                    hashCode = hashCode * 59 + EmptiesLimit.GetHashCode();
                    if (ActualEmpties != null)
                    hashCode = hashCode * 59 + ActualEmpties.GetHashCode();
                    if (Empties != null)
                    hashCode = hashCode * 59 + Empties.GetHashCode();
                    if (ReceivedCapacityPalettes != null)
                    hashCode = hashCode * 59 + ReceivedCapacityPalettes.GetHashCode();
                    if (Area != null)
                    hashCode = hashCode * 59 + Area.GetHashCode();
                    if (ZoneName != null)
                    hashCode = hashCode * 59 + ZoneName.GetHashCode();
                    if (AssociatedOrder != null)
                    hashCode = hashCode * 59 + AssociatedOrder.GetHashCode();
                    if (TotalPriceWithCurreny != null)
                    hashCode = hashCode * 59 + TotalPriceWithCurreny.GetHashCode();
                    if (IsAvailableStock != null)
                    hashCode = hashCode * 59 + IsAvailableStock.GetHashCode();
                    if (ReceivedCapacityPalettesCheck != null)
                    hashCode = hashCode * 59 + ReceivedCapacityPalettesCheck.GetHashCode();
                    if (CheckedEnquiry != null)
                    hashCode = hashCode * 59 + CheckedEnquiry.GetHashCode();
                    if (Capacity != null)
                    hashCode = hashCode * 59 + Capacity.GetHashCode();
                    if (RoleId != null)
                    hashCode = hashCode * 59 + RoleId.GetHashCode();
                    if (CultureId != null)
                    hashCode = hashCode * 59 + CultureId.GetHashCode();
                    if (IsAnyItemPriceZero != null)
                    hashCode = hashCode * 59 + IsAnyItemPriceZero.GetHashCode();
                    if (Status != null)
                    hashCode = hashCode * 59 + Status.GetHashCode();
                    if (Class != null)
                    hashCode = hashCode * 59 + Class.GetHashCode();
                    if (ShortName != null)
                    hashCode = hashCode * 59 + ShortName.GetHashCode();
                    if (ExternalSystemRefID != null)
                    hashCode = hashCode * 59 + ExternalSystemRefID.GetHashCode();
                    if (ErrorMessage != null)
                    hashCode = hashCode * 59 + ErrorMessage.GetHashCode();
                    if (SubChannel != null)
                    hashCode = hashCode * 59 + SubChannel.GetHashCode();
                    if (ReasonCodeList != null)
                    hashCode = hashCode * 59 + ReasonCodeList.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO left, GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO left, GlassRUNServiceWebAPIManageEnquiryDTOEnquiryDTO right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
