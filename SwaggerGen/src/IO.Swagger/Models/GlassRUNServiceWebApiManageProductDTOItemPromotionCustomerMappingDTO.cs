/*
 * WebAPIBuild
 *
 * This is glassRUN web api library for 3rd party and internal reference
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class GlassRUNServiceWebApiManageProductDTOItemPromotionCustomerMappingDTO : IEquatable<GlassRUNServiceWebApiManageProductDTOItemPromotionCustomerMappingDTO>
    { 
        /// <summary>
        /// Gets or Sets PromotionCustomerMappingId
        /// </summary>
        [DataMember(Name="promotionCustomerMappingId")]
        public long? PromotionCustomerMappingId { get; set; }

        /// <summary>
        /// Gets or Sets CustomerId
        /// </summary>
        [DataMember(Name="customerId")]
        public long? CustomerId { get; set; }

        /// <summary>
        /// Gets or Sets CustomerCode
        /// </summary>
        [DataMember(Name="customerCode")]
        public string CustomerCode { get; set; }

        /// <summary>
        /// Gets or Sets ExternalSystemRefID
        /// </summary>
        [DataMember(Name="externalSystemRefID")]
        public long? ExternalSystemRefID { get; set; }

        /// <summary>
        /// Gets or Sets AllocatedQuantity
        /// </summary>
        [DataMember(Name="allocatedQuantity")]
        public long? AllocatedQuantity { get; set; }

        /// <summary>
        /// Gets or Sets ConsumedQuantity
        /// </summary>
        [DataMember(Name="consumedQuantity")]
        public long? ConsumedQuantity { get; set; }

        /// <summary>
        /// Gets or Sets ItemPromotionCustomerMappingList
        /// </summary>
        [DataMember(Name="itemPromotionCustomerMappingList")]
        public Collection<GlassRUNServiceWebApiManageProductDTOItemPromotionCustomerMappingDTO> ItemPromotionCustomerMappingList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GlassRUNServiceWebApiManageProductDTOItemPromotionCustomerMappingDTO {\n");
            sb.Append("  PromotionCustomerMappingId: ").Append(PromotionCustomerMappingId).Append("\n");
            sb.Append("  CustomerId: ").Append(CustomerId).Append("\n");
            sb.Append("  CustomerCode: ").Append(CustomerCode).Append("\n");
            sb.Append("  ExternalSystemRefID: ").Append(ExternalSystemRefID).Append("\n");
            sb.Append("  AllocatedQuantity: ").Append(AllocatedQuantity).Append("\n");
            sb.Append("  ConsumedQuantity: ").Append(ConsumedQuantity).Append("\n");
            sb.Append("  ItemPromotionCustomerMappingList: ").Append(ItemPromotionCustomerMappingList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GlassRUNServiceWebApiManageProductDTOItemPromotionCustomerMappingDTO)obj);
        }

        /// <summary>
        /// Returns true if GlassRUNServiceWebApiManageProductDTOItemPromotionCustomerMappingDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of GlassRUNServiceWebApiManageProductDTOItemPromotionCustomerMappingDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GlassRUNServiceWebApiManageProductDTOItemPromotionCustomerMappingDTO other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    PromotionCustomerMappingId == other.PromotionCustomerMappingId ||
                    PromotionCustomerMappingId != null &&
                    PromotionCustomerMappingId.Equals(other.PromotionCustomerMappingId)
                ) && 
                (
                    CustomerId == other.CustomerId ||
                    CustomerId != null &&
                    CustomerId.Equals(other.CustomerId)
                ) && 
                (
                    CustomerCode == other.CustomerCode ||
                    CustomerCode != null &&
                    CustomerCode.Equals(other.CustomerCode)
                ) && 
                (
                    ExternalSystemRefID == other.ExternalSystemRefID ||
                    ExternalSystemRefID != null &&
                    ExternalSystemRefID.Equals(other.ExternalSystemRefID)
                ) && 
                (
                    AllocatedQuantity == other.AllocatedQuantity ||
                    AllocatedQuantity != null &&
                    AllocatedQuantity.Equals(other.AllocatedQuantity)
                ) && 
                (
                    ConsumedQuantity == other.ConsumedQuantity ||
                    ConsumedQuantity != null &&
                    ConsumedQuantity.Equals(other.ConsumedQuantity)
                ) && 
                (
                    ItemPromotionCustomerMappingList == other.ItemPromotionCustomerMappingList ||
                    ItemPromotionCustomerMappingList != null &&
                    ItemPromotionCustomerMappingList.SequenceEqual(other.ItemPromotionCustomerMappingList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (PromotionCustomerMappingId != null)
                    hashCode = hashCode * 59 + PromotionCustomerMappingId.GetHashCode();
                    if (CustomerId != null)
                    hashCode = hashCode * 59 + CustomerId.GetHashCode();
                    if (CustomerCode != null)
                    hashCode = hashCode * 59 + CustomerCode.GetHashCode();
                    if (ExternalSystemRefID != null)
                    hashCode = hashCode * 59 + ExternalSystemRefID.GetHashCode();
                    if (AllocatedQuantity != null)
                    hashCode = hashCode * 59 + AllocatedQuantity.GetHashCode();
                    if (ConsumedQuantity != null)
                    hashCode = hashCode * 59 + ConsumedQuantity.GetHashCode();
                    if (ItemPromotionCustomerMappingList != null)
                    hashCode = hashCode * 59 + ItemPromotionCustomerMappingList.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GlassRUNServiceWebApiManageProductDTOItemPromotionCustomerMappingDTO left, GlassRUNServiceWebApiManageProductDTOItemPromotionCustomerMappingDTO right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GlassRUNServiceWebApiManageProductDTOItemPromotionCustomerMappingDTO left, GlassRUNServiceWebApiManageProductDTOItemPromotionCustomerMappingDTO right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
