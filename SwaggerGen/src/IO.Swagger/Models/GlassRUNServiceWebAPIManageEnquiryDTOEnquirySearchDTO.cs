/*
 * WebAPIBuild
 *
 * This is glassRUN web api library for 3rd party and internal reference
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO : IEquatable<GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO>
    { 
        /// <summary>
        /// Gets or Sets EnquiryDescription
        /// </summary>
        [DataMember(Name="enquiryDescription")]
        public string EnquiryDescription { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryId
        /// </summary>
        [DataMember(Name="enquiryId")]
        public long? EnquiryId { get; set; }

        /// <summary>
        /// Gets or Sets ObjectId
        /// </summary>
        [DataMember(Name="objectId")]
        public long? ObjectId { get; set; }

        /// <summary>
        /// Gets or Sets IsCancelEnquiry
        /// </summary>
        [DataMember(Name="isCancelEnquiry")]
        public bool? IsCancelEnquiry { get; set; }

        /// <summary>
        /// Gets or Sets IsRejectEnquiry
        /// </summary>
        [DataMember(Name="isRejectEnquiry")]
        public bool? IsRejectEnquiry { get; set; }

        /// <summary>
        /// Gets or Sets Priority
        /// </summary>
        [DataMember(Name="priority")]
        public long? Priority { get; set; }

        /// <summary>
        /// Gets or Sets PriorityValue
        /// </summary>
        [DataMember(Name="priorityValue")]
        public string PriorityValue { get; set; }

        /// <summary>
        /// Gets or Sets ObjectNumber
        /// </summary>
        [DataMember(Name="objectNumber")]
        public string ObjectNumber { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryAutoNumber
        /// </summary>
        [DataMember(Name="enquiryAutoNumber")]
        public string EnquiryAutoNumber { get; set; }

        /// <summary>
        /// Gets or Sets OrderNumber
        /// </summary>
        [DataMember(Name="orderNumber")]
        public string OrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets Region
        /// </summary>
        [DataMember(Name="region")]
        public string Region { get; set; }

        /// <summary>
        /// Gets or Sets ProvinceDesc
        /// </summary>
        [DataMember(Name="provinceDesc")]
        public string ProvinceDesc { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryType
        /// </summary>
        [DataMember(Name="enquiryType")]
        public string EnquiryType { get; set; }

        /// <summary>
        /// Gets or Sets ShipToCode
        /// </summary>
        [DataMember(Name="shipToCode")]
        public string ShipToCode { get; set; }

        /// <summary>
        /// Gets or Sets ShipToName
        /// </summary>
        [DataMember(Name="shipToName")]
        public string ShipToName { get; set; }

        /// <summary>
        /// Gets or Sets SoldToCode
        /// </summary>
        [DataMember(Name="soldToCode")]
        public string SoldToCode { get; set; }

        /// <summary>
        /// Gets or Sets SoldToName
        /// </summary>
        [DataMember(Name="soldToName")]
        public string SoldToName { get; set; }

        /// <summary>
        /// Gets or Sets BillToCode
        /// </summary>
        [DataMember(Name="billToCode")]
        public string BillToCode { get; set; }

        /// <summary>
        /// Gets or Sets BillToName
        /// </summary>
        [DataMember(Name="billToName")]
        public string BillToName { get; set; }

        /// <summary>
        /// Gets or Sets CompanyId
        /// </summary>
        [DataMember(Name="companyId")]
        public long? CompanyId { get; set; }

        /// <summary>
        /// Gets or Sets CompanyCode
        /// </summary>
        [DataMember(Name="companyCode")]
        public string CompanyCode { get; set; }

        /// <summary>
        /// Gets or Sets CompanyName
        /// </summary>
        [DataMember(Name="companyName")]
        public string CompanyName { get; set; }

        /// <summary>
        /// Gets or Sets CarrierCode
        /// </summary>
        [DataMember(Name="carrierCode")]
        public string CarrierCode { get; set; }

        /// <summary>
        /// Gets or Sets CarrierName
        /// </summary>
        [DataMember(Name="carrierName")]
        public string CarrierName { get; set; }

        /// <summary>
        /// Gets or Sets CollectionLocationCode
        /// </summary>
        [DataMember(Name="collectionLocationCode")]
        public string CollectionLocationCode { get; set; }

        /// <summary>
        /// Gets or Sets CollectionLocationName
        /// </summary>
        [DataMember(Name="collectionLocationName")]
        public string CollectionLocationName { get; set; }

        /// <summary>
        /// Gets or Sets TruckSize
        /// </summary>
        [DataMember(Name="truckSize")]
        public string TruckSize { get; set; }

        /// <summary>
        /// Gets or Sets PoNumber
        /// </summary>
        [DataMember(Name="poNumber")]
        public string PoNumber { get; set; }

        /// <summary>
        /// Gets or Sets SoNumber
        /// </summary>
        [DataMember(Name="soNumber")]
        public string SoNumber { get; set; }

        /// <summary>
        /// Gets or Sets CurrentState
        /// </summary>
        [DataMember(Name="currentState")]
        public string CurrentState { get; set; }

        /// <summary>
        /// Gets or Sets PickDateTimeFrom
        /// </summary>
        [DataMember(Name="pickDateTimeFrom")]
        public DateTime? PickDateTimeFrom { get; set; }

        /// <summary>
        /// Gets or Sets PickDateTimeTo
        /// </summary>
        [DataMember(Name="pickDateTimeTo")]
        public DateTime? PickDateTimeTo { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryDateFrom
        /// </summary>
        [DataMember(Name="enquiryDateFrom")]
        public DateTime? EnquiryDateFrom { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryDateTo
        /// </summary>
        [DataMember(Name="enquiryDateTo")]
        public DateTime? EnquiryDateTo { get; set; }

        /// <summary>
        /// Gets or Sets RequestDateFrom
        /// </summary>
        [DataMember(Name="requestDateFrom")]
        public DateTime? RequestDateFrom { get; set; }

        /// <summary>
        /// Gets or Sets RequestDateTo
        /// </summary>
        [DataMember(Name="requestDateTo")]
        public DateTime? RequestDateTo { get; set; }

        /// <summary>
        /// Gets or Sets PageIndex
        /// </summary>
        [DataMember(Name="pageIndex")]
        public int? PageIndex { get; set; }

        /// <summary>
        /// Gets or Sets PageSize
        /// </summary>
        [DataMember(Name="pageSize")]
        public int? PageSize { get; set; }

        /// <summary>
        /// Gets or Sets RoleId
        /// </summary>
        [DataMember(Name="roleId")]
        public long? RoleId { get; set; }

        /// <summary>
        /// Gets or Sets CultureId
        /// </summary>
        [DataMember(Name="cultureId")]
        public long? CultureId { get; set; }

        /// <summary>
        /// Gets or Sets LastSyncDate
        /// </summary>
        [DataMember(Name="lastSyncDate")]
        public DateTime? LastSyncDate { get; set; }

        /// <summary>
        /// Gets or Sets OrderBy
        /// </summary>
        [DataMember(Name="orderBy")]
        public string OrderBy { get; set; }

        /// <summary>
        /// Gets or Sets OrderByCriteria
        /// </summary>
        [DataMember(Name="orderByCriteria")]
        public string OrderByCriteria { get; set; }

        /// <summary>
        /// Gets or Sets PageName
        /// </summary>
        [DataMember(Name="pageName")]
        public string PageName { get; set; }

        /// <summary>
        /// Gets or Sets PageControlName
        /// </summary>
        [DataMember(Name="pageControlName")]
        public string PageControlName { get; set; }

        /// <summary>
        /// Gets or Sets WhereClause
        /// </summary>
        [DataMember(Name="whereClause")]
        public string WhereClause { get; set; }

        /// <summary>
        /// Gets or Sets LoginId
        /// </summary>
        [DataMember(Name="loginId")]
        public long? LoginId { get; set; }

        /// <summary>
        /// Gets or Sets RelatedEnquiryNumber
        /// </summary>
        [DataMember(Name="relatedEnquiryNumber")]
        public string RelatedEnquiryNumber { get; set; }

        /// <summary>
        /// Gets or Sets Area
        /// </summary>
        [DataMember(Name="area")]
        public string Area { get; set; }

        /// <summary>
        /// Gets or Sets TypeOfWay
        /// </summary>
        [DataMember(Name="typeOfWay")]
        public string TypeOfWay { get; set; }

        /// <summary>
        /// Gets or Sets ExternalSystemStatus
        /// </summary>
        [DataMember(Name="externalSystemStatus")]
        public long? ExternalSystemStatus { get; set; }

        /// <summary>
        /// Gets or Sets ExternalSystemStatusText
        /// </summary>
        [DataMember(Name="externalSystemStatusText")]
        public string ExternalSystemStatusText { get; set; }

        /// <summary>
        /// Gets or Sets ExternalSystemStatusSyncTime
        /// </summary>
        [DataMember(Name="externalSystemStatusSyncTime")]
        public DateTime? ExternalSystemStatusSyncTime { get; set; }

        /// <summary>
        /// Gets or Sets FileAttached
        /// </summary>
        [DataMember(Name="fileAttached")]
        public bool? FileAttached { get; set; }

        /// <summary>
        /// Gets or Sets FileAttachedDownload
        /// </summary>
        [DataMember(Name="fileAttachedDownload")]
        public bool? FileAttachedDownload { get; set; }

        /// <summary>
        /// Gets or Sets DocumentFormat
        /// </summary>
        [DataMember(Name="documentFormat")]
        public string DocumentFormat { get; set; }

        /// <summary>
        /// Gets or Sets DocumentName
        /// </summary>
        [DataMember(Name="documentName")]
        public string DocumentName { get; set; }

        /// <summary>
        /// Gets or Sets IsExportToExcel
        /// </summary>
        [DataMember(Name="isExportToExcel")]
        public bool? IsExportToExcel { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets EnquirySearchParameterList
        /// </summary>
        [DataMember(Name="enquirySearchParameterList")]
        public Collection<GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchParameterDTO> EnquirySearchParameterList { get; set; }

        /// <summary>
        /// Gets or Sets ReasonCodeList
        /// </summary>
        [DataMember(Name="reasonCodeList")]
        public Collection<GlassRUNServiceWebAPIManageEnquiryDTOReasonCodeDTO> ReasonCodeList { get; set; }

        /// <summary>
        /// Gets or Sets EnquiryGridColumnList
        /// </summary>
        [DataMember(Name="enquiryGridColumnList")]
        public Collection<GlassRUNServiceWebAPIManageEnquiryDTOEnquiryGridColumnDTO> EnquiryGridColumnList { get; set; }

        /// <summary>
        /// Gets or Sets SubChannel
        /// </summary>
        [DataMember(Name="subChannel")]
        public string SubChannel { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO {\n");
            sb.Append("  EnquiryDescription: ").Append(EnquiryDescription).Append("\n");
            sb.Append("  EnquiryId: ").Append(EnquiryId).Append("\n");
            sb.Append("  ObjectId: ").Append(ObjectId).Append("\n");
            sb.Append("  IsCancelEnquiry: ").Append(IsCancelEnquiry).Append("\n");
            sb.Append("  IsRejectEnquiry: ").Append(IsRejectEnquiry).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  PriorityValue: ").Append(PriorityValue).Append("\n");
            sb.Append("  ObjectNumber: ").Append(ObjectNumber).Append("\n");
            sb.Append("  EnquiryAutoNumber: ").Append(EnquiryAutoNumber).Append("\n");
            sb.Append("  OrderNumber: ").Append(OrderNumber).Append("\n");
            sb.Append("  Region: ").Append(Region).Append("\n");
            sb.Append("  ProvinceDesc: ").Append(ProvinceDesc).Append("\n");
            sb.Append("  EnquiryType: ").Append(EnquiryType).Append("\n");
            sb.Append("  ShipToCode: ").Append(ShipToCode).Append("\n");
            sb.Append("  ShipToName: ").Append(ShipToName).Append("\n");
            sb.Append("  SoldToCode: ").Append(SoldToCode).Append("\n");
            sb.Append("  SoldToName: ").Append(SoldToName).Append("\n");
            sb.Append("  BillToCode: ").Append(BillToCode).Append("\n");
            sb.Append("  BillToName: ").Append(BillToName).Append("\n");
            sb.Append("  CompanyId: ").Append(CompanyId).Append("\n");
            sb.Append("  CompanyCode: ").Append(CompanyCode).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  CarrierCode: ").Append(CarrierCode).Append("\n");
            sb.Append("  CarrierName: ").Append(CarrierName).Append("\n");
            sb.Append("  CollectionLocationCode: ").Append(CollectionLocationCode).Append("\n");
            sb.Append("  CollectionLocationName: ").Append(CollectionLocationName).Append("\n");
            sb.Append("  TruckSize: ").Append(TruckSize).Append("\n");
            sb.Append("  PoNumber: ").Append(PoNumber).Append("\n");
            sb.Append("  SoNumber: ").Append(SoNumber).Append("\n");
            sb.Append("  CurrentState: ").Append(CurrentState).Append("\n");
            sb.Append("  PickDateTimeFrom: ").Append(PickDateTimeFrom).Append("\n");
            sb.Append("  PickDateTimeTo: ").Append(PickDateTimeTo).Append("\n");
            sb.Append("  EnquiryDateFrom: ").Append(EnquiryDateFrom).Append("\n");
            sb.Append("  EnquiryDateTo: ").Append(EnquiryDateTo).Append("\n");
            sb.Append("  RequestDateFrom: ").Append(RequestDateFrom).Append("\n");
            sb.Append("  RequestDateTo: ").Append(RequestDateTo).Append("\n");
            sb.Append("  PageIndex: ").Append(PageIndex).Append("\n");
            sb.Append("  PageSize: ").Append(PageSize).Append("\n");
            sb.Append("  RoleId: ").Append(RoleId).Append("\n");
            sb.Append("  CultureId: ").Append(CultureId).Append("\n");
            sb.Append("  LastSyncDate: ").Append(LastSyncDate).Append("\n");
            sb.Append("  OrderBy: ").Append(OrderBy).Append("\n");
            sb.Append("  OrderByCriteria: ").Append(OrderByCriteria).Append("\n");
            sb.Append("  PageName: ").Append(PageName).Append("\n");
            sb.Append("  PageControlName: ").Append(PageControlName).Append("\n");
            sb.Append("  WhereClause: ").Append(WhereClause).Append("\n");
            sb.Append("  LoginId: ").Append(LoginId).Append("\n");
            sb.Append("  RelatedEnquiryNumber: ").Append(RelatedEnquiryNumber).Append("\n");
            sb.Append("  Area: ").Append(Area).Append("\n");
            sb.Append("  TypeOfWay: ").Append(TypeOfWay).Append("\n");
            sb.Append("  ExternalSystemStatus: ").Append(ExternalSystemStatus).Append("\n");
            sb.Append("  ExternalSystemStatusText: ").Append(ExternalSystemStatusText).Append("\n");
            sb.Append("  ExternalSystemStatusSyncTime: ").Append(ExternalSystemStatusSyncTime).Append("\n");
            sb.Append("  FileAttached: ").Append(FileAttached).Append("\n");
            sb.Append("  FileAttachedDownload: ").Append(FileAttachedDownload).Append("\n");
            sb.Append("  DocumentFormat: ").Append(DocumentFormat).Append("\n");
            sb.Append("  DocumentName: ").Append(DocumentName).Append("\n");
            sb.Append("  IsExportToExcel: ").Append(IsExportToExcel).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  EnquirySearchParameterList: ").Append(EnquirySearchParameterList).Append("\n");
            sb.Append("  ReasonCodeList: ").Append(ReasonCodeList).Append("\n");
            sb.Append("  EnquiryGridColumnList: ").Append(EnquiryGridColumnList).Append("\n");
            sb.Append("  SubChannel: ").Append(SubChannel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO)obj);
        }

        /// <summary>
        /// Returns true if GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    EnquiryDescription == other.EnquiryDescription ||
                    EnquiryDescription != null &&
                    EnquiryDescription.Equals(other.EnquiryDescription)
                ) && 
                (
                    EnquiryId == other.EnquiryId ||
                    EnquiryId != null &&
                    EnquiryId.Equals(other.EnquiryId)
                ) && 
                (
                    ObjectId == other.ObjectId ||
                    ObjectId != null &&
                    ObjectId.Equals(other.ObjectId)
                ) && 
                (
                    IsCancelEnquiry == other.IsCancelEnquiry ||
                    IsCancelEnquiry != null &&
                    IsCancelEnquiry.Equals(other.IsCancelEnquiry)
                ) && 
                (
                    IsRejectEnquiry == other.IsRejectEnquiry ||
                    IsRejectEnquiry != null &&
                    IsRejectEnquiry.Equals(other.IsRejectEnquiry)
                ) && 
                (
                    Priority == other.Priority ||
                    Priority != null &&
                    Priority.Equals(other.Priority)
                ) && 
                (
                    PriorityValue == other.PriorityValue ||
                    PriorityValue != null &&
                    PriorityValue.Equals(other.PriorityValue)
                ) && 
                (
                    ObjectNumber == other.ObjectNumber ||
                    ObjectNumber != null &&
                    ObjectNumber.Equals(other.ObjectNumber)
                ) && 
                (
                    EnquiryAutoNumber == other.EnquiryAutoNumber ||
                    EnquiryAutoNumber != null &&
                    EnquiryAutoNumber.Equals(other.EnquiryAutoNumber)
                ) && 
                (
                    OrderNumber == other.OrderNumber ||
                    OrderNumber != null &&
                    OrderNumber.Equals(other.OrderNumber)
                ) && 
                (
                    Region == other.Region ||
                    Region != null &&
                    Region.Equals(other.Region)
                ) && 
                (
                    ProvinceDesc == other.ProvinceDesc ||
                    ProvinceDesc != null &&
                    ProvinceDesc.Equals(other.ProvinceDesc)
                ) && 
                (
                    EnquiryType == other.EnquiryType ||
                    EnquiryType != null &&
                    EnquiryType.Equals(other.EnquiryType)
                ) && 
                (
                    ShipToCode == other.ShipToCode ||
                    ShipToCode != null &&
                    ShipToCode.Equals(other.ShipToCode)
                ) && 
                (
                    ShipToName == other.ShipToName ||
                    ShipToName != null &&
                    ShipToName.Equals(other.ShipToName)
                ) && 
                (
                    SoldToCode == other.SoldToCode ||
                    SoldToCode != null &&
                    SoldToCode.Equals(other.SoldToCode)
                ) && 
                (
                    SoldToName == other.SoldToName ||
                    SoldToName != null &&
                    SoldToName.Equals(other.SoldToName)
                ) && 
                (
                    BillToCode == other.BillToCode ||
                    BillToCode != null &&
                    BillToCode.Equals(other.BillToCode)
                ) && 
                (
                    BillToName == other.BillToName ||
                    BillToName != null &&
                    BillToName.Equals(other.BillToName)
                ) && 
                (
                    CompanyId == other.CompanyId ||
                    CompanyId != null &&
                    CompanyId.Equals(other.CompanyId)
                ) && 
                (
                    CompanyCode == other.CompanyCode ||
                    CompanyCode != null &&
                    CompanyCode.Equals(other.CompanyCode)
                ) && 
                (
                    CompanyName == other.CompanyName ||
                    CompanyName != null &&
                    CompanyName.Equals(other.CompanyName)
                ) && 
                (
                    CarrierCode == other.CarrierCode ||
                    CarrierCode != null &&
                    CarrierCode.Equals(other.CarrierCode)
                ) && 
                (
                    CarrierName == other.CarrierName ||
                    CarrierName != null &&
                    CarrierName.Equals(other.CarrierName)
                ) && 
                (
                    CollectionLocationCode == other.CollectionLocationCode ||
                    CollectionLocationCode != null &&
                    CollectionLocationCode.Equals(other.CollectionLocationCode)
                ) && 
                (
                    CollectionLocationName == other.CollectionLocationName ||
                    CollectionLocationName != null &&
                    CollectionLocationName.Equals(other.CollectionLocationName)
                ) && 
                (
                    TruckSize == other.TruckSize ||
                    TruckSize != null &&
                    TruckSize.Equals(other.TruckSize)
                ) && 
                (
                    PoNumber == other.PoNumber ||
                    PoNumber != null &&
                    PoNumber.Equals(other.PoNumber)
                ) && 
                (
                    SoNumber == other.SoNumber ||
                    SoNumber != null &&
                    SoNumber.Equals(other.SoNumber)
                ) && 
                (
                    CurrentState == other.CurrentState ||
                    CurrentState != null &&
                    CurrentState.Equals(other.CurrentState)
                ) && 
                (
                    PickDateTimeFrom == other.PickDateTimeFrom ||
                    PickDateTimeFrom != null &&
                    PickDateTimeFrom.Equals(other.PickDateTimeFrom)
                ) && 
                (
                    PickDateTimeTo == other.PickDateTimeTo ||
                    PickDateTimeTo != null &&
                    PickDateTimeTo.Equals(other.PickDateTimeTo)
                ) && 
                (
                    EnquiryDateFrom == other.EnquiryDateFrom ||
                    EnquiryDateFrom != null &&
                    EnquiryDateFrom.Equals(other.EnquiryDateFrom)
                ) && 
                (
                    EnquiryDateTo == other.EnquiryDateTo ||
                    EnquiryDateTo != null &&
                    EnquiryDateTo.Equals(other.EnquiryDateTo)
                ) && 
                (
                    RequestDateFrom == other.RequestDateFrom ||
                    RequestDateFrom != null &&
                    RequestDateFrom.Equals(other.RequestDateFrom)
                ) && 
                (
                    RequestDateTo == other.RequestDateTo ||
                    RequestDateTo != null &&
                    RequestDateTo.Equals(other.RequestDateTo)
                ) && 
                (
                    PageIndex == other.PageIndex ||
                    PageIndex != null &&
                    PageIndex.Equals(other.PageIndex)
                ) && 
                (
                    PageSize == other.PageSize ||
                    PageSize != null &&
                    PageSize.Equals(other.PageSize)
                ) && 
                (
                    RoleId == other.RoleId ||
                    RoleId != null &&
                    RoleId.Equals(other.RoleId)
                ) && 
                (
                    CultureId == other.CultureId ||
                    CultureId != null &&
                    CultureId.Equals(other.CultureId)
                ) && 
                (
                    LastSyncDate == other.LastSyncDate ||
                    LastSyncDate != null &&
                    LastSyncDate.Equals(other.LastSyncDate)
                ) && 
                (
                    OrderBy == other.OrderBy ||
                    OrderBy != null &&
                    OrderBy.Equals(other.OrderBy)
                ) && 
                (
                    OrderByCriteria == other.OrderByCriteria ||
                    OrderByCriteria != null &&
                    OrderByCriteria.Equals(other.OrderByCriteria)
                ) && 
                (
                    PageName == other.PageName ||
                    PageName != null &&
                    PageName.Equals(other.PageName)
                ) && 
                (
                    PageControlName == other.PageControlName ||
                    PageControlName != null &&
                    PageControlName.Equals(other.PageControlName)
                ) && 
                (
                    WhereClause == other.WhereClause ||
                    WhereClause != null &&
                    WhereClause.Equals(other.WhereClause)
                ) && 
                (
                    LoginId == other.LoginId ||
                    LoginId != null &&
                    LoginId.Equals(other.LoginId)
                ) && 
                (
                    RelatedEnquiryNumber == other.RelatedEnquiryNumber ||
                    RelatedEnquiryNumber != null &&
                    RelatedEnquiryNumber.Equals(other.RelatedEnquiryNumber)
                ) && 
                (
                    Area == other.Area ||
                    Area != null &&
                    Area.Equals(other.Area)
                ) && 
                (
                    TypeOfWay == other.TypeOfWay ||
                    TypeOfWay != null &&
                    TypeOfWay.Equals(other.TypeOfWay)
                ) && 
                (
                    ExternalSystemStatus == other.ExternalSystemStatus ||
                    ExternalSystemStatus != null &&
                    ExternalSystemStatus.Equals(other.ExternalSystemStatus)
                ) && 
                (
                    ExternalSystemStatusText == other.ExternalSystemStatusText ||
                    ExternalSystemStatusText != null &&
                    ExternalSystemStatusText.Equals(other.ExternalSystemStatusText)
                ) && 
                (
                    ExternalSystemStatusSyncTime == other.ExternalSystemStatusSyncTime ||
                    ExternalSystemStatusSyncTime != null &&
                    ExternalSystemStatusSyncTime.Equals(other.ExternalSystemStatusSyncTime)
                ) && 
                (
                    FileAttached == other.FileAttached ||
                    FileAttached != null &&
                    FileAttached.Equals(other.FileAttached)
                ) && 
                (
                    FileAttachedDownload == other.FileAttachedDownload ||
                    FileAttachedDownload != null &&
                    FileAttachedDownload.Equals(other.FileAttachedDownload)
                ) && 
                (
                    DocumentFormat == other.DocumentFormat ||
                    DocumentFormat != null &&
                    DocumentFormat.Equals(other.DocumentFormat)
                ) && 
                (
                    DocumentName == other.DocumentName ||
                    DocumentName != null &&
                    DocumentName.Equals(other.DocumentName)
                ) && 
                (
                    IsExportToExcel == other.IsExportToExcel ||
                    IsExportToExcel != null &&
                    IsExportToExcel.Equals(other.IsExportToExcel)
                ) && 
                (
                    Status == other.Status ||
                    Status != null &&
                    Status.Equals(other.Status)
                ) && 
                (
                    EnquirySearchParameterList == other.EnquirySearchParameterList ||
                    EnquirySearchParameterList != null &&
                    EnquirySearchParameterList.SequenceEqual(other.EnquirySearchParameterList)
                ) && 
                (
                    ReasonCodeList == other.ReasonCodeList ||
                    ReasonCodeList != null &&
                    ReasonCodeList.SequenceEqual(other.ReasonCodeList)
                ) && 
                (
                    EnquiryGridColumnList == other.EnquiryGridColumnList ||
                    EnquiryGridColumnList != null &&
                    EnquiryGridColumnList.SequenceEqual(other.EnquiryGridColumnList)
                ) && 
                (
                    SubChannel == other.SubChannel ||
                    SubChannel != null &&
                    SubChannel.Equals(other.SubChannel)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (EnquiryDescription != null)
                    hashCode = hashCode * 59 + EnquiryDescription.GetHashCode();
                    if (EnquiryId != null)
                    hashCode = hashCode * 59 + EnquiryId.GetHashCode();
                    if (ObjectId != null)
                    hashCode = hashCode * 59 + ObjectId.GetHashCode();
                    if (IsCancelEnquiry != null)
                    hashCode = hashCode * 59 + IsCancelEnquiry.GetHashCode();
                    if (IsRejectEnquiry != null)
                    hashCode = hashCode * 59 + IsRejectEnquiry.GetHashCode();
                    if (Priority != null)
                    hashCode = hashCode * 59 + Priority.GetHashCode();
                    if (PriorityValue != null)
                    hashCode = hashCode * 59 + PriorityValue.GetHashCode();
                    if (ObjectNumber != null)
                    hashCode = hashCode * 59 + ObjectNumber.GetHashCode();
                    if (EnquiryAutoNumber != null)
                    hashCode = hashCode * 59 + EnquiryAutoNumber.GetHashCode();
                    if (OrderNumber != null)
                    hashCode = hashCode * 59 + OrderNumber.GetHashCode();
                    if (Region != null)
                    hashCode = hashCode * 59 + Region.GetHashCode();
                    if (ProvinceDesc != null)
                    hashCode = hashCode * 59 + ProvinceDesc.GetHashCode();
                    if (EnquiryType != null)
                    hashCode = hashCode * 59 + EnquiryType.GetHashCode();
                    if (ShipToCode != null)
                    hashCode = hashCode * 59 + ShipToCode.GetHashCode();
                    if (ShipToName != null)
                    hashCode = hashCode * 59 + ShipToName.GetHashCode();
                    if (SoldToCode != null)
                    hashCode = hashCode * 59 + SoldToCode.GetHashCode();
                    if (SoldToName != null)
                    hashCode = hashCode * 59 + SoldToName.GetHashCode();
                    if (BillToCode != null)
                    hashCode = hashCode * 59 + BillToCode.GetHashCode();
                    if (BillToName != null)
                    hashCode = hashCode * 59 + BillToName.GetHashCode();
                    if (CompanyId != null)
                    hashCode = hashCode * 59 + CompanyId.GetHashCode();
                    if (CompanyCode != null)
                    hashCode = hashCode * 59 + CompanyCode.GetHashCode();
                    if (CompanyName != null)
                    hashCode = hashCode * 59 + CompanyName.GetHashCode();
                    if (CarrierCode != null)
                    hashCode = hashCode * 59 + CarrierCode.GetHashCode();
                    if (CarrierName != null)
                    hashCode = hashCode * 59 + CarrierName.GetHashCode();
                    if (CollectionLocationCode != null)
                    hashCode = hashCode * 59 + CollectionLocationCode.GetHashCode();
                    if (CollectionLocationName != null)
                    hashCode = hashCode * 59 + CollectionLocationName.GetHashCode();
                    if (TruckSize != null)
                    hashCode = hashCode * 59 + TruckSize.GetHashCode();
                    if (PoNumber != null)
                    hashCode = hashCode * 59 + PoNumber.GetHashCode();
                    if (SoNumber != null)
                    hashCode = hashCode * 59 + SoNumber.GetHashCode();
                    if (CurrentState != null)
                    hashCode = hashCode * 59 + CurrentState.GetHashCode();
                    if (PickDateTimeFrom != null)
                    hashCode = hashCode * 59 + PickDateTimeFrom.GetHashCode();
                    if (PickDateTimeTo != null)
                    hashCode = hashCode * 59 + PickDateTimeTo.GetHashCode();
                    if (EnquiryDateFrom != null)
                    hashCode = hashCode * 59 + EnquiryDateFrom.GetHashCode();
                    if (EnquiryDateTo != null)
                    hashCode = hashCode * 59 + EnquiryDateTo.GetHashCode();
                    if (RequestDateFrom != null)
                    hashCode = hashCode * 59 + RequestDateFrom.GetHashCode();
                    if (RequestDateTo != null)
                    hashCode = hashCode * 59 + RequestDateTo.GetHashCode();
                    if (PageIndex != null)
                    hashCode = hashCode * 59 + PageIndex.GetHashCode();
                    if (PageSize != null)
                    hashCode = hashCode * 59 + PageSize.GetHashCode();
                    if (RoleId != null)
                    hashCode = hashCode * 59 + RoleId.GetHashCode();
                    if (CultureId != null)
                    hashCode = hashCode * 59 + CultureId.GetHashCode();
                    if (LastSyncDate != null)
                    hashCode = hashCode * 59 + LastSyncDate.GetHashCode();
                    if (OrderBy != null)
                    hashCode = hashCode * 59 + OrderBy.GetHashCode();
                    if (OrderByCriteria != null)
                    hashCode = hashCode * 59 + OrderByCriteria.GetHashCode();
                    if (PageName != null)
                    hashCode = hashCode * 59 + PageName.GetHashCode();
                    if (PageControlName != null)
                    hashCode = hashCode * 59 + PageControlName.GetHashCode();
                    if (WhereClause != null)
                    hashCode = hashCode * 59 + WhereClause.GetHashCode();
                    if (LoginId != null)
                    hashCode = hashCode * 59 + LoginId.GetHashCode();
                    if (RelatedEnquiryNumber != null)
                    hashCode = hashCode * 59 + RelatedEnquiryNumber.GetHashCode();
                    if (Area != null)
                    hashCode = hashCode * 59 + Area.GetHashCode();
                    if (TypeOfWay != null)
                    hashCode = hashCode * 59 + TypeOfWay.GetHashCode();
                    if (ExternalSystemStatus != null)
                    hashCode = hashCode * 59 + ExternalSystemStatus.GetHashCode();
                    if (ExternalSystemStatusText != null)
                    hashCode = hashCode * 59 + ExternalSystemStatusText.GetHashCode();
                    if (ExternalSystemStatusSyncTime != null)
                    hashCode = hashCode * 59 + ExternalSystemStatusSyncTime.GetHashCode();
                    if (FileAttached != null)
                    hashCode = hashCode * 59 + FileAttached.GetHashCode();
                    if (FileAttachedDownload != null)
                    hashCode = hashCode * 59 + FileAttachedDownload.GetHashCode();
                    if (DocumentFormat != null)
                    hashCode = hashCode * 59 + DocumentFormat.GetHashCode();
                    if (DocumentName != null)
                    hashCode = hashCode * 59 + DocumentName.GetHashCode();
                    if (IsExportToExcel != null)
                    hashCode = hashCode * 59 + IsExportToExcel.GetHashCode();
                    if (Status != null)
                    hashCode = hashCode * 59 + Status.GetHashCode();
                    if (EnquirySearchParameterList != null)
                    hashCode = hashCode * 59 + EnquirySearchParameterList.GetHashCode();
                    if (ReasonCodeList != null)
                    hashCode = hashCode * 59 + ReasonCodeList.GetHashCode();
                    if (EnquiryGridColumnList != null)
                    hashCode = hashCode * 59 + EnquiryGridColumnList.GetHashCode();
                    if (SubChannel != null)
                    hashCode = hashCode * 59 + SubChannel.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO left, GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO left, GlassRUNServiceWebAPIManageEnquiryDTOEnquirySearchDTO right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
