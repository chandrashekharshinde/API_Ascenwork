/*
 * WebAPIBuild
 *
 * This is glassRUN web api library for 3rd party and internal reference
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class GlassRUNServiceWebApiConfigurationsDTOAppLatestVersionDTO : IEquatable<GlassRUNServiceWebApiConfigurationsDTOAppLatestVersionDTO>
    { 
        /// <summary>
        /// Gets or Sets AppLatestVersionNo
        /// </summary>
        [DataMember(Name="appLatestVersionNo")]
        public string AppLatestVersionNo { get; set; }

        /// <summary>
        /// Gets or Sets AppLatestBuildNo
        /// </summary>
        [DataMember(Name="appLatestBuildNo")]
        public string AppLatestBuildNo { get; set; }

        /// <summary>
        /// Gets or Sets AppLatestDownloadLinkForAndroid
        /// </summary>
        [DataMember(Name="appLatestDownloadLinkForAndroid")]
        public string AppLatestDownloadLinkForAndroid { get; set; }

        /// <summary>
        /// Gets or Sets AppLatestDownloadLinkForIOS
        /// </summary>
        [DataMember(Name="appLatestDownloadLinkForIOS")]
        public string AppLatestDownloadLinkForIOS { get; set; }

        /// <summary>
        /// Gets or Sets AppLatestDownloadLinkForWindows
        /// </summary>
        [DataMember(Name="appLatestDownloadLinkForWindows")]
        public string AppLatestDownloadLinkForWindows { get; set; }

        /// <summary>
        /// Gets or Sets AppLatestVersionMandatory
        /// </summary>
        [DataMember(Name="appLatestVersionMandatory")]
        public bool? AppLatestVersionMandatory { get; set; }

        /// <summary>
        /// Gets or Sets AppLatestVersionIsMandatory
        /// </summary>
        [DataMember(Name="appLatestVersionIsMandatory")]
        public string AppLatestVersionIsMandatory { get; set; }

        /// <summary>
        /// Gets or Sets AppType
        /// </summary>
        [DataMember(Name="appType")]
        public long? AppType { get; set; }

        /// <summary>
        /// Gets or Sets IsAppNeedToUpdate
        /// </summary>
        [DataMember(Name="isAppNeedToUpdate")]
        public string IsAppNeedToUpdate { get; set; }

        /// <summary>
        /// Gets or Sets AppLatestVersionList
        /// </summary>
        [DataMember(Name="appLatestVersionList")]
        public Collection<GlassRUNServiceWebApiConfigurationsDTOAppLatestVersionDTO> AppLatestVersionList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GlassRUNServiceWebApiConfigurationsDTOAppLatestVersionDTO {\n");
            sb.Append("  AppLatestVersionNo: ").Append(AppLatestVersionNo).Append("\n");
            sb.Append("  AppLatestBuildNo: ").Append(AppLatestBuildNo).Append("\n");
            sb.Append("  AppLatestDownloadLinkForAndroid: ").Append(AppLatestDownloadLinkForAndroid).Append("\n");
            sb.Append("  AppLatestDownloadLinkForIOS: ").Append(AppLatestDownloadLinkForIOS).Append("\n");
            sb.Append("  AppLatestDownloadLinkForWindows: ").Append(AppLatestDownloadLinkForWindows).Append("\n");
            sb.Append("  AppLatestVersionMandatory: ").Append(AppLatestVersionMandatory).Append("\n");
            sb.Append("  AppLatestVersionIsMandatory: ").Append(AppLatestVersionIsMandatory).Append("\n");
            sb.Append("  AppType: ").Append(AppType).Append("\n");
            sb.Append("  IsAppNeedToUpdate: ").Append(IsAppNeedToUpdate).Append("\n");
            sb.Append("  AppLatestVersionList: ").Append(AppLatestVersionList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GlassRUNServiceWebApiConfigurationsDTOAppLatestVersionDTO)obj);
        }

        /// <summary>
        /// Returns true if GlassRUNServiceWebApiConfigurationsDTOAppLatestVersionDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of GlassRUNServiceWebApiConfigurationsDTOAppLatestVersionDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GlassRUNServiceWebApiConfigurationsDTOAppLatestVersionDTO other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    AppLatestVersionNo == other.AppLatestVersionNo ||
                    AppLatestVersionNo != null &&
                    AppLatestVersionNo.Equals(other.AppLatestVersionNo)
                ) && 
                (
                    AppLatestBuildNo == other.AppLatestBuildNo ||
                    AppLatestBuildNo != null &&
                    AppLatestBuildNo.Equals(other.AppLatestBuildNo)
                ) && 
                (
                    AppLatestDownloadLinkForAndroid == other.AppLatestDownloadLinkForAndroid ||
                    AppLatestDownloadLinkForAndroid != null &&
                    AppLatestDownloadLinkForAndroid.Equals(other.AppLatestDownloadLinkForAndroid)
                ) && 
                (
                    AppLatestDownloadLinkForIOS == other.AppLatestDownloadLinkForIOS ||
                    AppLatestDownloadLinkForIOS != null &&
                    AppLatestDownloadLinkForIOS.Equals(other.AppLatestDownloadLinkForIOS)
                ) && 
                (
                    AppLatestDownloadLinkForWindows == other.AppLatestDownloadLinkForWindows ||
                    AppLatestDownloadLinkForWindows != null &&
                    AppLatestDownloadLinkForWindows.Equals(other.AppLatestDownloadLinkForWindows)
                ) && 
                (
                    AppLatestVersionMandatory == other.AppLatestVersionMandatory ||
                    AppLatestVersionMandatory != null &&
                    AppLatestVersionMandatory.Equals(other.AppLatestVersionMandatory)
                ) && 
                (
                    AppLatestVersionIsMandatory == other.AppLatestVersionIsMandatory ||
                    AppLatestVersionIsMandatory != null &&
                    AppLatestVersionIsMandatory.Equals(other.AppLatestVersionIsMandatory)
                ) && 
                (
                    AppType == other.AppType ||
                    AppType != null &&
                    AppType.Equals(other.AppType)
                ) && 
                (
                    IsAppNeedToUpdate == other.IsAppNeedToUpdate ||
                    IsAppNeedToUpdate != null &&
                    IsAppNeedToUpdate.Equals(other.IsAppNeedToUpdate)
                ) && 
                (
                    AppLatestVersionList == other.AppLatestVersionList ||
                    AppLatestVersionList != null &&
                    AppLatestVersionList.SequenceEqual(other.AppLatestVersionList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (AppLatestVersionNo != null)
                    hashCode = hashCode * 59 + AppLatestVersionNo.GetHashCode();
                    if (AppLatestBuildNo != null)
                    hashCode = hashCode * 59 + AppLatestBuildNo.GetHashCode();
                    if (AppLatestDownloadLinkForAndroid != null)
                    hashCode = hashCode * 59 + AppLatestDownloadLinkForAndroid.GetHashCode();
                    if (AppLatestDownloadLinkForIOS != null)
                    hashCode = hashCode * 59 + AppLatestDownloadLinkForIOS.GetHashCode();
                    if (AppLatestDownloadLinkForWindows != null)
                    hashCode = hashCode * 59 + AppLatestDownloadLinkForWindows.GetHashCode();
                    if (AppLatestVersionMandatory != null)
                    hashCode = hashCode * 59 + AppLatestVersionMandatory.GetHashCode();
                    if (AppLatestVersionIsMandatory != null)
                    hashCode = hashCode * 59 + AppLatestVersionIsMandatory.GetHashCode();
                    if (AppType != null)
                    hashCode = hashCode * 59 + AppType.GetHashCode();
                    if (IsAppNeedToUpdate != null)
                    hashCode = hashCode * 59 + IsAppNeedToUpdate.GetHashCode();
                    if (AppLatestVersionList != null)
                    hashCode = hashCode * 59 + AppLatestVersionList.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GlassRUNServiceWebApiConfigurationsDTOAppLatestVersionDTO left, GlassRUNServiceWebApiConfigurationsDTOAppLatestVersionDTO right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GlassRUNServiceWebApiConfigurationsDTOAppLatestVersionDTO left, GlassRUNServiceWebApiConfigurationsDTOAppLatestVersionDTO right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
