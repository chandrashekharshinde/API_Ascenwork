/*
 * WebAPIBuild
 *
 * This is glassRUN web api library for 3rd party and internal reference
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class GlassRUNServiceWebAPIManageBayDTOBaySearchDTO : IEquatable<GlassRUNServiceWebAPIManageBayDTOBaySearchDTO>
    { 
        /// <summary>
        /// Gets or Sets BayName
        /// </summary>
        [DataMember(Name="bayName")]
        public string BayName { get; set; }

        /// <summary>
        /// Gets or Sets BayCode
        /// </summary>
        [DataMember(Name="bayCode")]
        public string BayCode { get; set; }

        /// <summary>
        /// Gets or Sets LocationCode
        /// </summary>
        [DataMember(Name="locationCode")]
        public string LocationCode { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedLoadingTimeInMinutes
        /// </summary>
        [DataMember(Name="estimatedLoadingTimeInMinutes")]
        public string EstimatedLoadingTimeInMinutes { get; set; }

        /// <summary>
        /// Gets or Sets QueueId
        /// </summary>
        [DataMember(Name="queueId")]
        public long? QueueId { get; set; }

        /// <summary>
        /// Gets or Sets QueueCode
        /// </summary>
        [DataMember(Name="queueCode")]
        public string QueueCode { get; set; }

        /// <summary>
        /// Gets or Sets QueueName
        /// </summary>
        [DataMember(Name="queueName")]
        public string QueueName { get; set; }

        /// <summary>
        /// Gets or Sets Priority
        /// </summary>
        [DataMember(Name="priority")]
        public long? Priority { get; set; }

        /// <summary>
        /// Gets or Sets PriorityValue
        /// </summary>
        [DataMember(Name="priorityValue")]
        public string PriorityValue { get; set; }

        /// <summary>
        /// Gets or Sets LocationId
        /// </summary>
        [DataMember(Name="locationId")]
        public long? LocationId { get; set; }

        /// <summary>
        /// Gets or Sets OrderType
        /// </summary>
        [DataMember(Name="orderType")]
        public string OrderType { get; set; }

        /// <summary>
        /// Gets or Sets LocationQueueMappingId
        /// </summary>
        [DataMember(Name="locationQueueMappingId")]
        public long? LocationQueueMappingId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name="createdBy")]
        public long? CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets CreatedDate
        /// </summary>
        [DataMember(Name="createdDate")]
        public DateTime? CreatedDate { get; set; }

        /// <summary>
        /// Gets or Sets OrderId
        /// </summary>
        [DataMember(Name="orderId")]
        public long? OrderId { get; set; }

        /// <summary>
        /// Gets or Sets OrderNumber
        /// </summary>
        [DataMember(Name="orderNumber")]
        public string OrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets TruckNumber
        /// </summary>
        [DataMember(Name="truckNumber")]
        public string TruckNumber { get; set; }

        /// <summary>
        /// Gets or Sets QueueSequenceNumber
        /// </summary>
        [DataMember(Name="queueSequenceNumber")]
        public long? QueueSequenceNumber { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedBy
        /// </summary>
        [DataMember(Name="modifiedBy")]
        public long? ModifiedBy { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedDate
        /// </summary>
        [DataMember(Name="modifiedDate")]
        public DateTime? ModifiedDate { get; set; }

        /// <summary>
        /// Gets or Sets TruckSize
        /// </summary>
        [DataMember(Name="truckSize")]
        public string TruckSize { get; set; }

        /// <summary>
        /// Gets or Sets TruckSizeId
        /// </summary>
        [DataMember(Name="truckSizeId")]
        public long? TruckSizeId { get; set; }

        /// <summary>
        /// Gets or Sets PageIndex
        /// </summary>
        [DataMember(Name="pageIndex")]
        public int? PageIndex { get; set; }

        /// <summary>
        /// Gets or Sets PageSize
        /// </summary>
        [DataMember(Name="pageSize")]
        public int? PageSize { get; set; }

        /// <summary>
        /// Gets or Sets RoleId
        /// </summary>
        [DataMember(Name="roleId")]
        public long? RoleId { get; set; }

        /// <summary>
        /// Gets or Sets TotalCount
        /// </summary>
        [DataMember(Name="totalCount")]
        public long? TotalCount { get; set; }

        /// <summary>
        /// Gets or Sets Class
        /// </summary>
        [DataMember(Name="class")]
        public string Class { get; set; }

        /// <summary>
        /// Gets or Sets WhereClause
        /// </summary>
        [DataMember(Name="whereClause")]
        public string WhereClause { get; set; }

        /// <summary>
        /// Gets or Sets CompanyName
        /// </summary>
        [DataMember(Name="companyName")]
        public string CompanyName { get; set; }

        /// <summary>
        /// Gets or Sets Vehicle
        /// </summary>
        [DataMember(Name="vehicle")]
        public string Vehicle { get; set; }

        /// <summary>
        /// Gets or Sets OrderBy
        /// </summary>
        [DataMember(Name="orderBy")]
        public string OrderBy { get; set; }

        /// <summary>
        /// Gets or Sets PageName
        /// </summary>
        [DataMember(Name="pageName")]
        public string PageName { get; set; }

        /// <summary>
        /// Gets or Sets PageControlName
        /// </summary>
        [DataMember(Name="pageControlName")]
        public string PageControlName { get; set; }

        /// <summary>
        /// Gets or Sets IsExportToExcel
        /// </summary>
        [DataMember(Name="isExportToExcel")]
        public bool? IsExportToExcel { get; set; }

        /// <summary>
        /// Gets or Sets ResidentTime
        /// </summary>
        [DataMember(Name="residentTime")]
        public string ResidentTime { get; set; }

        /// <summary>
        /// Gets or Sets AssignedTime
        /// </summary>
        [DataMember(Name="assignedTime")]
        public DateTime? AssignedTime { get; set; }

        /// <summary>
        /// Gets or Sets StartTime
        /// </summary>
        [DataMember(Name="startTime")]
        public DateTime? StartTime { get; set; }

        /// <summary>
        /// Gets or Sets LoginId
        /// </summary>
        [DataMember(Name="loginId")]
        public long? LoginId { get; set; }

        /// <summary>
        /// Gets or Sets CultureId
        /// </summary>
        [DataMember(Name="cultureId")]
        public long? CultureId { get; set; }

        /// <summary>
        /// Gets or Sets UserName
        /// </summary>
        [DataMember(Name="userName")]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name="userId")]
        public long? UserId { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets IsQueueHorizontal
        /// </summary>
        [DataMember(Name="isQueueHorizontal")]
        public bool? IsQueueHorizontal { get; set; }

        /// <summary>
        /// Gets or Sets TimeSinceStartCollection
        /// </summary>
        [DataMember(Name="timeSinceStartCollection")]
        public string TimeSinceStartCollection { get; set; }

        /// <summary>
        /// Gets or Sets UserPersonaMasterId
        /// </summary>
        [DataMember(Name="userPersonaMasterId")]
        public long? UserPersonaMasterId { get; set; }

        /// <summary>
        /// Gets or Sets ChangedRequestBay
        /// </summary>
        [DataMember(Name="changedRequestBay")]
        public string ChangedRequestBay { get; set; }

        /// <summary>
        /// Gets or Sets BaySearchList
        /// </summary>
        [DataMember(Name="baySearchList")]
        public Collection<GlassRUNServiceWebAPIManageBayDTOBaySearchDTO> BaySearchList { get; set; }

        /// <summary>
        /// Gets or Sets BayList
        /// </summary>
        [DataMember(Name="bayList")]
        public Collection<GlassRUNServiceWebAPIManageBayDTOBayDTO> BayList { get; set; }

        /// <summary>
        /// Gets or Sets BaySearchParameterList
        /// </summary>
        [DataMember(Name="baySearchParameterList")]
        public Collection<GlassRUNServiceWebAPIManageBayDTOBaySearchParameterDTO> BaySearchParameterList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GlassRUNServiceWebAPIManageBayDTOBaySearchDTO {\n");
            sb.Append("  BayName: ").Append(BayName).Append("\n");
            sb.Append("  BayCode: ").Append(BayCode).Append("\n");
            sb.Append("  LocationCode: ").Append(LocationCode).Append("\n");
            sb.Append("  EstimatedLoadingTimeInMinutes: ").Append(EstimatedLoadingTimeInMinutes).Append("\n");
            sb.Append("  QueueId: ").Append(QueueId).Append("\n");
            sb.Append("  QueueCode: ").Append(QueueCode).Append("\n");
            sb.Append("  QueueName: ").Append(QueueName).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  PriorityValue: ").Append(PriorityValue).Append("\n");
            sb.Append("  LocationId: ").Append(LocationId).Append("\n");
            sb.Append("  OrderType: ").Append(OrderType).Append("\n");
            sb.Append("  LocationQueueMappingId: ").Append(LocationQueueMappingId).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  CreatedDate: ").Append(CreatedDate).Append("\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  OrderNumber: ").Append(OrderNumber).Append("\n");
            sb.Append("  TruckNumber: ").Append(TruckNumber).Append("\n");
            sb.Append("  QueueSequenceNumber: ").Append(QueueSequenceNumber).Append("\n");
            sb.Append("  ModifiedBy: ").Append(ModifiedBy).Append("\n");
            sb.Append("  ModifiedDate: ").Append(ModifiedDate).Append("\n");
            sb.Append("  TruckSize: ").Append(TruckSize).Append("\n");
            sb.Append("  TruckSizeId: ").Append(TruckSizeId).Append("\n");
            sb.Append("  PageIndex: ").Append(PageIndex).Append("\n");
            sb.Append("  PageSize: ").Append(PageSize).Append("\n");
            sb.Append("  RoleId: ").Append(RoleId).Append("\n");
            sb.Append("  TotalCount: ").Append(TotalCount).Append("\n");
            sb.Append("  Class: ").Append(Class).Append("\n");
            sb.Append("  WhereClause: ").Append(WhereClause).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  Vehicle: ").Append(Vehicle).Append("\n");
            sb.Append("  OrderBy: ").Append(OrderBy).Append("\n");
            sb.Append("  PageName: ").Append(PageName).Append("\n");
            sb.Append("  PageControlName: ").Append(PageControlName).Append("\n");
            sb.Append("  IsExportToExcel: ").Append(IsExportToExcel).Append("\n");
            sb.Append("  ResidentTime: ").Append(ResidentTime).Append("\n");
            sb.Append("  AssignedTime: ").Append(AssignedTime).Append("\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  LoginId: ").Append(LoginId).Append("\n");
            sb.Append("  CultureId: ").Append(CultureId).Append("\n");
            sb.Append("  UserName: ").Append(UserName).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  IsQueueHorizontal: ").Append(IsQueueHorizontal).Append("\n");
            sb.Append("  TimeSinceStartCollection: ").Append(TimeSinceStartCollection).Append("\n");
            sb.Append("  UserPersonaMasterId: ").Append(UserPersonaMasterId).Append("\n");
            sb.Append("  ChangedRequestBay: ").Append(ChangedRequestBay).Append("\n");
            sb.Append("  BaySearchList: ").Append(BaySearchList).Append("\n");
            sb.Append("  BayList: ").Append(BayList).Append("\n");
            sb.Append("  BaySearchParameterList: ").Append(BaySearchParameterList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GlassRUNServiceWebAPIManageBayDTOBaySearchDTO)obj);
        }

        /// <summary>
        /// Returns true if GlassRUNServiceWebAPIManageBayDTOBaySearchDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of GlassRUNServiceWebAPIManageBayDTOBaySearchDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GlassRUNServiceWebAPIManageBayDTOBaySearchDTO other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    BayName == other.BayName ||
                    BayName != null &&
                    BayName.Equals(other.BayName)
                ) && 
                (
                    BayCode == other.BayCode ||
                    BayCode != null &&
                    BayCode.Equals(other.BayCode)
                ) && 
                (
                    LocationCode == other.LocationCode ||
                    LocationCode != null &&
                    LocationCode.Equals(other.LocationCode)
                ) && 
                (
                    EstimatedLoadingTimeInMinutes == other.EstimatedLoadingTimeInMinutes ||
                    EstimatedLoadingTimeInMinutes != null &&
                    EstimatedLoadingTimeInMinutes.Equals(other.EstimatedLoadingTimeInMinutes)
                ) && 
                (
                    QueueId == other.QueueId ||
                    QueueId != null &&
                    QueueId.Equals(other.QueueId)
                ) && 
                (
                    QueueCode == other.QueueCode ||
                    QueueCode != null &&
                    QueueCode.Equals(other.QueueCode)
                ) && 
                (
                    QueueName == other.QueueName ||
                    QueueName != null &&
                    QueueName.Equals(other.QueueName)
                ) && 
                (
                    Priority == other.Priority ||
                    Priority != null &&
                    Priority.Equals(other.Priority)
                ) && 
                (
                    PriorityValue == other.PriorityValue ||
                    PriorityValue != null &&
                    PriorityValue.Equals(other.PriorityValue)
                ) && 
                (
                    LocationId == other.LocationId ||
                    LocationId != null &&
                    LocationId.Equals(other.LocationId)
                ) && 
                (
                    OrderType == other.OrderType ||
                    OrderType != null &&
                    OrderType.Equals(other.OrderType)
                ) && 
                (
                    LocationQueueMappingId == other.LocationQueueMappingId ||
                    LocationQueueMappingId != null &&
                    LocationQueueMappingId.Equals(other.LocationQueueMappingId)
                ) && 
                (
                    CreatedBy == other.CreatedBy ||
                    CreatedBy != null &&
                    CreatedBy.Equals(other.CreatedBy)
                ) && 
                (
                    CreatedDate == other.CreatedDate ||
                    CreatedDate != null &&
                    CreatedDate.Equals(other.CreatedDate)
                ) && 
                (
                    OrderId == other.OrderId ||
                    OrderId != null &&
                    OrderId.Equals(other.OrderId)
                ) && 
                (
                    OrderNumber == other.OrderNumber ||
                    OrderNumber != null &&
                    OrderNumber.Equals(other.OrderNumber)
                ) && 
                (
                    TruckNumber == other.TruckNumber ||
                    TruckNumber != null &&
                    TruckNumber.Equals(other.TruckNumber)
                ) && 
                (
                    QueueSequenceNumber == other.QueueSequenceNumber ||
                    QueueSequenceNumber != null &&
                    QueueSequenceNumber.Equals(other.QueueSequenceNumber)
                ) && 
                (
                    ModifiedBy == other.ModifiedBy ||
                    ModifiedBy != null &&
                    ModifiedBy.Equals(other.ModifiedBy)
                ) && 
                (
                    ModifiedDate == other.ModifiedDate ||
                    ModifiedDate != null &&
                    ModifiedDate.Equals(other.ModifiedDate)
                ) && 
                (
                    TruckSize == other.TruckSize ||
                    TruckSize != null &&
                    TruckSize.Equals(other.TruckSize)
                ) && 
                (
                    TruckSizeId == other.TruckSizeId ||
                    TruckSizeId != null &&
                    TruckSizeId.Equals(other.TruckSizeId)
                ) && 
                (
                    PageIndex == other.PageIndex ||
                    PageIndex != null &&
                    PageIndex.Equals(other.PageIndex)
                ) && 
                (
                    PageSize == other.PageSize ||
                    PageSize != null &&
                    PageSize.Equals(other.PageSize)
                ) && 
                (
                    RoleId == other.RoleId ||
                    RoleId != null &&
                    RoleId.Equals(other.RoleId)
                ) && 
                (
                    TotalCount == other.TotalCount ||
                    TotalCount != null &&
                    TotalCount.Equals(other.TotalCount)
                ) && 
                (
                    Class == other.Class ||
                    Class != null &&
                    Class.Equals(other.Class)
                ) && 
                (
                    WhereClause == other.WhereClause ||
                    WhereClause != null &&
                    WhereClause.Equals(other.WhereClause)
                ) && 
                (
                    CompanyName == other.CompanyName ||
                    CompanyName != null &&
                    CompanyName.Equals(other.CompanyName)
                ) && 
                (
                    Vehicle == other.Vehicle ||
                    Vehicle != null &&
                    Vehicle.Equals(other.Vehicle)
                ) && 
                (
                    OrderBy == other.OrderBy ||
                    OrderBy != null &&
                    OrderBy.Equals(other.OrderBy)
                ) && 
                (
                    PageName == other.PageName ||
                    PageName != null &&
                    PageName.Equals(other.PageName)
                ) && 
                (
                    PageControlName == other.PageControlName ||
                    PageControlName != null &&
                    PageControlName.Equals(other.PageControlName)
                ) && 
                (
                    IsExportToExcel == other.IsExportToExcel ||
                    IsExportToExcel != null &&
                    IsExportToExcel.Equals(other.IsExportToExcel)
                ) && 
                (
                    ResidentTime == other.ResidentTime ||
                    ResidentTime != null &&
                    ResidentTime.Equals(other.ResidentTime)
                ) && 
                (
                    AssignedTime == other.AssignedTime ||
                    AssignedTime != null &&
                    AssignedTime.Equals(other.AssignedTime)
                ) && 
                (
                    StartTime == other.StartTime ||
                    StartTime != null &&
                    StartTime.Equals(other.StartTime)
                ) && 
                (
                    LoginId == other.LoginId ||
                    LoginId != null &&
                    LoginId.Equals(other.LoginId)
                ) && 
                (
                    CultureId == other.CultureId ||
                    CultureId != null &&
                    CultureId.Equals(other.CultureId)
                ) && 
                (
                    UserName == other.UserName ||
                    UserName != null &&
                    UserName.Equals(other.UserName)
                ) && 
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) && 
                (
                    UserId == other.UserId ||
                    UserId != null &&
                    UserId.Equals(other.UserId)
                ) && 
                (
                    Status == other.Status ||
                    Status != null &&
                    Status.Equals(other.Status)
                ) && 
                (
                    IsQueueHorizontal == other.IsQueueHorizontal ||
                    IsQueueHorizontal != null &&
                    IsQueueHorizontal.Equals(other.IsQueueHorizontal)
                ) && 
                (
                    TimeSinceStartCollection == other.TimeSinceStartCollection ||
                    TimeSinceStartCollection != null &&
                    TimeSinceStartCollection.Equals(other.TimeSinceStartCollection)
                ) && 
                (
                    UserPersonaMasterId == other.UserPersonaMasterId ||
                    UserPersonaMasterId != null &&
                    UserPersonaMasterId.Equals(other.UserPersonaMasterId)
                ) && 
                (
                    ChangedRequestBay == other.ChangedRequestBay ||
                    ChangedRequestBay != null &&
                    ChangedRequestBay.Equals(other.ChangedRequestBay)
                ) && 
                (
                    BaySearchList == other.BaySearchList ||
                    BaySearchList != null &&
                    BaySearchList.SequenceEqual(other.BaySearchList)
                ) && 
                (
                    BayList == other.BayList ||
                    BayList != null &&
                    BayList.SequenceEqual(other.BayList)
                ) && 
                (
                    BaySearchParameterList == other.BaySearchParameterList ||
                    BaySearchParameterList != null &&
                    BaySearchParameterList.SequenceEqual(other.BaySearchParameterList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (BayName != null)
                    hashCode = hashCode * 59 + BayName.GetHashCode();
                    if (BayCode != null)
                    hashCode = hashCode * 59 + BayCode.GetHashCode();
                    if (LocationCode != null)
                    hashCode = hashCode * 59 + LocationCode.GetHashCode();
                    if (EstimatedLoadingTimeInMinutes != null)
                    hashCode = hashCode * 59 + EstimatedLoadingTimeInMinutes.GetHashCode();
                    if (QueueId != null)
                    hashCode = hashCode * 59 + QueueId.GetHashCode();
                    if (QueueCode != null)
                    hashCode = hashCode * 59 + QueueCode.GetHashCode();
                    if (QueueName != null)
                    hashCode = hashCode * 59 + QueueName.GetHashCode();
                    if (Priority != null)
                    hashCode = hashCode * 59 + Priority.GetHashCode();
                    if (PriorityValue != null)
                    hashCode = hashCode * 59 + PriorityValue.GetHashCode();
                    if (LocationId != null)
                    hashCode = hashCode * 59 + LocationId.GetHashCode();
                    if (OrderType != null)
                    hashCode = hashCode * 59 + OrderType.GetHashCode();
                    if (LocationQueueMappingId != null)
                    hashCode = hashCode * 59 + LocationQueueMappingId.GetHashCode();
                    if (CreatedBy != null)
                    hashCode = hashCode * 59 + CreatedBy.GetHashCode();
                    if (CreatedDate != null)
                    hashCode = hashCode * 59 + CreatedDate.GetHashCode();
                    if (OrderId != null)
                    hashCode = hashCode * 59 + OrderId.GetHashCode();
                    if (OrderNumber != null)
                    hashCode = hashCode * 59 + OrderNumber.GetHashCode();
                    if (TruckNumber != null)
                    hashCode = hashCode * 59 + TruckNumber.GetHashCode();
                    if (QueueSequenceNumber != null)
                    hashCode = hashCode * 59 + QueueSequenceNumber.GetHashCode();
                    if (ModifiedBy != null)
                    hashCode = hashCode * 59 + ModifiedBy.GetHashCode();
                    if (ModifiedDate != null)
                    hashCode = hashCode * 59 + ModifiedDate.GetHashCode();
                    if (TruckSize != null)
                    hashCode = hashCode * 59 + TruckSize.GetHashCode();
                    if (TruckSizeId != null)
                    hashCode = hashCode * 59 + TruckSizeId.GetHashCode();
                    if (PageIndex != null)
                    hashCode = hashCode * 59 + PageIndex.GetHashCode();
                    if (PageSize != null)
                    hashCode = hashCode * 59 + PageSize.GetHashCode();
                    if (RoleId != null)
                    hashCode = hashCode * 59 + RoleId.GetHashCode();
                    if (TotalCount != null)
                    hashCode = hashCode * 59 + TotalCount.GetHashCode();
                    if (Class != null)
                    hashCode = hashCode * 59 + Class.GetHashCode();
                    if (WhereClause != null)
                    hashCode = hashCode * 59 + WhereClause.GetHashCode();
                    if (CompanyName != null)
                    hashCode = hashCode * 59 + CompanyName.GetHashCode();
                    if (Vehicle != null)
                    hashCode = hashCode * 59 + Vehicle.GetHashCode();
                    if (OrderBy != null)
                    hashCode = hashCode * 59 + OrderBy.GetHashCode();
                    if (PageName != null)
                    hashCode = hashCode * 59 + PageName.GetHashCode();
                    if (PageControlName != null)
                    hashCode = hashCode * 59 + PageControlName.GetHashCode();
                    if (IsExportToExcel != null)
                    hashCode = hashCode * 59 + IsExportToExcel.GetHashCode();
                    if (ResidentTime != null)
                    hashCode = hashCode * 59 + ResidentTime.GetHashCode();
                    if (AssignedTime != null)
                    hashCode = hashCode * 59 + AssignedTime.GetHashCode();
                    if (StartTime != null)
                    hashCode = hashCode * 59 + StartTime.GetHashCode();
                    if (LoginId != null)
                    hashCode = hashCode * 59 + LoginId.GetHashCode();
                    if (CultureId != null)
                    hashCode = hashCode * 59 + CultureId.GetHashCode();
                    if (UserName != null)
                    hashCode = hashCode * 59 + UserName.GetHashCode();
                    if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                    if (UserId != null)
                    hashCode = hashCode * 59 + UserId.GetHashCode();
                    if (Status != null)
                    hashCode = hashCode * 59 + Status.GetHashCode();
                    if (IsQueueHorizontal != null)
                    hashCode = hashCode * 59 + IsQueueHorizontal.GetHashCode();
                    if (TimeSinceStartCollection != null)
                    hashCode = hashCode * 59 + TimeSinceStartCollection.GetHashCode();
                    if (UserPersonaMasterId != null)
                    hashCode = hashCode * 59 + UserPersonaMasterId.GetHashCode();
                    if (ChangedRequestBay != null)
                    hashCode = hashCode * 59 + ChangedRequestBay.GetHashCode();
                    if (BaySearchList != null)
                    hashCode = hashCode * 59 + BaySearchList.GetHashCode();
                    if (BayList != null)
                    hashCode = hashCode * 59 + BayList.GetHashCode();
                    if (BaySearchParameterList != null)
                    hashCode = hashCode * 59 + BaySearchParameterList.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GlassRUNServiceWebAPIManageBayDTOBaySearchDTO left, GlassRUNServiceWebAPIManageBayDTOBaySearchDTO right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GlassRUNServiceWebAPIManageBayDTOBaySearchDTO left, GlassRUNServiceWebAPIManageBayDTOBaySearchDTO right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
